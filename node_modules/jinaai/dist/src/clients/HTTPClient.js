"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HTTPClient = void 0;
var tslib_1 = require("tslib");
var HTTPClient = (function () {
    function HTTPClient(params) {
        var baseURL = params.baseURL, headers = params.headers, options = params.options;
        this.baseURL = baseURL;
        this.headers = headers;
        this.options = options;
    }
    HTTPClient.prototype.get = function (url) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, fetch(this.baseURL + url, {
                            headers: this.headers,
                        })];
                    case 1:
                        response = _a.sent();
                        return [2, response.json()];
                }
            });
        });
    };
    HTTPClient.prototype.post = function (url, data, toJson) {
        if (toJson === void 0) { toJson = true; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response, responseData;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, fetch(this.baseURL + url, tslib_1.__assign({ method: 'POST', body: JSON.stringify(data), headers: this.headers }, this.options))];
                    case 1:
                        response = _a.sent();
                        if (!(toJson == false)) return [3, 2];
                        if (!response.body)
                            throw 'Remote API Error, body is missing';
                        return [2, response.body.getReader()];
                    case 2: return [4, response.json()];
                    case 3:
                        responseData = _a.sent();
                        if (responseData.error)
                            throw responseData.error;
                        return [2, responseData];
                }
            });
        });
    };
    HTTPClient.prototype.put = function (url, data) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, fetch(this.baseURL + url, {
                            method: 'PUT',
                            body: JSON.stringify(data),
                            headers: this.headers,
                        })];
                    case 1:
                        response = _a.sent();
                        return [2, response.json()];
                }
            });
        });
    };
    HTTPClient.prototype.delete = function (url) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var response;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, fetch(this.baseURL + url, {
                            method: 'DELETE',
                            headers: this.headers,
                        })];
                    case 1:
                        response = _a.sent();
                        return [2, response.json()];
                }
            });
        });
    };
    return HTTPClient;
}());
exports.HTTPClient = HTTPClient;
//# sourceMappingURL=HTTPClient.js.map