{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport uploadIcon from './assets/upload-icon.png';\n\n// function App() {\n//   const [uploadedFiles, setUploadedFiles] = useState([]);\n//   const [isUpscaled, setIsUpscaled] = useState(false);\n//   const [isTitleSet, setIsTitleSet] = useState(false);\n//   const [editedFiles, setEditedFiles] = useState([]);\n\n//   const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n\n//   useEffect(() => {\n//     const initialEditedFiles = uploadedFiles.map(file => ({\n//         ...file,\n//         editedTitle: file.generatedFilename,\n//         editedKeywords: file.keywords\n//     }));\n//     setEditedFiles(initialEditedFiles);\n//   }, [uploadedFiles]);\n\n//   const handleTitleChange = (index, event) => {\n//     const updatedFiles = [...editedFiles];\n//     updatedFiles[index].editedTitle = event.target.value;\n//     setEditedFiles(updatedFiles);\n//   };\n\n//   const generateCsvFile = async () => {\n//     try {\n//       const response = await fetch(`${serverOrigin}/generate-csv`);\n//       if (response.ok) {\n//         console.log('CSV file generated successfully.');\n//       } else {\n//         console.error('Failed to generate CSV file.');\n//       }\n//     } catch (error) {\n//       console.error('Error generating CSV file:', error);\n//     }\n//   };\n\n//   const downloadRecords = async () => {\n//     try {\n//       const response = await fetch(`${serverOrigin}/download-records`);\n//       if (response.ok) {\n//         // Retrieve the binary blob from the response\n//         const blob = await response.blob();\n//         // Create a link element and trigger download\n//         const downloadUrl = URL.createObjectURL(blob);\n//         const a = document.createElement('a');\n//         a.href = downloadUrl;\n//         a.download = 'records.zip';\n//         document.body.appendChild(a);\n//         a.click();\n//         a.remove();\n//         URL.revokeObjectURL(downloadUrl); // Clean up the URL object\n//         console.log('Records downloaded successfully.');\n//       } else {\n//         console.error('Failed to download records.');\n//       }\n//     } catch (error) {\n//       console.error('Error downloading records:', error);\n//     }\n//   };\n\n//   const handleKeywordsChange = (index, event) => {\n//       const updatedFiles = [...editedFiles];\n//       updatedFiles[index].editedKeywords = event.target.value;\n//       setEditedFiles(updatedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData(event.target);\n//     // Set isUpscaled based on the checkbox value\n//     const upscaleImages = formData.get('upscaleImages') === 'true';\n//     setIsUpscaled(upscaleImages);\n//     const titleSet = formData.get('genTitle') === 'true';\n//     setIsTitleSet(titleSet);\n\n//     try {\n//       const response = await fetch('http://localhost:3001/uploads', {\n//         method: 'POST',\n//         body: formData,\n//      });\n\n//       if (response.ok) {\n//         if (response.ok) {\n//           console.log('Folder uploaded successfully');\n//           const text = await response.text(); // get the response body\n//           console.log(\"Server Response:\", text);\n//           // Fetch updated photoList.json\n//           const photoListResponse = await fetch('http://localhost:3001/photoList');\n//           const newPhotoList = await photoListResponse.json();\n//           setUploadedFiles(newPhotoList);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('There was a problem with the upload:', error);\n//     }\n//   };\n\n//   const handleJsonEditorSubmit = async (event) => {\n//     event.preventDefault();\n//     const updatedData = editedFiles.map(file => ({\n//       originalFilename: file.originalFilename,\n//       generatedFilename: file.editedTitle,\n//       keywords: file.editedKeywords\n//     }));\n//     try {\n//       const response = await fetch('http://localhost:3001/update', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(updatedData)\n//       });\n//       if (response.ok) {\n//         console.log('JSON data updated successfully');\n//         const text = await response.text();\n//         console.log('Server Response:', text);\n//       } else {\n//         const text = await response.text();\n//         console.error('Error updating JSON data:', text);\n//       }\n//     } catch (error) {\n//       console.error('There was a problem with updating the JSON data:', error);\n//     }\n//   };\n\n//   return (\n//     <main className=\"flex justify-center items-center gap-4 flex-col min-h-screen w-full\">\n\n//       <div className=\"w-[70%]\">\n//         <h1 className=\"text-[32px] font-bold\">Adobe Stock Photo Manager</h1>\n//         <h2 className=\"text-[20px] italic\">AI Upscale, AI Keyword & AI Title Generation, and Batch Upload to Adobe Stock</h2>\n//       </div>\n//       <ol className=\"w-[70%] flex justify-between\">\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">1</span>Upload Photos/Folder</li>\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">2</span>Input Adobe Stock Account</li>\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">3</span>Click Upload to Submit!</li>\n//       </ol>\n\n//       <div id=\"folderUpload\">\n\n//         <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n\n//           <label id=\"folderUpload-inputText\" htmlFor=\"folderUpload\">Select a Folder:</label>\n//           <input id=\"folderUpload-inputButton\" type=\"file\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\n\n//           <div id=\"folderUpload-optionBar\" className=\"flex flex-wrap justify-between\">\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-upscaleImages\" name=\"upscaleImages\" value=\"true\"></input>\n//             <p>AI Upscale Images</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genKeyword\" name=\"genKeyword\" value=\"true\"></input>\n//             <p>AI Generate Keywords</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genQuality\" name=\"genQuality\" value=\"true\"></input>\n//             <p>AI Generate Quality Score</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genTitle\" name=\"genTitle\" value=\"true\"></input>\n//             <p>AI Generate Title</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-useFilenames\" name=\"useFilenames\" value=\"true\"></input>\n//             <p>Use Filenames in Title Generation</p></span>\n//           </div>\n\n//           <input id=\"folderUpload-submitButton\" type=\"submit\" value=\"Upload\" />\n\n//         </form>\n\n//       </div>\n\n//       <form id=\"jsonEditor-formBody\" onSubmit={handleJsonEditorSubmit} encType=\"multipart/form-data\" className=\"flex flex-col items-center gap-4\">\n//         <div className=\"w-[100%] flex justify-center\">\n//           <ul id=\"liveLookList\" className=\"flex flex-wrap w-full h-full gap-5\">\n//             {uploadedFiles.map((file, index) => {\n//               // Debug: Print out the image URL\n//               const imageUrl =\n//               `${serverOrigin}${isUpscaled ? '/upscaled' : '/uploads'}/${isUpscaled && isTitleSet ? `${file.sanitizedTitle}.jpg` : `${file.originalFilename}`}`;\n//               console.log(`Image URL: ${imageUrl}`);\n\n//               return (\n//                 <li key={index} className=\"flex gap-5 mx-5\">\n//                   <div className=\"w-full max-w-[360px]\">\n//                     <img src={imageUrl} alt={file.generatedFilename} className=\"object-cover w-full h-full max-w-[300px] max-h-[200px] -mb-[1.38em] rounded-md\" />\n\n//                     <div className=\"flex justify-between w-full\">\n//                       <span className=\"bg-white pl-1 pr-2 rounded-tr-md\">\n//                         <span className=\"font-bold\">Size:</span> {isUpscaled ? file.upscaledFilesize : file.filesize}\n//                       </span>\n//                       <span className=\"bg-white pl-2 pr-1 rounded-tl-md flex gap-2\">\n//                         <span className=\"font-bold\">Quality Score:</span>\n//                         <span className=\"\">{parseFloat(file.qualityScore).toFixed(4)}</span>\n//                       </span>\n//                     </div>\n//                   </div>\n\n//                   <div className=\"flex flex-col justify-evenly\">\n//                       <span className=\"flex gap-16\">\n//                         <span className=\"font-bold\">Title:</span>\n//                         <input id=\"titleEditor\" value={editedFiles[index]?.editedTitle || ''} onChange={(event) => handleTitleChange(index, event)} />\n//                       </span>\n//                       <span className=\"pb-10 flex gap-6\">\n//                         <span className=\"font-bold\">Keywords:</span>\n//                         <input className=\"keywordEditor\" value={editedFiles[index]?.editedKeywords || ''} onChange={(event) => handleKeywordsChange(index, event)} />\n//                       </span>\n//                   </div>\n\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </div>\n//         <div className=\"flex gap-5\">\n//           <input id=\"jsonEditor-submitButton\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"submit\" value=\"Update\" />\n//           <input id=\"generateAdobeDataSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Generate CSV\" onClick={generateCsvFile} />\n//           <input id=\"recordDownloadSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Download\" onClick={downloadRecords} />\n//         </div>\n//       </form>\n\n//     </main>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dropzoneRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const fileListRef = useRef(null);\n  useEffect(() => {\n    const dropzone = dropzoneRef.current;\n    const fileInput = fileInputRef.current;\n    const handleDragOver = e => {\n      e.preventDefault();\n      dropzone.classList.add('border-blue-500', 'border-2');\n    };\n    const handleDragLeave = () => {\n      dropzone.classList.remove('border-blue-500', 'border-2');\n    };\n    const handleDrop = e => {\n      e.preventDefault();\n      dropzone.classList.remove('border-blue-500', 'border-2');\n      const files = e.dataTransfer.files;\n      handleFiles(files);\n    };\n    const handleChange = e => {\n      const files = e.target.files;\n      handleFiles(files);\n    };\n\n    // Attach the event listeners\n    dropzone.addEventListener('dragover', handleDragOver);\n    dropzone.addEventListener('dragleave', handleDragLeave);\n    dropzone.addEventListener('drop', handleDrop);\n    fileInput.addEventListener('change', handleChange);\n\n    // Cleanup the event listeners\n    return () => {\n      dropzone.removeEventListener('dragover', handleDragOver);\n      dropzone.removeEventListener('dragleave', handleDragLeave);\n      dropzone.removeEventListener('drop', handleDrop);\n      fileInput.removeEventListener('change', handleChange);\n    };\n  }, []);\n  function handleFiles(files) {\n    const fileList = fileListRef.current;\n    fileList.innerHTML = '';\n    for (const file of files) {\n      const listItem = document.createElement('div');\n      listItem.textContent = `${file.name} (${formatBytes(file.size)})`;\n      fileList.appendChild(listItem);\n    }\n  }\n  function formatBytes(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flex justify-center items-center flex-col min-h-screen w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-stretch items-center w-full h-[10.5vh] min-h-[75px] px-8 bg-green-50\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-white text-[40px] drop-shadow-lg\",\n        children: \"Adobe Stock Photo Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-evenly w-full h-[66vh] min-h-[510px] px-8 bg-green-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"font-bold text-white text-[40px] drop-shadow-lg\",\n        children: \"Adobe Stock Photo Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-[800px] p-9 bg-white rounded-lg shadow-lg lg:self-end self-center mx-20\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center text-2xl sm:text-2xl font-semibold mb-4 text-gray-800\",\n          children: \"File Drop and Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: dropzoneRef,\n          className: \"bg-gray-100 p-8 text-center rounded-lg border-dashed border-2 border-gray-300 hover:border-green-600 transition duration-300 ease-in-out transform hover:shadow-md group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            className: \"cursor-pointer flex flex-col items-center space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-16 h-16 text-gray-400 group-hover:text-green-600 transition duration-300 ease-in-out transform\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"Drag and drop your files here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"(or click to select)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            className: \"hidden\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-6 text-center\",\n          ref: fileListRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-stretch items-center w-full h-[21vh] min-h-[165px] px-8 bg-green-300 mt-[2.5vh]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative mx-auto h-16 w-64 flex justify-center items-center group transition duration-300 ease-in-out\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ring-2 ring-green-600 h-16 w-64 items-center rounded-xl shadow-2xl cursor-pointer absolute overflow-hidden transform hover:scale-x-110 transition duration-300 ease-out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center px-3 text-green-700 font-semibold z-10 pointer-events-none transition-transform duration-200 ease-in-out group-hover:-translate-x-4 h-full flex items-center ml-9 bg-green-300\",\n          children: \"AI Upscale Images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadIcon,\n          alt: \"Upload Icon\",\n          className: \"h-full max-h-[30px] transition-transform duration-200 ease-in-out -translate-x-9 opacity-0 group-hover:opacity-100 group-hover:-translate-x-3 w-[33px]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RXBo2lW+/LuKFUjJq/ZdCFAW7vs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","uploadIcon","jsxDEV","_jsxDEV","App","_s","dropzoneRef","fileInputRef","fileListRef","dropzone","current","fileInput","handleDragOver","e","preventDefault","classList","add","handleDragLeave","remove","handleDrop","files","dataTransfer","handleFiles","handleChange","target","addEventListener","removeEventListener","fileList","innerHTML","file","listItem","document","createElement","textContent","name","formatBytes","size","appendChild","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","htmlFor","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","multiple","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/App.jsx"],"sourcesContent":["import \"./index.css\";\r\nimport React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport uploadIcon from './assets/upload-icon.png';\r\n\r\n\r\n// function App() {\r\n//   const [uploadedFiles, setUploadedFiles] = useState([]);\r\n//   const [isUpscaled, setIsUpscaled] = useState(false);\r\n//   const [isTitleSet, setIsTitleSet] = useState(false);\r\n//   const [editedFiles, setEditedFiles] = useState([]);\r\n\r\n//   const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n\r\n//   useEffect(() => {\r\n//     const initialEditedFiles = uploadedFiles.map(file => ({\r\n//         ...file,\r\n//         editedTitle: file.generatedFilename,\r\n//         editedKeywords: file.keywords\r\n//     }));\r\n//     setEditedFiles(initialEditedFiles);\r\n//   }, [uploadedFiles]);\r\n\r\n//   const handleTitleChange = (index, event) => {\r\n//     const updatedFiles = [...editedFiles];\r\n//     updatedFiles[index].editedTitle = event.target.value;\r\n//     setEditedFiles(updatedFiles);\r\n//   };\r\n\r\n//   const generateCsvFile = async () => {\r\n//     try {\r\n//       const response = await fetch(`${serverOrigin}/generate-csv`);\r\n//       if (response.ok) {\r\n//         console.log('CSV file generated successfully.');\r\n//       } else {\r\n//         console.error('Failed to generate CSV file.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error generating CSV file:', error);\r\n//     }\r\n//   };\r\n\r\n//   const downloadRecords = async () => {\r\n//     try {\r\n//       const response = await fetch(`${serverOrigin}/download-records`);\r\n//       if (response.ok) {\r\n//         // Retrieve the binary blob from the response\r\n//         const blob = await response.blob();\r\n//         // Create a link element and trigger download\r\n//         const downloadUrl = URL.createObjectURL(blob);\r\n//         const a = document.createElement('a');\r\n//         a.href = downloadUrl;\r\n//         a.download = 'records.zip';\r\n//         document.body.appendChild(a);\r\n//         a.click();\r\n//         a.remove();\r\n//         URL.revokeObjectURL(downloadUrl); // Clean up the URL object\r\n//         console.log('Records downloaded successfully.');\r\n//       } else {\r\n//         console.error('Failed to download records.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error downloading records:', error);\r\n//     }\r\n//   };\r\n  \r\n//   const handleKeywordsChange = (index, event) => {\r\n//       const updatedFiles = [...editedFiles];\r\n//       updatedFiles[index].editedKeywords = event.target.value;\r\n//       setEditedFiles(updatedFiles);\r\n//   };\r\n  \r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n    \r\n//     const formData = new FormData(event.target);\r\n//     // Set isUpscaled based on the checkbox value\r\n//     const upscaleImages = formData.get('upscaleImages') === 'true';\r\n//     setIsUpscaled(upscaleImages);\r\n//     const titleSet = formData.get('genTitle') === 'true';\r\n//     setIsTitleSet(titleSet);\r\n    \r\n//     try {\r\n//       const response = await fetch('http://localhost:3001/uploads', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//      });\r\n  \r\n//       if (response.ok) {\r\n//         if (response.ok) {\r\n//           console.log('Folder uploaded successfully');\r\n//           const text = await response.text(); // get the response body\r\n//           console.log(\"Server Response:\", text);\r\n//           // Fetch updated photoList.json\r\n//           const photoListResponse = await fetch('http://localhost:3001/photoList');\r\n//           const newPhotoList = await photoListResponse.json();\r\n//           setUploadedFiles(newPhotoList);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was a problem with the upload:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleJsonEditorSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const updatedData = editedFiles.map(file => ({\r\n//       originalFilename: file.originalFilename,\r\n//       generatedFilename: file.editedTitle,\r\n//       keywords: file.editedKeywords\r\n//     }));\r\n//     try {\r\n//       const response = await fetch('http://localhost:3001/update', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify(updatedData)\r\n//       });\r\n//       if (response.ok) {\r\n//         console.log('JSON data updated successfully');\r\n//         const text = await response.text();\r\n//         console.log('Server Response:', text);\r\n//       } else {\r\n//         const text = await response.text();\r\n//         console.error('Error updating JSON data:', text);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was a problem with updating the JSON data:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <main className=\"flex justify-center items-center gap-4 flex-col min-h-screen w-full\">\r\n\r\n//       <div className=\"w-[70%]\">\r\n//         <h1 className=\"text-[32px] font-bold\">Adobe Stock Photo Manager</h1>\r\n//         <h2 className=\"text-[20px] italic\">AI Upscale, AI Keyword & AI Title Generation, and Batch Upload to Adobe Stock</h2>\r\n//       </div>\r\n//       <ol className=\"w-[70%] flex justify-between\">\r\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">1</span>Upload Photos/Folder</li>\r\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">2</span>Input Adobe Stock Account</li>\r\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">3</span>Click Upload to Submit!</li>\r\n//       </ol>\r\n      \r\n//       <div id=\"folderUpload\">\r\n        \r\n\r\n//         <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n          \r\n//           <label id=\"folderUpload-inputText\" htmlFor=\"folderUpload\">Select a Folder:</label>\r\n//           <input id=\"folderUpload-inputButton\" type=\"file\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n                    \r\n//           <div id=\"folderUpload-optionBar\" className=\"flex flex-wrap justify-between\">\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-upscaleImages\" name=\"upscaleImages\" value=\"true\"></input>\r\n//             <p>AI Upscale Images</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genKeyword\" name=\"genKeyword\" value=\"true\"></input>\r\n//             <p>AI Generate Keywords</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genQuality\" name=\"genQuality\" value=\"true\"></input>\r\n//             <p>AI Generate Quality Score</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genTitle\" name=\"genTitle\" value=\"true\"></input>\r\n//             <p>AI Generate Title</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-useFilenames\" name=\"useFilenames\" value=\"true\"></input>\r\n//             <p>Use Filenames in Title Generation</p></span>\r\n//           </div>\r\n                    \r\n//           <input id=\"folderUpload-submitButton\" type=\"submit\" value=\"Upload\" />\r\n          \r\n//         </form>\r\n\r\n//       </div>\r\n\r\n//       <form id=\"jsonEditor-formBody\" onSubmit={handleJsonEditorSubmit} encType=\"multipart/form-data\" className=\"flex flex-col items-center gap-4\">\r\n//         <div className=\"w-[100%] flex justify-center\">\r\n//           <ul id=\"liveLookList\" className=\"flex flex-wrap w-full h-full gap-5\">\r\n//             {uploadedFiles.map((file, index) => {\r\n//               // Debug: Print out the image URL\r\n//               const imageUrl =\r\n//               `${serverOrigin}${isUpscaled ? '/upscaled' : '/uploads'}/${isUpscaled && isTitleSet ? `${file.sanitizedTitle}.jpg` : `${file.originalFilename}`}`;\r\n//               console.log(`Image URL: ${imageUrl}`);\r\n\r\n//               return (\r\n//                 <li key={index} className=\"flex gap-5 mx-5\">\r\n//                   <div className=\"w-full max-w-[360px]\">\r\n//                     <img src={imageUrl} alt={file.generatedFilename} className=\"object-cover w-full h-full max-w-[300px] max-h-[200px] -mb-[1.38em] rounded-md\" />\r\n\r\n//                     <div className=\"flex justify-between w-full\">\r\n//                       <span className=\"bg-white pl-1 pr-2 rounded-tr-md\">\r\n//                         <span className=\"font-bold\">Size:</span> {isUpscaled ? file.upscaledFilesize : file.filesize}\r\n//                       </span>\r\n//                       <span className=\"bg-white pl-2 pr-1 rounded-tl-md flex gap-2\">\r\n//                         <span className=\"font-bold\">Quality Score:</span>\r\n//                         <span className=\"\">{parseFloat(file.qualityScore).toFixed(4)}</span>\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n\r\n                \r\n//                   <div className=\"flex flex-col justify-evenly\">\r\n//                       <span className=\"flex gap-16\">\r\n//                         <span className=\"font-bold\">Title:</span>\r\n//                         <input id=\"titleEditor\" value={editedFiles[index]?.editedTitle || ''} onChange={(event) => handleTitleChange(index, event)} />\r\n//                       </span>\r\n//                       <span className=\"pb-10 flex gap-6\">\r\n//                         <span className=\"font-bold\">Keywords:</span>\r\n//                         <input className=\"keywordEditor\" value={editedFiles[index]?.editedKeywords || ''} onChange={(event) => handleKeywordsChange(index, event)} />\r\n//                       </span>\r\n//                   </div>\r\n\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </div>\r\n//         <div className=\"flex gap-5\">\r\n//           <input id=\"jsonEditor-submitButton\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"submit\" value=\"Update\" />\r\n//           <input id=\"generateAdobeDataSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Generate CSV\" onClick={generateCsvFile} />\r\n//           <input id=\"recordDownloadSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Download\" onClick={downloadRecords} />\r\n//         </div>\r\n//       </form>\r\n\r\n//     </main>\r\n//   );\r\n// }\r\n\r\nfunction App() {\r\n  const dropzoneRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n  const fileListRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const dropzone = dropzoneRef.current;\r\n    const fileInput = fileInputRef.current;\r\n\r\n    const handleDragOver = (e) => {\r\n      e.preventDefault();\r\n      dropzone.classList.add('border-blue-500', 'border-2');\r\n    };\r\n\r\n    const handleDragLeave = () => {\r\n      dropzone.classList.remove('border-blue-500', 'border-2');\r\n    };\r\n\r\n    const handleDrop = (e) => {\r\n      e.preventDefault();\r\n      dropzone.classList.remove('border-blue-500', 'border-2');\r\n\r\n      const files = e.dataTransfer.files;\r\n      handleFiles(files);\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n      const files = e.target.files;\r\n      handleFiles(files);\r\n    };\r\n\r\n    // Attach the event listeners\r\n    dropzone.addEventListener('dragover', handleDragOver);\r\n    dropzone.addEventListener('dragleave', handleDragLeave);\r\n    dropzone.addEventListener('drop', handleDrop);\r\n    fileInput.addEventListener('change', handleChange);\r\n\r\n    // Cleanup the event listeners\r\n    return () => {\r\n      dropzone.removeEventListener('dragover', handleDragOver);\r\n      dropzone.removeEventListener('dragleave', handleDragLeave);\r\n      dropzone.removeEventListener('drop', handleDrop);\r\n      fileInput.removeEventListener('change', handleChange);\r\n    };\r\n  }, []);\r\n\r\n  function handleFiles(files) {\r\n    const fileList = fileListRef.current;\r\n    fileList.innerHTML = '';\r\n\r\n    for (const file of files) {\r\n      const listItem = document.createElement('div');\r\n      listItem.textContent = `${file.name} (${formatBytes(file.size)})`;\r\n      fileList.appendChild(listItem);\r\n    }\r\n  }\r\n  \r\n  function formatBytes(bytes) {\r\n      if (bytes === 0) return '0 Bytes';\r\n  \r\n      const k = 1024;\r\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  \r\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  }\r\n\r\n  return (\r\n    <main className=\"flex justify-center items-center flex-col min-h-screen w-full\">\r\n      {/* HEADER CONTENT */}\r\n      <div className=\"flex justify-stretch items-center w-full h-[10.5vh] min-h-[75px] px-8 bg-green-50\">\r\n        <h1 className=\"font-bold text-white text-[40px] drop-shadow-lg\">Adobe Stock Photo Manager</h1>\r\n      </div>\r\n\r\n      {/* MAIN CONTENT */}\r\n      <div className=\"flex flex-col justify-evenly w-full h-[66vh] min-h-[510px] px-8 bg-green-300\">\r\n        <h1 className=\"font-bold text-white text-[40px] drop-shadow-lg\">Adobe Stock Photo Manager</h1>\r\n\r\n        {/* IMAGE INPUT */}\r\n        <div className=\"w-full max-w-[800px] p-9 bg-white rounded-lg shadow-lg lg:self-end self-center mx-20\">\r\n          <h1 className=\"text-center text-2xl sm:text-2xl font-semibold mb-4 text-gray-800\">File Drop and Upload</h1>\r\n          <div\r\n            ref={dropzoneRef}\r\n            className=\"bg-gray-100 p-8 text-center rounded-lg border-dashed border-2 border-gray-300 hover:border-green-600 transition duration-300 ease-in-out transform hover:shadow-md group\"\r\n          >\r\n            <label htmlFor=\"fileInput\" className=\"cursor-pointer flex flex-col items-center space-y-2\">\r\n              <svg className=\"w-16 h-16 text-gray-400 group-hover:text-green-600 transition duration-300 ease-in-out transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n              </svg>\r\n              <span className=\"text-gray-600\">Drag and drop your files here</span>\r\n              <span className=\"text-gray-500 text-sm\">(or click to select)</span>\r\n            </label>\r\n            <input ref={fileInputRef} type=\"file\" className=\"hidden\" multiple />\r\n          </div>\r\n          <div className=\"mt-6 text-center\" ref={fileListRef}></div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      {/* OPTIONS */}\r\n      <div className=\"flex justify-stretch items-center w-full h-[21vh] min-h-[165px] px-8 bg-green-300 mt-[2.5vh]\">\r\n      \r\n        <div className=\"relative mx-auto h-16 w-64 flex justify-center items-center group transition duration-300 ease-in-out\">\r\n\r\n          <div className=\"ring-2 ring-green-600 h-16 w-64 items-center rounded-xl shadow-2xl cursor-pointer absolute overflow-hidden transform hover:scale-x-110 transition duration-300 ease-out\">\r\n          </div>\r\n          <p className=\"text-center px-3 text-green-700 font-semibold z-10 pointer-events-none transition-transform duration-200 ease-in-out group-hover:-translate-x-4 h-full flex items-center ml-9 bg-green-300\">AI Upscale Images</p>\r\n          <img src={uploadIcon} alt=\"Upload Icon\" className=\"h-full max-h-[30px] transition-transform duration-200 ease-in-out -translate-x-9 opacity-0 group-hover:opacity-100 group-hover:-translate-x-3 w-[33px]\" />\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}