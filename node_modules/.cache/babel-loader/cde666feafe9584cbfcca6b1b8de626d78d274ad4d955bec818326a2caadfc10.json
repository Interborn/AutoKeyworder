{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\upload\\\\UpscaleImageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport uploadIcon from '../../assets/upload-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateImageInput({\n  onUploadClicked\n}) {\n  _s();\n  const fileListRef = useRef(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isFileAdded, setIsFileAdded] = useState(false);\n  const [isFolderUploaded, setIsFolderUploaded] = useState(false);\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n  const {\n    acceptedFiles,\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop: acceptedFiles => handleFiles(acceptedFiles),\n    multiple: true\n  });\n  useEffect(() => {\n    const initialEditedFiles = acceptedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setUploadedFiles(initialEditedFiles);\n  }, [acceptedFiles]);\n  useEffect(() => {\n    if (acceptedFiles.length > 0) {\n      onUploadClicked(acceptedFiles);\n    }\n  }, [acceptedFiles, onUploadClicked]);\n  const handleFiles = async files => {\n    fileListRef.current.innerHTML = '';\n    let totalSize = 0;\n    let isFolder = false;\n    for (const file of files) {\n      totalSize += file.size;\n      if (file.webkitRelativePath) {\n        isFolder = true;\n      }\n    }\n    setIsFolderUploaded(isFolder);\n    if (isFolder) {\n      const folderName = files[0].webkitRelativePath.split('/')[0];\n      fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\n    } else {\n      for (const file of files) {\n        const listItem = document.createElement('div');\n        const maxNameLength = 33;\n        let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\n        listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\n        fileListRef.current.appendChild(listItem);\n      }\n    }\n    setIsFileAdded(files.length > 0);\n\n    // Automatically send files to the server for processing\n    const formData = new FormData();\n    for (const file of files) {\n      formData.append('files', file);\n    }\n    try {\n      const response = await fetch(`${serverOrigin}/processFiles`, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Files processed successfully');\n        const processedData = await response.json();\n        setUploadedFiles(processedData);\n        // Trigger any additional actions needed after file processing\n        onUploadClicked(processedData);\n      } else {\n        console.error('Failed to process files');\n        // Handle error UI feedback\n      }\n    } catch (error) {\n      console.error('Error processing files:', error);\n      // Handle error UI feedback\n    }\n  };\n\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    // Set isUpscaled based on the checkbox value\n    const upscaleImages = 'true';\n    setIsUpscaled(upscaleImages);\n    const qualitySet = 'true';\n    setIsQualitySet(qualitySet);\n    try {\n      const response = await fetch('http://localhost:3001/uploads', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Folder uploaded successfully');\n        const text = await response.text(); // get the response body\n        console.log(\"Server Response:\", text);\n        // Fetch updated photoList.json\n        const photoListResponse = await fetch('http://localhost:3001/photoList');\n        const newPhotoList = await photoListResponse.json();\n        setUploadedFiles(newPhotoList);\n        onUploadClicked(newPhotoList, upscaleImages, qualitySet);\n      }\n    } catch (error) {\n      console.error('There was a problem with the upload:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex lg:flex-row flex-col w-full transition-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-input h-full w-full lg:max-w-[600px] lg:max-h-[600px] pt-5 pb-7 px-10 bg-white rounded-lg shadow-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"folderUpload-formBody\",\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: dropzoneRef,\n          className: `bg-stone-900 px-8 py-16 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg group ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            className: \"cursor-pointer flex flex-col items-center space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-indigo-200 \",\n              children: \"Drag and drop your files here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-indigo-200 text-sm\",\n              children: \"(or click to select)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            ref: fileInputRef,\n            type: \"file\",\n            className: \"hidden file-list\",\n            name: \"folderUpload\",\n            webkitdirectory: \"true\",\n            directory: \"true\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-full items-center gap-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center w-full text-slate-400 ring-slate-200 ring-2 py-1.5 h-[36px]\",\n            ref: fileListRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-full justify-around gap-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"folderUpload-submitButton\",\n            className: \"relative mx-auto h-10 w-full flex justify-center items-center group transition-opacity duration-300 ease-in-out\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"folderUpload-submitButton\",\n              type: \"submit\",\n              className: \"bg-green-300 py-2 h-10 w-full items-center rounded-sm shadow-lg hover:shadow-xl cursor-pointer absolute overflow-hidden transform transition duration-300 ease-in-out\",\n              disabled: !isFileAdded\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-center pl-3 pr-1 mr-2 text-green-700 font-bold z-10 pointer-events-none transition-transform duration-200 ease-in-out group-hover:-translate-x-4 h-full flex items-center ml-9 bg-green-300\",\n              children: \"Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: uploadIcon,\n              alt: \"Upload Icon\",\n              className: \"cursor-pointer h-full max-h-[26px] transition duration-300 ease-in-out -translate-x-10 opacity-20 group-hover:opacity-80 group-hover:-translate-x-3 w-[28px]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateImageInput, \"c71PbbvtZBZa6XGUw3ZURgI4KU4=\", false, function () {\n  return [useDropzone];\n});\n_c = UpdateImageInput;\n;\nexport default UpdateImageInput;\nvar _c;\n$RefreshReg$(_c, \"UpdateImageInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","useDropzone","uploadIcon","jsxDEV","_jsxDEV","UpdateImageInput","onUploadClicked","_s","fileListRef","uploadedFiles","setUploadedFiles","isFileAdded","setIsFileAdded","isFolderUploaded","setIsFolderUploaded","serverOrigin","window","location","protocol","hostname","acceptedFiles","getRootProps","getInputProps","onDrop","handleFiles","multiple","initialEditedFiles","map","file","editedTitle","generatedFilename","editedKeywords","keywords","length","files","current","innerHTML","totalSize","isFolder","size","webkitRelativePath","folderName","split","textContent","formatBytes","listItem","document","createElement","maxNameLength","truncatedName","name","substring","appendChild","formData","FormData","append","response","fetch","method","body","ok","console","log","processedData","json","error","bytes","k","sizes","i","Math","floor","parseFloat","pow","toFixed","handleSubmit","event","preventDefault","target","upscaleImages","setIsUpscaled","qualitySet","setIsQualitySet","text","photoListResponse","newPhotoList","className","children","id","onSubmit","encType","ref","dropzoneRef","htmlFor","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","fileInputRef","type","webkitdirectory","directory","disabled","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/upload/UpscaleImageInput.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport uploadIcon from '../../assets/upload-icon.png';\r\n\r\nfunction UpdateImageInput({ onUploadClicked }) {\r\n    const fileListRef = useRef(null);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [isFileAdded, setIsFileAdded] = useState(false);\r\n    const [isFolderUploaded, setIsFolderUploaded] = useState(false);\r\n    const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n\r\n    const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\r\n        onDrop: (acceptedFiles) => handleFiles(acceptedFiles),\r\n        multiple: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const initialEditedFiles = acceptedFiles.map((file) => ({\r\n            ...file,\r\n            editedTitle: file.generatedFilename,\r\n            editedKeywords: file.keywords,\r\n        }));\r\n        setUploadedFiles(initialEditedFiles);\r\n    }, [acceptedFiles]);\r\n\r\n    useEffect(() => {\r\n        if (acceptedFiles.length > 0) {\r\n            onUploadClicked(acceptedFiles);\r\n        }\r\n    }, [acceptedFiles, onUploadClicked]);\r\n\r\n    const handleFiles = async (files) => {\r\n        fileListRef.current.innerHTML = '';\r\n        let totalSize = 0;\r\n        let isFolder = false;\r\n\r\n        for (const file of files) {\r\n            totalSize += file.size;\r\n            if (file.webkitRelativePath) {\r\n                isFolder = true;\r\n            }\r\n        }\r\n\r\n        setIsFolderUploaded(isFolder);\r\n\r\n        if (isFolder) {\r\n            const folderName = files[0].webkitRelativePath.split('/')[0];\r\n            fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\r\n        } else {\r\n            for (const file of files) {\r\n                const listItem = document.createElement('div');\r\n                const maxNameLength = 33;\r\n                let truncatedName =\r\n                    file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\r\n                listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\r\n                fileListRef.current.appendChild(listItem);\r\n            }\r\n        }\r\n\r\n        setIsFileAdded(files.length > 0);\r\n\r\n        // Automatically send files to the server for processing\r\n        const formData = new FormData();\r\n        for (const file of files) {\r\n            formData.append('files', file);\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(`${serverOrigin}/processFiles`, {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (response.ok) {\r\n                console.log('Files processed successfully');\r\n                const processedData = await response.json();\r\n                setUploadedFiles(processedData);\r\n                // Trigger any additional actions needed after file processing\r\n                onUploadClicked(processedData);\r\n            } else {\r\n                console.error('Failed to process files');\r\n                // Handle error UI feedback\r\n            }\r\n        } catch (error) {\r\n            console.error('Error processing files:', error);\r\n            // Handle error UI feedback\r\n        }\r\n    };\r\n\r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        const formData = new FormData(event.target);\r\n        // Set isUpscaled based on the checkbox value\r\n        const upscaleImages = 'true';\r\n        setIsUpscaled(upscaleImages);\r\n        const qualitySet = 'true';\r\n        setIsQualitySet(qualitySet);\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:3001/uploads', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n    \r\n            if (response.ok) {\r\n                console.log('Folder uploaded successfully');\r\n                const text = await response.text(); // get the response body\r\n                console.log(\"Server Response:\", text);\r\n                // Fetch updated photoList.json\r\n                const photoListResponse = await fetch('http://localhost:3001/photoList');\r\n                const newPhotoList = await photoListResponse.json();\r\n                setUploadedFiles(newPhotoList);\r\n                onUploadClicked(newPhotoList, upscaleImages, qualitySet);\r\n            }\r\n        } catch (error) {\r\n            console.error('There was a problem with the upload:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex lg:flex-row flex-col w-full transition-container\">\r\n            <div className=\"image-input h-full w-full lg:max-w-[600px] lg:max-h-[600px] pt-5 pb-7 px-10 bg-white rounded-lg shadow-lg\">\r\n\r\n                <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n\r\n                    {/* DROP ZONE */}\r\n                    <div\r\n                        ref={dropzoneRef}\r\n                        className={`bg-stone-900 px-8 py-16 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg group ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`}\r\n                    >\r\n                        <label htmlFor=\"fileInput\" className=\"cursor-pointer flex flex-col items-center space-y-2\">\r\n                            <svg className=\"w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                            </svg>\r\n                            <span className=\"text-indigo-200 \">Drag and drop your files here</span>\r\n                            <span className=\"text-indigo-200 text-sm\">(or click to select)</span>\r\n                        </label>\r\n                        <input id=\"fileInput\" ref={fileInputRef} type=\"file\" className=\"hidden file-list\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n                    </div>\r\n                    \r\n                    {/* REFERENCE BOX */}\r\n                    <div className=\"flex flex-col w-full items-center gap-3\">\r\n                        <div className=\"text-center w-full text-slate-400 ring-slate-200 ring-2 py-1.5 h-[36px]\" ref={fileListRef}></div>                    \r\n                    </div>\r\n\r\n                    {/* OPTION BUTTONS */}\r\n                    <div className=\"flex flex-col w-full justify-around gap-3\">\r\n                        \r\n                        {/* UPLOAD BUTTON */}\r\n                        <div id=\"folderUpload-submitButton\" className=\"relative mx-auto h-10 w-full flex justify-center items-center group transition-opacity duration-300 ease-in-out\">\r\n                            <input id=\"folderUpload-submitButton\" type=\"submit\" className=\"bg-green-300 py-2 h-10 w-full items-center rounded-sm shadow-lg hover:shadow-xl cursor-pointer absolute overflow-hidden transform transition duration-300 ease-in-out\" disabled={!isFileAdded} />\r\n                            <p className=\"text-center pl-3 pr-1 mr-2 text-green-700 font-bold z-10 pointer-events-none transition-transform duration-200 ease-in-out group-hover:-translate-x-4 h-full flex items-center ml-9 bg-green-300\">Upload</p>\r\n                            <img src={uploadIcon} alt=\"Upload Icon\" className=\"cursor-pointer h-full max-h-[26px] transition duration-300 ease-in-out -translate-x-10 opacity-20 group-hover:opacity-80 group-hover:-translate-x-3 w-[28px]\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateImageInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}