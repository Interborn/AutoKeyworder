{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\uploadPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport ImageInput from './ImageInput';\nimport ListLookView from './ListLookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPopup({\n  title\n}) {\n  _s();\n  const [isUploadClicked, setIsUploadClicked] = useState(false);\n  const [editedFiles, setEditedFiles] = useState([]);\n  const [isUpscaled, setIsUpscaled] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isTitleSet, setIsTitleSet] = useState(false);\n  const onUploadClicked = (files, upscaled) => {\n    setUploadedFiles(files);\n    setIsUpscaled(upscaled);\n    setIsUploadClicked(true);\n    setIsTitleSet(true);\n    setIsKeywordSelected();\n    setIsSelected();\n  };\n  useEffect(() => {\n    if (uploadedFiles.length > 0) {\n      onUploadClicked(uploadedFiles, isUpscaled);\n    }\n  }, [uploadedFiles, isUpscaled, onUploadClicked]);\n  useEffect(() => {\n    const initialEditedFiles = uploadedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setEditedFiles(initialEditedFiles);\n  }, [uploadedFiles]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"absolute top-0 z-[999] bg-green-100 flex justify-around items-center md:flex-row flex-col min-h-screen w-screen lg:px-20 sm:px-10 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col w-full lg:w-2/5 gap-8 items-start`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `max-w-[600px]`,\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-[50px] mr-4 font-bold text-green-600 drop-shadow-lg text-center\",\n          children: \"Upload an image or folder for upscaling\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImageInput, {\n        onUploadClicked: onUploadClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full lg:w-3/5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex w-full transition-container justify-end visible ${isUploadClicked ? 'visible' : 'hidden'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"liveLookListFrame\",\n          className: \"w-full overflow-x-hidden bg-white h-[90vh] rounded-xl shadow-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center w-full py-8 px-4 \",\n            children: /*#__PURE__*/_jsxDEV(ListLookView, {\n              uploadedFiles: uploadedFiles,\n              isUpscaled: isUpscaled,\n              isTitleSet: isTitleSet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadPopup, \"pULaqNeuu7O8zgnkyarsxcz985Q=\");\n_c = UploadPopup;\n;\nexport default UploadPopup;\nvar _c;\n$RefreshReg$(_c, \"UploadPopup\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ImageInput","ListLookView","jsxDEV","_jsxDEV","UploadPopup","title","_s","isUploadClicked","setIsUploadClicked","editedFiles","setEditedFiles","isUpscaled","setIsUpscaled","uploadedFiles","setUploadedFiles","isTitleSet","setIsTitleSet","onUploadClicked","files","upscaled","setIsKeywordSelected","setIsSelected","length","initialEditedFiles","map","file","editedTitle","generatedFilename","editedKeywords","keywords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/uploadPopup.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport ImageInput from './ImageInput';\r\nimport ListLookView from './ListLookView';\r\n\r\nfunction UploadPopup({ title }) {\r\n    \r\n    const [isUploadClicked, setIsUploadClicked] = useState(false);\r\n    const [editedFiles, setEditedFiles] = useState([]);\r\n    const [isUpscaled, setIsUpscaled] = useState(false);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [isTitleSet, setIsTitleSet] = useState(false);\r\n    \r\n    const onUploadClicked = (files, upscaled) => {\r\n        setUploadedFiles(files);\r\n        setIsUpscaled(upscaled);\r\n        setIsUploadClicked(true);\r\n        setIsTitleSet(true);\r\n        setIsKeywordSelected();\r\n        setIsSelected();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (uploadedFiles.length > 0) {\r\n            onUploadClicked(uploadedFiles, isUpscaled);\r\n        }\r\n    }, [uploadedFiles, isUpscaled, onUploadClicked]);\r\n     \r\n    useEffect(() => {\r\n      const initialEditedFiles = uploadedFiles.map(file => ({\r\n        ...file,\r\n        editedTitle: file.generatedFilename,\r\n        editedKeywords: file.keywords\r\n      }));\r\n      setEditedFiles(initialEditedFiles);\r\n    }, [uploadedFiles]);\r\n\r\n    return (\r\n        <main className=\"absolute top-0 z-[999] bg-green-100 flex justify-around items-center md:flex-row flex-col min-h-screen w-screen lg:px-20 sm:px-10 px-4\">\r\n\r\n            <div className={`flex flex-col w-full lg:w-2/5 gap-8 items-start`}>\r\n\r\n                {/* POPUP HEADER */}\r\n                <div className={`max-w-[600px]`}>\r\n                    <h3 className=\"text-[50px] mr-4 font-bold text-green-600 drop-shadow-lg text-center\">Upload an image or folder for upscaling</h3>\r\n                </div>\r\n\r\n                {/* IMAGE INPUT */}\r\n                <ImageInput onUploadClicked={onUploadClicked} />\r\n\r\n            </div>\r\n            \r\n            <div className='flex w-full lg:w-3/5'>\r\n\r\n            <div className={`flex w-full transition-container justify-end visible ${isUploadClicked ? 'visible' : 'hidden'}`}>\r\n                <div id=\"liveLookListFrame\" className='w-full overflow-x-hidden bg-white h-[90vh] rounded-xl shadow-lg'>\r\n                    <div className='flex items-center w-full py-8 px-4 '>\r\n                        {/* IMAGE FORM */}\r\n                            <ListLookView uploadedFiles={uploadedFiles} isUpscaled={isUpscaled} isTitleSet={isTitleSet} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default UploadPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}