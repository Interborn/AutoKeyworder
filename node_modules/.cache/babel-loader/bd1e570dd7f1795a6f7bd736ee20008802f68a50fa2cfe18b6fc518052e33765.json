{"ast":null,"code":"\"use client\";\n\nimport { forwardRef as we, useCallback as S, useEffect as U, useImperativeHandle as Le, useRef as w, useState as G } from \"react\";\nimport { forwardRef as Z } from \"react\";\nimport { jsx as ee } from \"react/jsx-runtime\";\nvar z = Z(({\n  transition: e,\n  ...i\n}, r) => {\n  let a = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100%\",\n    height: \"100%\",\n    transition: e ? `clip-path ${e}` : void 0,\n    userSelect: \"none\",\n    willChange: \"clip-path, transition\",\n    KhtmlUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    WebkitUserSelect: \"none\"\n  };\n  return ee(\"div\", {\n    ...i,\n    style: a,\n    \"data-rcs\": \"clip-item\",\n    ref: r\n  });\n});\nz.displayName = \"ContainerClip\";\nvar I = Z(({\n  children: e,\n  disabled: i,\n  portrait: r,\n  position: a,\n  transition: n\n}, d) => {\n  let m = {\n    position: \"absolute\",\n    top: 0,\n    width: r ? \"100%\" : void 0,\n    height: r ? void 0 : \"100%\",\n    background: \"none\",\n    border: 0,\n    padding: 0,\n    pointerEvents: \"all\",\n    appearance: \"none\",\n    WebkitAppearance: \"none\",\n    MozAppearance: \"none\",\n    outline: 0,\n    transform: r ? \"translate3d(0, -50% ,0)\" : \"translate3d(-50%, 0, 0)\",\n    transition: n ? `${r ? \"top\" : \"left\"} ${n}` : void 0\n  };\n  return ee(\"button\", {\n    ref: d,\n    \"aria-orientation\": r ? \"vertical\" : \"horizontal\",\n    \"aria-valuemin\": 0,\n    \"aria-valuemax\": 100,\n    \"aria-valuenow\": a,\n    \"data-rcs\": \"handle-container\",\n    disabled: i,\n    role: \"slider\",\n    style: m,\n    children: e\n  });\n});\nI.displayName = \"ThisHandleContainer\";\nimport { jsx as b, jsxs as re } from \"react/jsx-runtime\";\nvar te = ({\n    flip: e\n  }) => b(\"div\", {\n    className: \"__rcs-handle-arrow\",\n    style: {\n      width: 0,\n      height: 0,\n      borderTop: \"8px solid transparent\",\n      borderRight: \"10px solid\",\n      borderBottom: \"8px solid transparent\",\n      transform: e ? \"rotate(180deg)\" : void 0\n    }\n  }),\n  B = ({\n    className: e = \"__rcs-handle-root\",\n    disabled: i,\n    buttonStyle: r,\n    linesStyle: a,\n    portrait: n,\n    style: d,\n    ...o\n  }) => {\n    let m = {\n        display: \"flex\",\n        flexDirection: n ? \"row\" : \"column\",\n        placeItems: \"center\",\n        height: \"100%\",\n        cursor: i ? \"not-allowed\" : n ? \"ns-resize\" : \"ew-resize\",\n        pointerEvents: \"none\",\n        color: \"#fff\",\n        ...d\n      },\n      v = {\n        flexGrow: 1,\n        height: n ? 2 : \"100%\",\n        width: n ? \"100%\" : 2,\n        backgroundColor: \"currentColor\",\n        pointerEvents: \"auto\",\n        boxShadow: \"0 0 4px rgba(0,0,0,.5)\",\n        ...a\n      },\n      L = {\n        display: \"grid\",\n        gridAutoFlow: \"column\",\n        gap: 8,\n        placeContent: \"center\",\n        flexShrink: 0,\n        width: 56,\n        height: 56,\n        borderRadius: \"50%\",\n        borderStyle: \"solid\",\n        borderWidth: 2,\n        pointerEvents: \"auto\",\n        backdropFilter: \"blur(7px)\",\n        WebkitBackdropFilter: \"blur(7px)\",\n        backgroundColor: \"rgba(0, 0, 0, 0.125)\",\n        boxShadow: \"0 0 4px rgba(0,0,0,.35)\",\n        transform: n ? \"rotate(90deg)\" : void 0,\n        ...r\n      };\n    return re(\"div\", {\n      ...o,\n      \"aria-label\": o[\"aria-label\"] || \"Drag to move\",\n      className: e,\n      style: m,\n      children: [b(\"div\", {\n        className: \"__rcs-handle-line\",\n        style: v\n      }), re(\"div\", {\n        className: \"__rcs-handle-button\",\n        style: L,\n        children: [b(te, {}), b(te, {\n          flip: !0\n        })]\n      }), b(\"div\", {\n        className: \"__rcs-handle-line\",\n        style: v\n      })]\n    });\n  };\nimport { useCallback as ye, useEffect as _, useLayoutEffect as ge, useRef as F } from \"react\";\nvar N = (n => (n.ARROW_LEFT = \"ArrowLeft\", n.ARROW_RIGHT = \"ArrowRight\", n.ARROW_UP = \"ArrowUp\", n.ARROW_DOWN = \"ArrowDown\", n))(N || {}),\n  $ = ({\n    boxSizing: e = \"border-box\",\n    objectFit: i = \"cover\",\n    objectPosition: r = \"center center\",\n    ...a\n  } = {}) => ({\n    display: \"block\",\n    width: \"100%\",\n    height: \"100%\",\n    maxWidth: \"100%\",\n    boxSizing: e,\n    objectFit: i,\n    objectPosition: r,\n    ...a\n  }),\n  ne = e => {\n    let i = F(e);\n    return _(() => {\n      i.current = e;\n    }), i.current;\n  },\n  O = (e, i, r, a) => {\n    let n = F();\n    _(() => {\n      n.current = i;\n    }, [i]), _(() => {\n      if (!(r && r.addEventListener)) return;\n      let d = o => n.current && n.current(o);\n      return r.addEventListener(e, d, a), () => {\n        r.removeEventListener(e, d, a);\n      };\n    }, [e, r, a]);\n  },\n  be = typeof window < \"u\" && typeof window.document < \"u\" && typeof window.document.createElement < \"u\" ? ge : _,\n  oe = (e, i) => {\n    let r = F(),\n      a = ye(() => {\n        e.current && r.current && r.current.observe(e.current);\n      }, [e]);\n    be(() => (r.current = new ResizeObserver(([n]) => i(n.contentRect)), a(), () => {\n      r.current && r.current.disconnect();\n    }), [i, a]);\n  };\nimport { jsx as X, jsxs as He } from \"react/jsx-runtime\";\nvar k = {\n    capture: !1,\n    passive: !0\n  },\n  V = {\n    capture: !0,\n    passive: !1\n  },\n  ie = we(({\n    disabled: e = !1,\n    handle: i,\n    itemOne: r,\n    itemTwo: a,\n    onlyHandleDraggable: n = !1,\n    onPositionChange: d,\n    portrait: o = !1,\n    position: m = 50,\n    boundsPadding: v = 0,\n    changePositionOnHover: L = !1,\n    keyboardIncrement: H = \"5%\",\n    style: se,\n    transition: ae,\n    ...le\n  }, ce) => {\n    let p = w(null),\n      Y = w(null),\n      f = w(null),\n      u = w(m),\n      [E, j] = G(!1),\n      [de, T] = G(!0),\n      x = w(!1),\n      [pe, me] = G(),\n      q = ne(m),\n      l = S(function ({\n        x: s,\n        y: c,\n        isOffset: R\n      }) {\n        let g = p.current,\n          M = f.current,\n          A = Y.current,\n          {\n            width: h,\n            height: C,\n            left: Pe,\n            top: he\n          } = g.getBoundingClientRect();\n        if (h === 0 || C === 0) return;\n        let Ee = o ? R ? c - he - window.scrollY : c : R ? s - Pe - window.scrollX : s,\n          K = Math.min(Math.max(Ee / (o ? C : h) * 100, 0), 100),\n          W = o ? C / (g.offsetHeight || 1) : h / (g.offsetWidth || 1),\n          Q = v * W / (o ? C : h) * 100,\n          D = Math.min(Math.max(K, Q * W), 100 - Q * W);\n        u.current = K, M.setAttribute(\"aria-valuenow\", `${Math.round(u.current)}`), M.style.top = o ? `${D}%` : \"0\", M.style.left = o ? \"0\" : `${D}%`, A.style.clipPath = o ? `inset(${D}% 0 0 0)` : `inset(0 0 0 ${D}%)`, d && d(u.current);\n      }, [v, d, o]);\n    U(() => {\n      let {\n          width: t,\n          height: s\n        } = p.current.getBoundingClientRect(),\n        c = m === q ? u.current : m;\n      l({\n        x: t / 100 * c,\n        y: s / 100 * c\n      });\n    }, [v, m, o, q, l]);\n    let ue = S(t => {\n        t.preventDefault(), !(e || t.button !== 0) && (l({\n          isOffset: !0,\n          x: t.pageX,\n          y: t.pageY\n        }), j(!0), T(!0));\n      }, [e, l]),\n      P = S(function (s) {\n        l({\n          isOffset: !0,\n          x: s.pageX,\n          y: s.pageY\n        }), T(!1);\n      }, [l]),\n      y = S(() => {\n        j(!1), T(!0);\n      }, []),\n      fe = S(({\n        width: t,\n        height: s\n      }) => {\n        let {\n          width: c,\n          height: R\n        } = p.current.getBoundingClientRect();\n        l({\n          x: t / 100 * u.current * c / t,\n          y: s / 100 * u.current * R / s\n        });\n      }, [l]),\n      Re = S(t => {\n        t.preventDefault(), f.current.focus();\n      }, []),\n      Ce = S(t => {\n        if (!Object.values(N).includes(t.key)) return;\n        t.preventDefault(), T(!0);\n        let {\n            top: s,\n            left: c\n          } = f.current.getBoundingClientRect(),\n          {\n            width: R,\n            height: g\n          } = p.current.getBoundingClientRect(),\n          A = typeof H == \"string\" ? parseFloat(H) : H / R * 100,\n          h = o ? t.key === \"ArrowLeft\" || t.key === \"ArrowDown\" : t.key === \"ArrowRight\" || t.key === \"ArrowUp\",\n          C = Math.min(Math.max(h ? u.current + A : u.current - A, 0), 100);\n        l({\n          x: o ? c : R * C / 100,\n          y: o ? g * C / 100 : s\n        });\n      }, [H, o, l]);\n    U(() => {\n      me(n ? f.current : p.current);\n    }, [n]), U(() => {\n      let t = p.current,\n        s = () => {\n          E || y();\n        };\n      return L && (t.addEventListener(\"pointermove\", P, k), t.addEventListener(\"pointerleave\", s, k)), () => {\n        t.removeEventListener(\"pointermove\", P), t.removeEventListener(\"pointerleave\", s);\n      };\n    }, [L, P, y, E]), U(() => (E && !x.current && (window.addEventListener(\"pointermove\", P, k), window.addEventListener(\"pointerup\", y, k), x.current = !0), () => {\n      x.current && (window.removeEventListener(\"pointermove\", P), window.removeEventListener(\"pointerup\", y), x.current = !1);\n    }), [P, y, E]), Le(ce, () => ({\n      rootContainer: p.current,\n      setPosition(t) {\n        let {\n          width: s,\n          height: c\n        } = p.current.getBoundingClientRect();\n        l({\n          x: s / 100 * t,\n          y: c / 100 * t\n        });\n      }\n    }), [l]), oe(p, fe), O(\"keydown\", Ce, f.current, V), O(\"click\", Re, f.current, V), O(\"pointerdown\", ue, pe, V);\n    let Se = i || X(B, {\n        disabled: e,\n        portrait: o\n      }),\n      J = de ? ae : void 0,\n      ve = {\n        position: \"relative\",\n        display: \"flex\",\n        overflow: \"hidden\",\n        cursor: E ? o ? \"ns-resize\" : \"ew-resize\" : void 0,\n        touchAction: \"none\",\n        userSelect: \"none\",\n        KhtmlUserSelect: \"none\",\n        msUserSelect: \"none\",\n        MozUserSelect: \"none\",\n        WebkitUserSelect: \"none\",\n        ...se\n      };\n    return He(\"div\", {\n      ...le,\n      ref: p,\n      style: ve,\n      \"data-rcs\": \"root\",\n      children: [r, X(z, {\n        ref: Y,\n        transition: J,\n        children: a\n      }), X(I, {\n        disabled: e,\n        portrait: o,\n        position: Math.round(u.current),\n        ref: f,\n        transition: J,\n        children: Se\n      })]\n    });\n  });\nie.displayName = \"ReactCompareSlider\";\nimport { jsx as xe } from \"react/jsx-runtime\";\nvar Te = ({\n  style: e,\n  ...i\n}) => {\n  let r = $(e);\n  return xe(\"img\", {\n    ...i,\n    style: r,\n    \"data-rcs\": \"image\"\n  });\n};\nimport { useRef as Me } from \"react\";\nvar Ae = () => Me({\n  rootContainer: null,\n  setPosition: () => console.warn(\"[react-compare-slider] `setPosition` cannot be used until the component has mounted.\")\n});\nexport { ie as ReactCompareSlider, B as ReactCompareSliderHandle, Te as ReactCompareSliderImage, $ as styleFitContainer, Ae as useReactCompareSliderRef };","map":{"version":3,"names":["forwardRef","we","useCallback","S","useEffect","U","useImperativeHandle","Le","useRef","w","useState","G","Z","jsx","ee","z","transition","e","i","r","a","position","top","left","width","height","userSelect","willChange","KhtmlUserSelect","MozUserSelect","WebkitUserSelect","style","ref","displayName","I","children","disabled","portrait","n","d","m","background","border","padding","pointerEvents","appearance","WebkitAppearance","MozAppearance","outline","transform","role","b","jsxs","re","te","ThisArrow","flip","className","borderTop","borderRight","borderBottom","B","ReactCompareSliderHandle","buttonStyle","linesStyle","o","display","flexDirection","placeItems","cursor","color","v","flexGrow","backgroundColor","boxShadow","L","gridAutoFlow","gap","placeContent","flexShrink","borderRadius","borderStyle","borderWidth","backdropFilter","WebkitBackdropFilter","ye","_","useLayoutEffect","ge","F","N","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","$","styleFitContainer","boxSizing","objectFit","objectPosition","maxWidth","ne","current","O","useEventListener","addEventListener","removeEventListener","be","window","document","createElement","oe","useResizeObserver","observe","ResizeObserver","contentRect","disconnect","X","He","k","capture","passive","V","ie","handle","itemOne","itemTwo","onlyHandleDraggable","onPositionChange","boundsPadding","changePositionOnHover","keyboardIncrement","H","se","ae","le","ce","p","Y","f","u","E","j","de","T","x","pe","me","q","l","s","y","c","isOffset","R","g","M","A","h","C","Pe","he","getBoundingClientRect","Ee","scrollY","scrollX","K","Math","min","max","W","offsetHeight","offsetWidth","Q","D","setAttribute","round","clipPath","t","ue","preventDefault","button","pageX","pageY","P","fe","Re","focus","Ce","Object","values","includes","key","parseFloat","handlePointerLeave","rootContainer","setPosition","Se","J","ve","overflow","touchAction","msUserSelect","xe","Te","ReactCompareSliderImage","Me","Ae","useReactCompareSliderRef","console","warn","ReactCompareSlider"],"sources":["C:\\Users\\dsafr\\Documents\\Dev\\AutoKeyworder\\node_modules\\react-compare-slider\\src\\ReactCompareSlider.tsx","C:\\Users\\dsafr\\Documents\\Dev\\AutoKeyworder\\node_modules\\react-compare-slider\\src\\Container.tsx","C:\\Users\\dsafr\\Documents\\Dev\\AutoKeyworder\\node_modules\\react-compare-slider\\src\\ReactCompareSliderHandle.tsx","C:\\Users\\dsafr\\Documents\\Dev\\AutoKeyworder\\node_modules\\react-compare-slider\\src\\utils.ts","C:\\Users\\dsafr\\Documents\\Dev\\AutoKeyworder\\node_modules\\react-compare-slider\\src\\ReactCompareSliderImage.tsx","C:\\Users\\dsafr\\Documents\\Dev\\AutoKeyworder\\node_modules\\react-compare-slider\\src\\useReactCompareSliderRef.ts"],"sourcesContent":["import React, {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport type { CSSProperties, ReactElement } from 'react';\n\nimport { ContainerClip, ContainerHandle } from './Container';\nimport { ReactCompareSliderHandle } from './ReactCompareSliderHandle';\nimport type { ReactCompareSliderDetailedProps, UseReactCompareSliderRefReturn } from './types';\nimport type { UseResizeObserverHandlerProps } from './utils';\nimport { usePrevious } from './utils';\nimport { KeyboardEventKeys, useEventListener, useResizeObserver } from './utils';\n\n/** Properties for internal `updateInternalPosition` callback. */\ninterface UpdateInternalPositionProps {\n  /** X coordinate to update to (landscape). */\n  x: number;\n  /** Y coordinate to update to (portrait). */\n  y: number;\n  /** Whether to calculate using page X and Y offsets (required for pointer events). */\n  isOffset?: boolean;\n}\n\nconst EVENT_PASSIVE_PARAMS = { capture: false, passive: true };\nconst EVENT_CAPTURE_PARAMS = { capture: true, passive: false };\n\n/** Root Comparison slider. */\nexport const ReactCompareSlider = forwardRef<\n  UseReactCompareSliderRefReturn,\n  ReactCompareSliderDetailedProps\n>(\n  (\n    {\n      disabled = false,\n      handle,\n      itemOne,\n      itemTwo,\n      onlyHandleDraggable = false,\n      onPositionChange,\n      portrait = false,\n      position = 50,\n      boundsPadding = 0,\n      changePositionOnHover = false,\n      keyboardIncrement = '5%',\n      style,\n      transition,\n      ...props\n    },\n    ref,\n  ): ReactElement => {\n    /** DOM node of the root element. */\n    const rootContainerRef = useRef<HTMLDivElement>(null);\n    /** DOM node of the item that is clipped. */\n    const clipContainerRef = useRef<HTMLDivElement>(null);\n    /** DOM node of the handle container. */\n    const handleContainerRef = useRef<HTMLButtonElement>(null);\n    /** Current position as a percentage value (initially negative to sync bounds on mount). */\n    const internalPosition = useRef(position);\n    /** Whether user is currently dragging. */\n    const [isDragging, setIsDragging] = useState(false);\n    /** Whether the `transition` property can be applied. */\n    const [canTransition, setCanTransition] = useState(true);\n    /** Whether component has a `window` event binding. */\n    const hasWindowBinding = useRef(false);\n    /** Target container for pointer events. */\n    const [interactiveTarget, setInteractiveTarget] = useState<HTMLElement | null>();\n    /** The `position` value at *previous* render. */\n    const previousPosition = usePrevious(position);\n\n    /** Sync the internal position and trigger position change callback if defined. */\n    const updateInternalPosition = useCallback(\n      function updateInternal({ x, y, isOffset }: UpdateInternalPositionProps) {\n        const rootElement = rootContainerRef.current as HTMLDivElement;\n        const handleElement = handleContainerRef.current as HTMLButtonElement;\n        const clipElement = clipContainerRef.current as HTMLDivElement;\n        const { width, height, left, top } = rootElement.getBoundingClientRect();\n\n        // Early out when component has zero bounds.\n        if (width === 0 || height === 0) {\n          return;\n        }\n\n        const pixelPosition = portrait\n          ? isOffset\n            ? y - top - window.scrollY\n            : y\n          : isOffset\n          ? x - left - window.scrollX\n          : x;\n\n        /** Next position as percentage. */\n        const nextPosition = Math.min(\n          Math.max((pixelPosition / (portrait ? height : width)) * 100, 0),\n          100,\n        );\n\n        const zoomScale = portrait\n          ? height / (rootElement.offsetHeight || 1)\n          : width / (rootElement.offsetWidth || 1);\n\n        const boundsPaddingPercentage =\n          ((boundsPadding * zoomScale) / (portrait ? height : width)) * 100;\n\n        const nextPositionWithBoundsPadding = Math.min(\n          Math.max(nextPosition, boundsPaddingPercentage * zoomScale),\n          100 - boundsPaddingPercentage * zoomScale,\n        );\n\n        internalPosition.current = nextPosition;\n        handleElement.setAttribute('aria-valuenow', `${Math.round(internalPosition.current)}`);\n        handleElement.style.top = portrait ? `${nextPositionWithBoundsPadding}%` : '0';\n        handleElement.style.left = portrait ? '0' : `${nextPositionWithBoundsPadding}%`;\n        clipElement.style.clipPath = portrait\n          ? `inset(${nextPositionWithBoundsPadding}% 0 0 0)`\n          : `inset(0 0 0 ${nextPositionWithBoundsPadding}%)`;\n\n        if (onPositionChange) {\n          onPositionChange(internalPosition.current);\n        }\n      },\n      [boundsPadding, onPositionChange, portrait],\n    );\n\n    // Update internal position when other user controllable props change.\n    useEffect(() => {\n      const { width, height } = (\n        rootContainerRef.current as HTMLDivElement\n      ).getBoundingClientRect();\n\n      // Use current internal position if `position` hasn't changed.\n      const nextPosition = position === previousPosition ? internalPosition.current : position;\n\n      updateInternalPosition({\n        x: (width / 100) * nextPosition,\n        y: (height / 100) * nextPosition,\n      });\n    }, [boundsPadding, position, portrait, previousPosition, updateInternalPosition]);\n\n    /** Handle mouse/touch down. */\n    const handlePointerDown = useCallback(\n      (ev: PointerEvent) => {\n        ev.preventDefault();\n\n        // Only handle left mouse button (touch events also use 0).\n        if (disabled || ev.button !== 0) return;\n\n        updateInternalPosition({ isOffset: true, x: ev.pageX, y: ev.pageY });\n        setIsDragging(true);\n        setCanTransition(true);\n      },\n      [disabled, updateInternalPosition],\n    );\n\n    /** Handle mouse/touch move. */\n    const handlePointerMove = useCallback(\n      function moveCall(ev: PointerEvent) {\n        updateInternalPosition({ isOffset: true, x: ev.pageX, y: ev.pageY });\n        setCanTransition(false);\n      },\n      [updateInternalPosition],\n    );\n\n    /** Handle mouse/touch up. */\n    const handlePointerUp = useCallback(() => {\n      setIsDragging(false);\n      setCanTransition(true);\n    }, []);\n\n    /** Resync internal position on resize. */\n    const handleResize: (resizeProps: UseResizeObserverHandlerProps) => void = useCallback(\n      ({ width, height }) => {\n        const { width: scaledWidth, height: scaledHeight } = (\n          rootContainerRef.current as HTMLDivElement\n        ).getBoundingClientRect();\n\n        updateInternalPosition({\n          x: ((width / 100) * internalPosition.current * scaledWidth) / width,\n          y: ((height / 100) * internalPosition.current * scaledHeight) / height,\n        });\n      },\n      [updateInternalPosition],\n    );\n\n    /**\n     * Yo dawg, we heard you like handles, so we handled in your handle so you can handle while you\n     * handle.\n     */\n    const handleHandleClick = useCallback((ev: PointerEvent) => {\n      ev.preventDefault();\n      (handleContainerRef.current as HTMLButtonElement).focus();\n    }, []);\n\n    /** Handle keyboard movment. */\n    const handleKeydown = useCallback(\n      (ev: KeyboardEvent) => {\n        if (!Object.values(KeyboardEventKeys).includes(ev.key as KeyboardEventKeys)) {\n          return;\n        }\n\n        ev.preventDefault();\n        setCanTransition(true);\n\n        const { top, left } = (\n          handleContainerRef.current as HTMLButtonElement\n        ).getBoundingClientRect();\n\n        const { width, height } = (\n          rootContainerRef.current as HTMLDivElement\n        ).getBoundingClientRect();\n\n        const isPercentage = typeof keyboardIncrement === 'string';\n        const incrementPercentage = isPercentage\n          ? parseFloat(keyboardIncrement)\n          : (keyboardIncrement / width) * 100;\n\n        const isIncrement = portrait\n          ? ev.key === KeyboardEventKeys.ARROW_LEFT || ev.key === KeyboardEventKeys.ARROW_DOWN\n          : ev.key === KeyboardEventKeys.ARROW_RIGHT || ev.key === KeyboardEventKeys.ARROW_UP;\n\n        const nextPosition = Math.min(\n          Math.max(\n            isIncrement\n              ? internalPosition.current + incrementPercentage\n              : internalPosition.current - incrementPercentage,\n            0,\n          ),\n          100,\n        );\n\n        updateInternalPosition({\n          x: portrait ? left : (width * nextPosition) / 100,\n          y: portrait ? (height * nextPosition) / 100 : top,\n        });\n      },\n      [keyboardIncrement, portrait, updateInternalPosition],\n    );\n\n    // Set target container for pointer events.\n    useEffect(() => {\n      setInteractiveTarget(\n        onlyHandleDraggable ? handleContainerRef.current : rootContainerRef.current,\n      );\n    }, [onlyHandleDraggable]);\n\n    // Handle hover events on the container.\n    useEffect(() => {\n      const containerRef = rootContainerRef.current as HTMLDivElement;\n\n      const handlePointerLeave = (): void => {\n        if (isDragging) return;\n        handlePointerUp();\n      };\n\n      if (changePositionOnHover) {\n        containerRef.addEventListener('pointermove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n        containerRef.addEventListener('pointerleave', handlePointerLeave, EVENT_PASSIVE_PARAMS);\n      }\n\n      return () => {\n        containerRef.removeEventListener('pointermove', handlePointerMove);\n        containerRef.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }, [changePositionOnHover, handlePointerMove, handlePointerUp, isDragging]);\n\n    // Allow drag outside of container while pointer is still down.\n    useEffect(() => {\n      if (isDragging && !hasWindowBinding.current) {\n        window.addEventListener('pointermove', handlePointerMove, EVENT_PASSIVE_PARAMS);\n        window.addEventListener('pointerup', handlePointerUp, EVENT_PASSIVE_PARAMS);\n        hasWindowBinding.current = true;\n      }\n\n      return (): void => {\n        if (hasWindowBinding.current) {\n          window.removeEventListener('pointermove', handlePointerMove);\n          window.removeEventListener('pointerup', handlePointerUp);\n          hasWindowBinding.current = false;\n        }\n      };\n    }, [handlePointerMove, handlePointerUp, isDragging]);\n\n    useImperativeHandle(\n      ref,\n      () => {\n        return {\n          rootContainer: rootContainerRef.current,\n          setPosition(nextPosition): void {\n            const { width, height } = (\n              rootContainerRef.current as HTMLDivElement\n            ).getBoundingClientRect();\n\n            updateInternalPosition({\n              x: (width / 100) * nextPosition,\n              y: (height / 100) * nextPosition,\n            });\n          },\n        };\n      },\n      [updateInternalPosition],\n    );\n\n    // Bind resize observer to container.\n    useResizeObserver(rootContainerRef, handleResize);\n\n    useEventListener(\n      'keydown',\n      handleKeydown,\n      handleContainerRef.current as HTMLButtonElement,\n      EVENT_CAPTURE_PARAMS,\n    );\n\n    useEventListener(\n      'click',\n      handleHandleClick,\n      handleContainerRef.current as HTMLButtonElement,\n      EVENT_CAPTURE_PARAMS,\n    );\n\n    useEventListener(\n      'pointerdown',\n      handlePointerDown,\n      interactiveTarget as HTMLDivElement,\n      EVENT_CAPTURE_PARAMS,\n    );\n\n    // Use custom handle if requested.\n    const Handle = handle || <ReactCompareSliderHandle disabled={disabled} portrait={portrait} />;\n    const appliedTransition = canTransition ? transition : undefined;\n\n    const rootStyle: CSSProperties = {\n      position: 'relative',\n      display: 'flex',\n      overflow: 'hidden',\n      cursor: isDragging ? (portrait ? 'ns-resize' : 'ew-resize') : undefined,\n      touchAction: 'none',\n      userSelect: 'none',\n      KhtmlUserSelect: 'none',\n      msUserSelect: 'none',\n      MozUserSelect: 'none',\n      WebkitUserSelect: 'none',\n      ...style,\n    };\n\n    return (\n      <div {...props} ref={rootContainerRef} style={rootStyle} data-rcs=\"root\">\n        {itemOne}\n        <ContainerClip ref={clipContainerRef} transition={appliedTransition}>\n          {itemTwo}\n        </ContainerClip>\n\n        <ContainerHandle\n          disabled={disabled}\n          portrait={portrait}\n          position={Math.round(internalPosition.current)}\n          ref={handleContainerRef}\n          transition={appliedTransition}\n        >\n          {Handle}\n        </ContainerHandle>\n      </div>\n    );\n  },\n);\n\nReactCompareSlider.displayName = 'ReactCompareSlider';\n","import React, { forwardRef } from 'react';\nimport type { CSSProperties, HTMLProps, ReactElement } from 'react';\n\nimport type { ReactCompareSliderCommonProps } from './types';\n\n/** Container for clipped item. */\nexport const ContainerClip = forwardRef<\n  HTMLDivElement,\n  HTMLProps<HTMLDivElement> & Pick<ReactCompareSliderCommonProps, 'transition'>\n>(({ transition, ...props }, ref): ReactElement => {\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    transition: transition ? `clip-path ${transition}` : undefined,\n    userSelect: 'none',\n    willChange: 'clip-path, transition',\n    KhtmlUserSelect: 'none',\n    MozUserSelect: 'none',\n    WebkitUserSelect: 'none',\n  };\n\n  return <div {...props} style={style} data-rcs=\"clip-item\" ref={ref} />;\n});\n\nContainerClip.displayName = 'ContainerClip';\n\n/** Container to control the handle's position. */\nexport const ContainerHandle = forwardRef<\n  HTMLButtonElement,\n  HTMLProps<HTMLButtonElement> & ReactCompareSliderCommonProps\n>(({ children, disabled, portrait, position, transition }, ref): ReactElement => {\n  const targetAxis = portrait ? 'top' : 'left';\n\n  const style: CSSProperties = {\n    position: 'absolute',\n    top: 0,\n    width: portrait ? '100%' : undefined,\n    height: portrait ? undefined : '100%',\n    background: 'none',\n    border: 0,\n    padding: 0,\n    pointerEvents: 'all',\n    appearance: 'none',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    outline: 0,\n    transform: portrait ? `translate3d(0, -50% ,0)` : `translate3d(-50%, 0, 0)`,\n    transition: transition ? `${targetAxis} ${transition}` : undefined,\n  };\n\n  return (\n    <button\n      ref={ref}\n      aria-orientation={portrait ? 'vertical' : 'horizontal'}\n      aria-valuemin={0}\n      aria-valuemax={100}\n      aria-valuenow={position}\n      data-rcs=\"handle-container\"\n      disabled={disabled}\n      role=\"slider\"\n      style={style}\n    >\n      {children}\n    </button>\n  );\n});\n\nContainerHandle.displayName = 'ThisHandleContainer';\n","import React from 'react';\nimport type { CSSProperties, FC, HtmlHTMLAttributes, ReactElement } from 'react';\n\nimport type { ReactCompareSliderCommonProps } from './types';\n\ninterface ThisArrowProps {\n  /** Whether to flip the arrow direction. */\n  flip?: boolean;\n}\n\nconst ThisArrow: FC<ThisArrowProps> = ({ flip }) => {\n  const style: CSSProperties = {\n    width: 0,\n    height: 0,\n    borderTop: '8px solid transparent',\n    borderRight: '10px solid',\n    borderBottom: '8px solid transparent',\n    transform: flip ? 'rotate(180deg)' : undefined,\n  };\n\n  return <div className=\"__rcs-handle-arrow\" style={style} />;\n};\n\n/** Props for `ReactCompareSliderHandle`. */\nexport interface ReactCompareSliderHandleProps\n  extends Pick<ReactCompareSliderCommonProps, 'disabled' | 'portrait'> {\n  /** Optional styles for handle the button. */\n  buttonStyle?: CSSProperties;\n  /** Optional styles for lines either side of the handle button. */\n  linesStyle?: CSSProperties;\n  /** Optional styles for the handle root. */\n  style?: CSSProperties;\n}\n\n/** Default `handle`. */\nexport const ReactCompareSliderHandle: FC<\n  ReactCompareSliderHandleProps & HtmlHTMLAttributes<HTMLDivElement>\n> = ({\n  className = '__rcs-handle-root',\n  disabled,\n  buttonStyle,\n  linesStyle,\n  portrait,\n  style,\n  ...props\n}): ReactElement => {\n  const _style: CSSProperties = {\n    display: 'flex',\n    flexDirection: portrait ? 'row' : 'column',\n    placeItems: 'center',\n    height: '100%',\n    cursor: disabled ? 'not-allowed' : portrait ? 'ns-resize' : 'ew-resize',\n    pointerEvents: 'none',\n    color: '#fff',\n    ...style,\n  };\n\n  const _linesStyle: CSSProperties = {\n    flexGrow: 1,\n    height: portrait ? 2 : '100%',\n    width: portrait ? '100%' : 2,\n    backgroundColor: 'currentColor',\n    pointerEvents: 'auto',\n    boxShadow: '0 0 4px rgba(0,0,0,.5)',\n    ...linesStyle,\n  };\n\n  const _buttonStyle: CSSProperties = {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    gap: 8,\n    placeContent: 'center',\n    flexShrink: 0,\n    width: 56,\n    height: 56,\n    borderRadius: '50%',\n    borderStyle: 'solid',\n    borderWidth: 2,\n    pointerEvents: 'auto',\n    backdropFilter: 'blur(7px)',\n    WebkitBackdropFilter: 'blur(7px)', // For Safari.\n    backgroundColor: 'rgba(0, 0, 0, 0.125)',\n    boxShadow: '0 0 4px rgba(0,0,0,.35)',\n    transform: portrait ? 'rotate(90deg)' : undefined,\n    ...buttonStyle,\n  };\n\n  return (\n    <div\n      {...props}\n      aria-label={props['aria-label'] || 'Drag to move'}\n      className={className}\n      style={_style}\n    >\n      <div className=\"__rcs-handle-line\" style={_linesStyle} />\n      <div className=\"__rcs-handle-button\" style={_buttonStyle}>\n        <ThisArrow />\n        <ThisArrow flip />\n      </div>\n      <div className=\"__rcs-handle-line\" style={_linesStyle} />\n    </div>\n  );\n};\n","import type { CSSProperties, RefObject } from 'react';\nimport { useCallback, useEffect, useLayoutEffect, useRef } from 'react';\n\n/** Keyboard `key` events to trigger slider movement. */\nexport enum KeyboardEventKeys {\n  ARROW_LEFT = 'ArrowLeft',\n  ARROW_RIGHT = 'ArrowRight',\n  ARROW_UP = 'ArrowUp',\n  ARROW_DOWN = 'ArrowDown',\n}\n\n/**\n * Stand-alone CSS utility to make replaced elements (`img`, `video`, etc.) fit their container.\n */\nexport const styleFitContainer = ({\n  boxSizing = 'border-box',\n  objectFit = 'cover',\n  objectPosition = 'center center',\n  ...props\n}: CSSProperties = {}): CSSProperties => ({\n  display: 'block',\n  width: '100%',\n  height: '100%',\n  maxWidth: '100%',\n  boxSizing,\n  objectFit,\n  objectPosition,\n  ...props,\n});\n\n/** Store the previous supplied value. */\nexport const usePrevious = <T>(value: T): T => {\n  const ref = useRef<T>(value);\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n\n/**\n * Event listener binding hook.\n * @param eventName      - Event to bind to.\n * @param handler        - Callback handler.\n * @param element        - Element to bind to.\n * @param handlerOptions - Event handler options.\n */\nexport const useEventListener = (\n  eventName: EventListener['name'],\n  handler: EventListener['caller'],\n  element: EventTarget,\n  handlerOptions: AddEventListenerOptions,\n): void => {\n  const savedHandler = useRef<EventListener['caller']>();\n\n  useEffect(() => {\n    savedHandler.current = handler;\n  }, [handler]);\n\n  useEffect(() => {\n    // Make sure element supports addEventListener.\n    if (!(element && element.addEventListener)) return;\n\n    // Create event listener that calls handler function stored in ref.\n    const eventListener: EventListener = (event) =>\n      savedHandler.current && savedHandler.current(event);\n\n    element.addEventListener(eventName, eventListener, handlerOptions);\n\n    return (): void => {\n      element.removeEventListener(eventName, eventListener, handlerOptions);\n    };\n  }, [eventName, element, handlerOptions]);\n};\n\n/**\n * Conditionally use `useLayoutEffect` for client *or* `useEffect` for SSR.\n * @see https://github.com/reduxjs/react-redux/blob/89a86805f2fcf9e8fbd2d1dae345ec791de4a71f/src/utils/useIsomorphicLayoutEffect.ts\n */\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect;\n\n/** Params passed to `useResizeObserver` `handler` function. */\nexport type UseResizeObserverHandlerProps = DOMRect;\n\n/**\n * Bind resize observer callback to element.\n * @param ref       - Element to bind to.\n * @param handler   - Callback for handling entry's bounding rect.\n */\nexport const useResizeObserver = (\n  ref: RefObject<Element>,\n  handler: (entry: UseResizeObserverHandlerProps) => void,\n): void => {\n  const observer = useRef<ResizeObserver>();\n\n  const observe = useCallback(() => {\n    if (ref.current && observer.current) observer.current.observe(ref.current);\n  }, [ref]);\n\n  // Bind/rebind observer when `handler` changes.\n  useIsomorphicLayoutEffect(() => {\n    observer.current = new ResizeObserver(([entry]) => handler(entry!.contentRect));\n    observe();\n\n    return (): void => {\n      if (observer.current) observer.current.disconnect();\n    };\n  }, [handler, observe]);\n};\n","import React from 'react';\nimport type { CSSProperties, FC, ImgHTMLAttributes, ReactElement } from 'react';\n\nimport { styleFitContainer } from './utils';\n\n/** Props for `ReactCompareSliderImage`. */\nexport type ReactCompareSliderImageProps = ImgHTMLAttributes<HTMLImageElement>;\n\n/** `Img` element with defaults from `styleFitContainer` applied. */\nexport const ReactCompareSliderImage: FC<ReactCompareSliderImageProps> = ({\n  style,\n  ...props\n}): ReactElement => {\n  const rootStyle: CSSProperties = styleFitContainer(style);\n\n  return <img {...props} style={rootStyle} data-rcs=\"image\" />;\n};\n","import type { MutableRefObject } from 'react';\nimport { useRef } from 'react';\n\nimport type { UseReactCompareSliderRefReturn } from './types';\n\n/**\n * Control the position and access or modify the DOM elements of the slider.\n */\nexport const useReactCompareSliderRef = (): MutableRefObject<UseReactCompareSliderRefReturn> =>\n  useRef<UseReactCompareSliderRefReturn>({\n    rootContainer: null,\n    setPosition: () =>\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[react-compare-slider] `setPosition` cannot be used until the component has mounted.',\n      ),\n  });\n"],"mappings":";;AAAA,SACEA,UAAA,IAAAC,EAAA,EACAC,WAAA,IAAAC,CAAA,EACAC,SAAA,IAAAC,CAAA,EACAC,mBAAA,IAAAC,EAAA,EACAC,MAAA,IAAAC,CAAA,EACAC,QAAA,IAAAC,CAAA,QACK;ACPP,SAAgBX,UAAA,IAAAY,CAAA,QAAkB;AAwBzB,SAAAC,GAAA,IAAAC,EAAA;AAlBF,IAAMC,CAAA,GAAgBH,CAAA,CAG3B,CAAC;EAAEI,UAAA,EAAAC,CAAA;EAAY,GAAGC;AAAM,GAAGC,CAAA,KAAsB;EACjD,IAAMC,CAAA,GAAuB;IAC3BC,QAAA,EAAU;IACVC,GAAA,EAAK;IACLC,IAAA,EAAM;IACNC,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRT,UAAA,EAAYC,CAAA,GAAa,aAAaA,CAAU,KAAK;IACrDS,UAAA,EAAY;IACZC,UAAA,EAAY;IACZC,eAAA,EAAiB;IACjBC,aAAA,EAAe;IACfC,gBAAA,EAAkB;EACpB;EAEA,OAAOhB,EAAA,CAAC;IAAK,GAAGI,CAAA;IAAOa,KAAA,EAAOX,CAAA;IAAO,YAAS;IAAYY,GAAA,EAAKb;EAAA,CAAK,CACtE;AAAA,CAAC;AAEDJ,CAAA,CAAckB,WAAA,GAAc;AAGrB,IAAMC,CAAA,GAAkBtB,CAAA,CAG7B,CAAC;EAAEuB,QAAA,EAAAlB,CAAA;EAAUmB,QAAA,EAAAlB,CAAA;EAAUmB,QAAA,EAAAlB,CAAA;EAAUE,QAAA,EAAAD,CAAA;EAAUJ,UAAA,EAAAsB;AAAW,GAAGC,CAAA,KAAsB;EAG/E,IAAMC,CAAA,GAAuB;IAC3BnB,QAAA,EAAU;IACVC,GAAA,EAAK;IACLE,KAAA,EAAOL,CAAA,GAAW,SAAS;IAC3BM,MAAA,EAAQN,CAAA,GAAW,SAAY;IAC/BsB,UAAA,EAAY;IACZC,MAAA,EAAQ;IACRC,OAAA,EAAS;IACTC,aAAA,EAAe;IACfC,UAAA,EAAY;IACZC,gBAAA,EAAkB;IAClBC,aAAA,EAAe;IACfC,OAAA,EAAS;IACTC,SAAA,EAAW9B,CAAA,GAAW,4BAA4B;IAClDH,UAAA,EAAYsB,CAAA,GAAa,GAhBRnB,CAAA,GAAW,QAAQ,MAgBE,IAAImB,CAAU,KAAK;EAC3D;EAEA,OACExB,EAAA,CAAC;IACCkB,GAAA,EAAKO,CAAA;IACL,oBAAkBpB,CAAA,GAAW,aAAa;IAC1C,iBAAe;IACf,iBAAe;IACf,iBAAeC,CAAA;IACf,YAAS;IACTgB,QAAA,EAAUlB,CAAA;IACVgC,IAAA,EAAK;IACLnB,KAAA,EAAOS,CAAA;IAENL,QAAA,EAAAlB;EAAA,CACH,CAEJ;AAAA,CAAC;AAEDiB,CAAA,CAAgBD,WAAA,GAAc;AClDrB,SAAApB,GAAA,IAAAsC,CAAA,EA2EHC,IAAA,IAAAC,EAAA,QA3EG;AAVT,IAAMC,EAAA,GAAgCC,CAAC;IAAEC,IAAA,EAAAvC;EAAK,MAUrCkC,CAAA,CAAC;IAAIM,SAAA,EAAU;IAAqB1B,KAAA,EATd;MAC3BP,KAAA,EAAO;MACPC,MAAA,EAAQ;MACRiC,SAAA,EAAW;MACXC,WAAA,EAAa;MACbC,YAAA,EAAc;MACdX,SAAA,EAAWhC,CAAA,GAAO,mBAAmB;IACvC;EAAA,CAEyD;EAe9C4C,CAAA,GAETC,CAAC;IACHL,SAAA,EAAAxC,CAAA,GAAY;IACZmB,QAAA,EAAAlB,CAAA;IACA6C,WAAA,EAAA5C,CAAA;IACA6C,UAAA,EAAA5C,CAAA;IACAiB,QAAA,EAAAC,CAAA;IACAP,KAAA,EAAAQ,CAAA;IACA,GAAG0B;EACL,MAAoB;IAClB,IAAMzB,CAAA,GAAwB;QAC5B0B,OAAA,EAAS;QACTC,aAAA,EAAe7B,CAAA,GAAW,QAAQ;QAClC8B,UAAA,EAAY;QACZ3C,MAAA,EAAQ;QACR4C,MAAA,EAAQnD,CAAA,GAAW,gBAAgBoB,CAAA,GAAW,cAAc;QAC5DM,aAAA,EAAe;QACf0B,KAAA,EAAO;QACP,GAAG/B;MACL;MAEMgC,CAAA,GAA6B;QACjCC,QAAA,EAAU;QACV/C,MAAA,EAAQa,CAAA,GAAW,IAAI;QACvBd,KAAA,EAAOc,CAAA,GAAW,SAAS;QAC3BmC,eAAA,EAAiB;QACjB7B,aAAA,EAAe;QACf8B,SAAA,EAAW;QACX,GAAGtD;MACL;MAEMuD,CAAA,GAA8B;QAClCT,OAAA,EAAS;QACTU,YAAA,EAAc;QACdC,GAAA,EAAK;QACLC,YAAA,EAAc;QACdC,UAAA,EAAY;QACZvD,KAAA,EAAO;QACPC,MAAA,EAAQ;QACRuD,YAAA,EAAc;QACdC,WAAA,EAAa;QACbC,WAAA,EAAa;QACbtC,aAAA,EAAe;QACfuC,cAAA,EAAgB;QAChBC,oBAAA,EAAsB;QACtBX,eAAA,EAAiB;QACjBC,SAAA,EAAW;QACXzB,SAAA,EAAWX,CAAA,GAAW,kBAAkB;QACxC,GAAGnB;MACL;IAEA,OACEkC,EAAA,CAAC;MACE,GAAGY,CAAA;MACJ,cAAYA,CAAA,CAAM,YAAY,KAAK;MACnCR,SAAA,EAAWxC,CAAA;MACXc,KAAA,EAAOS,CAAA;MAEPL,QAAA,GAAAgB,CAAA,CAAC;QAAIM,SAAA,EAAU;QAAoB1B,KAAA,EAAOwC;MAAA,CAAa,GACvDlB,EAAA,CAAC;QAAII,SAAA,EAAU;QAAsB1B,KAAA,EAAO4C,CAAA;QAC1CxC,QAAA,GAAAgB,CAAA,CAACG,EAAA,IAAU,GACXH,CAAA,CAACG,EAAA;UAAUE,IAAA,EAAI;QAAA,CAAC;MAAA,CAClB,GACAL,CAAA,CAAC;QAAIM,SAAA,EAAU;QAAoB1B,KAAA,EAAOwC;MAAA,CAAa;IAAA,CACzD,CAEJ;EAAA;ACrGA,SAASrE,WAAA,IAAAmF,EAAA,EAAajF,SAAA,IAAAkF,CAAA,EAAWC,eAAA,IAAAC,EAAA,EAAiBhF,MAAA,IAAAiF,CAAA,QAAc;AAGzD,IAAKC,CAAA,IAAApD,CAAA,KACVA,CAAA,CAAAqD,UAAA,GAAa,aACbrD,CAAA,CAAAsD,WAAA,GAAc,cACdtD,CAAA,CAAAuD,QAAA,GAAW,WACXvD,CAAA,CAAAwD,UAAA,GAAa,aAJHxD,CAAA,GAAAoD,CAAA;EAUCK,CAAA,GAAoBC,CAAC;IAChCC,SAAA,EAAAhF,CAAA,GAAY;IACZiF,SAAA,EAAAhF,CAAA,GAAY;IACZiF,cAAA,EAAAhF,CAAA,GAAiB;IACjB,GAAGC;EACL,IAAmB,CAAC,OAAsB;IACxC8C,OAAA,EAAS;IACT1C,KAAA,EAAO;IACPC,MAAA,EAAQ;IACR2E,QAAA,EAAU;IACVH,SAAA,EAAAhF,CAAA;IACAiF,SAAA,EAAAhF,CAAA;IACAiF,cAAA,EAAAhF,CAAA;IACA,GAAGC;EACL;EAGaiF,EAAA,GAAkBpF,CAAA,IAAgB;IAC7C,IAAMC,CAAA,GAAMuE,CAAA,CAAUxE,CAAK;IAE3B,OAAAqE,CAAA,CAAU,MAAM;MACdpE,CAAA,CAAIoF,OAAA,GAAUrF,CAChB;IAAA,CAAC,GAEMC,CAAA,CAAIoF,OACb;EAAA;EASaC,CAAA,GAAmBC,CAC9BvF,CAAA,EACAC,CAAA,EACAC,CAAA,EACAC,CAAA,KACS;IACT,IAAMkB,CAAA,GAAemD,CAAA,CAAgC;IAErDH,CAAA,CAAU,MAAM;MACdhD,CAAA,CAAagE,OAAA,GAAUpF,CACzB;IAAA,GAAG,CAACA,CAAO,CAAC,GAEZoE,CAAA,CAAU,MAAM;MAEd,IAAI,EAAEnE,CAAA,IAAWA,CAAA,CAAQsF,gBAAA,GAAmB;MAG5C,IAAMlE,CAAA,GAAgC0B,CAAA,IACpC3B,CAAA,CAAagE,OAAA,IAAWhE,CAAA,CAAagE,OAAA,CAAQrC,CAAK;MAEpD,OAAA9C,CAAA,CAAQsF,gBAAA,CAAiBxF,CAAA,EAAWsB,CAAA,EAAenB,CAAc,GAE1D,MAAY;QACjBD,CAAA,CAAQuF,mBAAA,CAAoBzF,CAAA,EAAWsB,CAAA,EAAenB,CAAc,CACtE;MAAA,CACF;IAAA,GAAG,CAACH,CAAA,EAAWE,CAAA,EAASC,CAAc,CAAC,CACzC;EAAA;EAMMuF,EAAA,GACJ,OAAOC,MAAA,GAAW,OAClB,OAAOA,MAAA,CAAOC,QAAA,GAAa,OAC3B,OAAOD,MAAA,CAAOC,QAAA,CAASC,aAAA,GAAkB,MACrCtB,EAAA,GACAF,CAAA;EAUOyB,EAAA,GAAoBC,CAC/B/F,CAAA,EACAC,CAAA,KACS;IACT,IAAMC,CAAA,GAAWsE,CAAA,CAAuB;MAElCrE,CAAA,GAAUiE,EAAA,CAAY,MAAM;QAC5BpE,CAAA,CAAIqF,OAAA,IAAWnF,CAAA,CAASmF,OAAA,IAASnF,CAAA,CAASmF,OAAA,CAAQW,OAAA,CAAQhG,CAAA,CAAIqF,OAAO,CAC3E;MAAA,GAAG,CAACrF,CAAG,CAAC;IAGR0F,EAAA,CAA0B,OACxBxF,CAAA,CAASmF,OAAA,GAAU,IAAIY,cAAA,CAAe,CAAC,CAAC5E,CAAK,MAAMpB,CAAA,CAAQoB,CAAA,CAAO6E,WAAW,CAAC,GAC9E/F,CAAA,CAAQ,GAED,MAAY;MACbD,CAAA,CAASmF,OAAA,IAASnF,CAAA,CAASmF,OAAA,CAAQc,UAAA,CAAW,CACpD;IAAA,IACC,CAAClG,CAAA,EAASE,CAAO,CAAC,CACvB;EAAA;AHwN6B,SAAAP,GAAA,IAAAwG,CAAA,EAkBvBjE,IAAA,IAAAkE,EAAA,QAlBuB;AA/S7B,IAAMC,CAAA,GAAuB;IAAEC,OAAA,EAAS;IAAOC,OAAA,EAAS;EAAK;EACvDC,CAAA,GAAuB;IAAEF,OAAA,EAAS;IAAMC,OAAA,EAAS;EAAM;EAGhDE,EAAA,GAAqB1H,EAAA,CAIhC,CACE;IACEmC,QAAA,EAAAnB,CAAA,GAAW;IACX2G,MAAA,EAAA1G,CAAA;IACA2G,OAAA,EAAA1G,CAAA;IACA2G,OAAA,EAAA1G,CAAA;IACA2G,mBAAA,EAAAzF,CAAA,GAAsB;IACtB0F,gBAAA,EAAAzF,CAAA;IACAF,QAAA,EAAA4B,CAAA,GAAW;IACX5C,QAAA,EAAAmB,CAAA,GAAW;IACXyF,aAAA,EAAA1D,CAAA,GAAgB;IAChB2D,qBAAA,EAAAvD,CAAA,GAAwB;IACxBwD,iBAAA,EAAAC,CAAA,GAAoB;IACpBrG,KAAA,EAAAsG,EAAA;IACArH,UAAA,EAAAsH,EAAA;IACA,GAAGC;EACL,GACAC,EAAA,KACiB;IAEjB,IAAMC,CAAA,GAAmBhI,CAAA,CAAuB,IAAI;MAE9CiI,CAAA,GAAmBjI,CAAA,CAAuB,IAAI;MAE9CkI,CAAA,GAAqBlI,CAAA,CAA0B,IAAI;MAEnDmI,CAAA,GAAmBnI,CAAA,CAAO+B,CAAQ;MAElC,CAACqG,CAAA,EAAYC,CAAa,IAAInI,CAAA,CAAS,EAAK;MAE5C,CAACoI,EAAA,EAAeC,CAAgB,IAAIrI,CAAA,CAAS,EAAI;MAEjDsI,CAAA,GAAmBxI,CAAA,CAAO,EAAK;MAE/B,CAACyI,EAAA,EAAmBC,EAAoB,IAAIxI,CAAA,CAA6B;MAEzEyI,CAAA,GAAmB/C,EAAA,CAAY7D,CAAQ;MAGvC6G,CAAA,GAAyBlJ,CAAA,CAC7B,UAAwB;QAAE8I,CAAA,EAAAK,CAAA;QAAGC,CAAA,EAAAC,CAAA;QAAGC,QAAA,EAAAC;MAAS,GAAgC;QACvE,IAAMC,CAAA,GAAclB,CAAA,CAAiBnC,OAAA;UAC/BsD,CAAA,GAAgBjB,CAAA,CAAmBrC,OAAA;UACnCuD,CAAA,GAAcnB,CAAA,CAAiBpC,OAAA;UAC/B;YAAE9E,KAAA,EAAAsI,CAAA;YAAOrI,MAAA,EAAAsI,CAAA;YAAQxI,IAAA,EAAAyI,EAAA;YAAM1I,GAAA,EAAA2I;UAAI,IAAIN,CAAA,CAAYO,qBAAA,CAAsB;QAGvE,IAAIJ,CAAA,KAAU,KAAKC,CAAA,KAAW,GAC5B;QAGF,IAAMI,EAAA,GAAgBlG,CAAA,GAClByF,CAAA,GACEF,CAAA,GAAIS,EAAA,GAAMrD,MAAA,CAAOwD,OAAA,GACjBZ,CAAA,GACFE,CAAA,GACAJ,CAAA,GAAIU,EAAA,GAAOpD,MAAA,CAAOyD,OAAA,GAClBf,CAAA;UAGEgB,CAAA,GAAeC,IAAA,CAAKC,GAAA,CACxBD,IAAA,CAAKE,GAAA,CAAKN,EAAA,IAAiBlG,CAAA,GAAW8F,CAAA,GAASD,CAAA,IAAU,KAAK,CAAC,GAC/D,GACF;UAEMY,CAAA,GAAYzG,CAAA,GACd8F,CAAA,IAAUJ,CAAA,CAAYgB,YAAA,IAAgB,KACtCb,CAAA,IAASH,CAAA,CAAYiB,WAAA,IAAe;UAElCC,CAAA,GACFtG,CAAA,GAAgBmG,CAAA,IAAczG,CAAA,GAAW8F,CAAA,GAASD,CAAA,IAAU;UAE1DgB,CAAA,GAAgCP,IAAA,CAAKC,GAAA,CACzCD,IAAA,CAAKE,GAAA,CAAIH,CAAA,EAAcO,CAAA,GAA0BH,CAAS,GAC1D,MAAMG,CAAA,GAA0BH,CAClC;QAEA9B,CAAA,CAAiBtC,OAAA,GAAUgE,CAAA,EAC3BV,CAAA,CAAcmB,YAAA,CAAa,iBAAiB,GAAGR,IAAA,CAAKS,KAAA,CAAMpC,CAAA,CAAiBtC,OAAO,CAAC,EAAE,GACrFsD,CAAA,CAAc7H,KAAA,CAAMT,GAAA,GAAM2C,CAAA,GAAW,GAAG6G,CAA6B,MAAM,KAC3ElB,CAAA,CAAc7H,KAAA,CAAMR,IAAA,GAAO0C,CAAA,GAAW,MAAM,GAAG6G,CAA6B,KAC5EjB,CAAA,CAAY9H,KAAA,CAAMkJ,QAAA,GAAWhH,CAAA,GACzB,SAAS6G,CAA6B,aACtC,eAAeA,CAA6B,MAE5CvI,CAAA,IACFA,CAAA,CAAiBqG,CAAA,CAAiBtC,OAAO,CAE7C;MAAA,GACA,CAAC/B,CAAA,EAAehC,CAAA,EAAkB0B,CAAQ,CAC5C;IAGA5D,CAAA,CAAU,MAAM;MACd,IAAM;UAAEmB,KAAA,EAAA0J,CAAA;UAAOzJ,MAAA,EAAA6H;QAAO,IACpBb,CAAA,CAAiBnC,OAAA,CACjB4D,qBAAA,CAAsB;QAGlBV,CAAA,GAAehH,CAAA,KAAa4G,CAAA,GAAmBR,CAAA,CAAiBtC,OAAA,GAAU9D,CAAA;MAEhF6G,CAAA,CAAuB;QACrBJ,CAAA,EAAIiC,CAAA,GAAQ,MAAO1B,CAAA;QACnBD,CAAA,EAAID,CAAA,GAAS,MAAOE;MACtB,CAAC,CACH;IAAA,GAAG,CAACjF,CAAA,EAAe/B,CAAA,EAAUyB,CAAA,EAAUmF,CAAA,EAAkBC,CAAsB,CAAC;IAGhF,IAAM8B,EAAA,GAAoBhL,CAAA,CACvB+K,CAAA,IAAqB;QACpBA,CAAA,CAAGE,cAAA,CAAe,GAGd,EAAAnK,CAAA,IAAYiK,CAAA,CAAGG,MAAA,KAAW,OAE9BhC,CAAA,CAAuB;UAAEI,QAAA,EAAU;UAAMR,CAAA,EAAGiC,CAAA,CAAGI,KAAA;UAAO/B,CAAA,EAAG2B,CAAA,CAAGK;QAAM,CAAC,GACnEzC,CAAA,CAAc,EAAI,GAClBE,CAAA,CAAiB,EAAI,EACvB;MAAA,GACA,CAAC/H,CAAA,EAAUoI,CAAsB,CACnC;MAGMmC,CAAA,GAAoBrL,CAAA,CACxB,UAAkBmJ,CAAA,EAAkB;QAClCD,CAAA,CAAuB;UAAEI,QAAA,EAAU;UAAMR,CAAA,EAAGK,CAAA,CAAGgC,KAAA;UAAO/B,CAAA,EAAGD,CAAA,CAAGiC;QAAM,CAAC,GACnEvC,CAAA,CAAiB,EAAK,CACxB;MAAA,GACA,CAACK,CAAsB,CACzB;MAGME,CAAA,GAAkBpJ,CAAA,CAAY,MAAM;QACxC2I,CAAA,CAAc,EAAK,GACnBE,CAAA,CAAiB,EAAI,CACvB;MAAA,GAAG,EAAE;MAGCyC,EAAA,GAAqEtL,CAAA,CACzE,CAAC;QAAEqB,KAAA,EAAA0J,CAAA;QAAOzJ,MAAA,EAAA6H;MAAO,MAAM;QACrB,IAAM;UAAE9H,KAAA,EAAOgI,CAAA;UAAa/H,MAAA,EAAQiI;QAAa,IAC/CjB,CAAA,CAAiBnC,OAAA,CACjB4D,qBAAA,CAAsB;QAExBb,CAAA,CAAuB;UACrBJ,CAAA,EAAKiC,CAAA,GAAQ,MAAOtC,CAAA,CAAiBtC,OAAA,GAAUkD,CAAA,GAAe0B,CAAA;UAC9D3B,CAAA,EAAKD,CAAA,GAAS,MAAOV,CAAA,CAAiBtC,OAAA,GAAUoD,CAAA,GAAgBJ;QAClE,CAAC,CACH;MAAA,GACA,CAACD,CAAsB,CACzB;MAMMqC,EAAA,GAAoBvL,CAAA,CAAa+K,CAAA,IAAqB;QAC1DA,CAAA,CAAGE,cAAA,CAAe,GACjBzC,CAAA,CAAmBrC,OAAA,CAA8BqF,KAAA,CAAM,CAC1D;MAAA,GAAG,EAAE;MAGCC,EAAA,GAAgBzL,CAAA,CACnB+K,CAAA,IAAsB;QACrB,IAAI,CAACW,MAAA,CAAOC,MAAA,CAAOpG,CAAiB,EAAEqG,QAAA,CAASb,CAAA,CAAGc,GAAwB,GACxE;QAGFd,CAAA,CAAGE,cAAA,CAAe,GAClBpC,CAAA,CAAiB,EAAI;QAErB,IAAM;YAAE1H,GAAA,EAAAgI,CAAA;YAAK/H,IAAA,EAAAiI;UAAK,IAChBb,CAAA,CAAmBrC,OAAA,CACnB4D,qBAAA,CAAsB;UAElB;YAAE1I,KAAA,EAAAkI,CAAA;YAAOjI,MAAA,EAAAkI;UAAO,IACpBlB,CAAA,CAAiBnC,OAAA,CACjB4D,qBAAA,CAAsB;UAGlBL,CAAA,GADe,OAAOzB,CAAA,IAAsB,WAE9C6D,UAAA,CAAW7D,CAAiB,IAC3BA,CAAA,GAAoBsB,CAAA,GAAS;UAE5BI,CAAA,GAAc7F,CAAA,GAChBiH,CAAA,CAAGc,GAAA,oBAAwCd,CAAA,CAAGc,GAAA,mBAC9Cd,CAAA,CAAGc,GAAA,qBAAyCd,CAAA,CAAGc,GAAA;UAE7CjC,CAAA,GAAeQ,IAAA,CAAKC,GAAA,CACxBD,IAAA,CAAKE,GAAA,CACHX,CAAA,GACIlB,CAAA,CAAiBtC,OAAA,GAAUuD,CAAA,GAC3BjB,CAAA,CAAiBtC,OAAA,GAAUuD,CAAA,EAC/B,CACF,GACA,GACF;QAEAR,CAAA,CAAuB;UACrBJ,CAAA,EAAGhF,CAAA,GAAWuF,CAAA,GAAQE,CAAA,GAAQK,CAAA,GAAgB;UAC9CR,CAAA,EAAGtF,CAAA,GAAY0F,CAAA,GAASI,CAAA,GAAgB,MAAMT;QAChD,CAAC,CACH;MAAA,GACA,CAAClB,CAAA,EAAmBnE,CAAA,EAAUoF,CAAsB,CACtD;IAGAhJ,CAAA,CAAU,MAAM;MACd8I,EAAA,CACE7G,CAAA,GAAsBqG,CAAA,CAAmBrC,OAAA,GAAUmC,CAAA,CAAiBnC,OACtE,CACF;IAAA,GAAG,CAAChE,CAAmB,CAAC,GAGxBjC,CAAA,CAAU,MAAM;MACd,IAAM6K,CAAA,GAAezC,CAAA,CAAiBnC,OAAA;QAEhCgD,CAAA,GAAqB4C,CAAA,KAAY;UACjCrD,CAAA,IACJU,CAAA,CAAgB,CAClB;QAAA;MAEA,OAAI5E,CAAA,KACFuG,CAAA,CAAazE,gBAAA,CAAiB,eAAe+E,CAAA,EAAmBjE,CAAoB,GACpF2D,CAAA,CAAazE,gBAAA,CAAiB,gBAAgB6C,CAAA,EAAoB/B,CAAoB,IAGjF,MAAM;QACX2D,CAAA,CAAaxE,mBAAA,CAAoB,eAAe8E,CAAiB,GACjEN,CAAA,CAAaxE,mBAAA,CAAoB,gBAAgB4C,CAAkB,CACrE;MAAA,CACF;IAAA,GAAG,CAAC3E,CAAA,EAAuB6G,CAAA,EAAmBjC,CAAA,EAAiBV,CAAU,CAAC,GAG1ExI,CAAA,CAAU,OACJwI,CAAA,IAAc,CAACI,CAAA,CAAiB3C,OAAA,KAClCM,MAAA,CAAOH,gBAAA,CAAiB,eAAe+E,CAAA,EAAmBjE,CAAoB,GAC9EX,MAAA,CAAOH,gBAAA,CAAiB,aAAa8C,CAAA,EAAiBhC,CAAoB,GAC1E0B,CAAA,CAAiB3C,OAAA,GAAU,KAGtB,MAAY;MACb2C,CAAA,CAAiB3C,OAAA,KACnBM,MAAA,CAAOF,mBAAA,CAAoB,eAAe8E,CAAiB,GAC3D5E,MAAA,CAAOF,mBAAA,CAAoB,aAAa6C,CAAe,GACvDN,CAAA,CAAiB3C,OAAA,GAAU,GAE/B;IAAA,IACC,CAACkF,CAAA,EAAmBjC,CAAA,EAAiBV,CAAU,CAAC,GAEnDtI,EAAA,CACEiI,EAAA,EACA,OACS;MACL2D,aAAA,EAAe1D,CAAA,CAAiBnC,OAAA;MAChC8F,YAAYlB,CAAA,EAAoB;QAC9B,IAAM;UAAE1J,KAAA,EAAA8H,CAAA;UAAO7H,MAAA,EAAA+H;QAAO,IACpBf,CAAA,CAAiBnC,OAAA,CACjB4D,qBAAA,CAAsB;QAExBb,CAAA,CAAuB;UACrBJ,CAAA,EAAIK,CAAA,GAAQ,MAAO4B,CAAA;UACnB3B,CAAA,EAAIC,CAAA,GAAS,MAAO0B;QACtB,CAAC,CACH;MAAA;IACF,IAEF,CAAC7B,CAAsB,CACzB,GAGAtC,EAAA,CAAkB0B,CAAA,EAAkBgD,EAAY,GAEhDlF,CAAA,CACE,WACAqF,EAAA,EACAjD,CAAA,CAAmBrC,OAAA,EACnBoB,CACF,GAEAnB,CAAA,CACE,SACAmF,EAAA,EACA/C,CAAA,CAAmBrC,OAAA,EACnBoB,CACF,GAEAnB,CAAA,CACE,eACA4E,EAAA,EACAjC,EAAA,EACAxB,CACF;IAGA,IAAM2E,EAAA,GAASnL,CAAA,IAAUmG,CAAA,CAACxD,CAAA;QAAyBzB,QAAA,EAAUnB,CAAA;QAAUoB,QAAA,EAAU4B;MAAA,CAAU;MACrFqI,CAAA,GAAoBvD,EAAA,GAAgBT,EAAA,GAAa;MAEjDiE,EAAA,GAA2B;QAC/BlL,QAAA,EAAU;QACV6C,OAAA,EAAS;QACTsI,QAAA,EAAU;QACVnI,MAAA,EAAQwE,CAAA,GAAc5E,CAAA,GAAW,cAAc,cAAe;QAC9DwI,WAAA,EAAa;QACb/K,UAAA,EAAY;QACZE,eAAA,EAAiB;QACjB8K,YAAA,EAAc;QACd7K,aAAA,EAAe;QACfC,gBAAA,EAAkB;QAClB,GAAGuG;MACL;IAEA,OACEf,EAAA,CAAC;MAAK,GAAGiB,EAAA;MAAOvG,GAAA,EAAKyG,CAAA;MAAkB1G,KAAA,EAAOwK,EAAA;MAAW,YAAS;MAC/DpK,QAAA,GAAAhB,CAAA,EACDkG,CAAA,CAACtG,CAAA;QAAciB,GAAA,EAAK0G,CAAA;QAAkB1H,UAAA,EAAYsL,CAAA;QAC/CnK,QAAA,EAAAf;MAAA,CACH,GAEAiG,CAAA,CAACnF,CAAA;QACCE,QAAA,EAAUnB,CAAA;QACVoB,QAAA,EAAU4B,CAAA;QACV5C,QAAA,EAAUkJ,IAAA,CAAKS,KAAA,CAAMpC,CAAA,CAAiBtC,OAAO;QAC7CtE,GAAA,EAAK2G,CAAA;QACL3H,UAAA,EAAYsL,CAAA;QAEXnK,QAAA,EAAAkK;MAAA,CACH;IAAA,CACF,CAEJ;EAAA,CACF;AAEA1E,EAAA,CAAmB1F,WAAA,GAAc;AIjWxB,SAAApB,GAAA,IAAA8L,EAAA;AANF,IAAMC,EAAA,GAA4DC,CAAC;EACxE9K,KAAA,EAAAd,CAAA;EACA,GAAGC;AACL,MAAoB;EAClB,IAAMC,CAAA,GAA2B4E,CAAA,CAAkB9E,CAAK;EAExD,OAAO0L,EAAA,CAAC;IAAK,GAAGzL,CAAA;IAAOa,KAAA,EAAOZ,CAAA;IAAW,YAAS;EAAA,CAAQ,CAC5D;AAAA;ACfA,SAASX,MAAA,IAAAsM,EAAA,QAAc;AAOhB,IAAMC,EAAA,GAA2BC,CAAA,KACtCF,EAAA,CAAuC;EACrCX,aAAA,EAAe;EACfC,WAAA,EAAaA,CAAA,KAEXa,OAAA,CAAQC,IAAA,CACN,sFACF;AACJ,CAAC;AAAA,SAAAvF,EAAA,IAAAwF,kBAAA,EAAAtJ,CAAA,IAAAC,wBAAA,EAAA8I,EAAA,IAAAC,uBAAA,EAAA9G,CAAA,IAAAC,iBAAA,EAAA+G,EAAA,IAAAC,wBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}