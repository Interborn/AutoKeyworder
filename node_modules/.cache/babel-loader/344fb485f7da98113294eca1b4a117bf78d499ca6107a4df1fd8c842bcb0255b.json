{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\home\\\\UpscaleInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpscaleInput({\n  onUploadClicked\n}) {\n  _s();\n  const dropzoneRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const fileListRef = useRef(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isUploadClicked, setIsUploadClicked] = useState(false);\n  const [isFileAdded, setIsFileAdded] = useState(false);\n  const [editedFiles, setEditedFiles] = useState([]);\n  const [isFolderUploaded, setIsFolderUploaded] = useState(false);\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n  useEffect(() => {\n    const initialEditedFiles = uploadedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setEditedFiles(initialEditedFiles);\n  }, [uploadedFiles]);\n  useEffect(() => {\n    if (uploadedFiles.length > 0) {\n      onUploadClicked(uploadedFiles);\n    }\n  }, [uploadedFiles, onUploadClicked]);\n  useEffect(() => {\n    const handleDragEnter = e => {\n      e.preventDefault();\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.add('border-green-600');\n      }\n    };\n    const handleDragOver = e => {\n      e.preventDefault();\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.add('border-green-600');\n      }\n    };\n    const handleDragLeave = () => {\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.remove('border-green-600');\n      }\n    };\n    const handleDrop = e => {\n      e.preventDefault();\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.remove('border-green-600');\n      }\n      handleFiles(e.dataTransfer.files);\n    };\n    const handleChange = e => {\n      handleFiles(e.target.files);\n    };\n    const dropzone = dropzoneRef.current;\n    dropzone.addEventListener('dragenter', handleDragEnter);\n    dropzone.addEventListener('dragover', handleDragOver);\n    dropzone.addEventListener('dragleave', handleDragLeave);\n    dropzone.addEventListener('drop', handleDrop);\n    fileInputRef.current.addEventListener('change', handleChange);\n    return () => {\n      dropzone.removeEventListener('dragenter', handleDragEnter);\n      dropzone.removeEventListener('dragover', handleDragOver);\n      dropzone.removeEventListener('dragleave', handleDragLeave);\n      dropzone.removeEventListener('drop', handleDrop);\n      fileInputRef.current.removeEventListener('change', handleChange);\n    };\n  }, [isUploadClicked, dropzoneRef, fileInputRef]);\n  const handleFiles = files => {\n    if (fileListRef.current) {\n      fileListRef.current.innerHTML = '';\n      let totalSize = 0;\n      let isFolder = false;\n      for (const file of files) {\n        totalSize += file.size;\n        if (file.webkitRelativePath) {\n          // this property is usually present for files in a folder\n          isFolder = true;\n        }\n      }\n      setIsFolderUploaded(isFolder);\n      if (isFolder) {\n        const folderName = files[0].webkitRelativePath.split('/')[0]; // Gets the folder name\n        fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\n      } else {\n        for (const file of files) {\n          const listItem = document.createElement('div');\n          const maxNameLength = 33;\n          let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\n          listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\n          fileListRef.current.appendChild(listItem);\n        }\n      }\n      setIsFileAdded(files.length > 0);\n    }\n  };\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex lg:flex-row flex-col w-full transition-container $justify-start lg:max-w-[650px]`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-input h-full w-full lg:max-h-[600px] rounded-lg shadow-lg`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropzoneRef,\n        className: `bg-stone-900 px-8 py-16 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg group ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          className: \"cursor-pointer flex flex-col items-center space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            stroke: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: \"2\",\n              d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: \"Drag and drop your files here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \" text-sm\",\n            children: \"(or click to select)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"fileInput\",\n          ref: fileInputRef,\n          type: \"file\",\n          className: \"hidden file-list\",\n          name: \"folderUpload\",\n          webkitdirectory: \"true\",\n          directory: \"true\",\n          multiple: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(UpscaleInput, \"U0iC49N48+3F8M8YaOEeAL3jbkY=\");\n_c = UpscaleInput;\nexport default UpscaleInput;\nvar _c;\n$RefreshReg$(_c, \"UpscaleInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","UpscaleInput","onUploadClicked","_s","dropzoneRef","fileInputRef","fileListRef","uploadedFiles","setUploadedFiles","isUploadClicked","setIsUploadClicked","isFileAdded","setIsFileAdded","editedFiles","setEditedFiles","isFolderUploaded","setIsFolderUploaded","serverOrigin","window","location","protocol","hostname","initialEditedFiles","map","file","editedTitle","generatedFilename","editedKeywords","keywords","length","handleDragEnter","e","preventDefault","current","classList","add","handleDragOver","handleDragLeave","remove","handleDrop","handleFiles","dataTransfer","files","handleChange","target","dropzone","addEventListener","removeEventListener","innerHTML","totalSize","isFolder","size","webkitRelativePath","folderName","split","textContent","formatBytes","listItem","document","createElement","maxNameLength","truncatedName","name","substring","appendChild","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","className","children","ref","htmlFor","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","id","type","webkitdirectory","directory","multiple","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/home/UpscaleInput.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\n\r\nfunction UpscaleInput({ onUploadClicked }) {\r\n    const dropzoneRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const fileListRef = useRef(null);\r\n    \r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [isUploadClicked, setIsUploadClicked] = useState(false);\r\n    const [isFileAdded, setIsFileAdded] = useState(false);\r\n    \r\n    const [editedFiles, setEditedFiles] = useState([]);\r\n    const [isFolderUploaded, setIsFolderUploaded] = useState(false);\r\n\r\n    \r\n    \r\n    const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n    \r\n    useEffect(() => {\r\n        const initialEditedFiles = uploadedFiles.map(file => ({\r\n        ...file,\r\n        editedTitle: file.generatedFilename,\r\n        editedKeywords: file.keywords\r\n        }));\r\n        setEditedFiles(initialEditedFiles);\r\n    }, [uploadedFiles]);\r\n\r\n    useEffect(() => {\r\n        if (uploadedFiles.length > 0) {\r\n            onUploadClicked(uploadedFiles);\r\n        }\r\n    }, [uploadedFiles, onUploadClicked]);  \r\n    \r\n    useEffect(() => {\r\n        const handleDragEnter = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.add('border-green-600');\r\n            }\r\n        };\r\n    \r\n        const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.add('border-green-600');\r\n            }\r\n        };\r\n    \r\n        const handleDragLeave = () => {\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.remove('border-green-600');\r\n            }\r\n        };\r\n    \r\n        const handleDrop = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.remove('border-green-600');\r\n            }\r\n            handleFiles(e.dataTransfer.files);\r\n        };\r\n    \r\n        const handleChange = (e) => {\r\n            handleFiles(e.target.files);\r\n        };\r\n    \r\n    \r\n        const dropzone = dropzoneRef.current;\r\n    \r\n    \r\n        dropzone.addEventListener('dragenter', handleDragEnter);\r\n        dropzone.addEventListener('dragover', handleDragOver);\r\n        dropzone.addEventListener('dragleave', handleDragLeave);\r\n        dropzone.addEventListener('drop', handleDrop);\r\n        fileInputRef.current.addEventListener('change', handleChange);\r\n    \r\n        return () => {\r\n            dropzone.removeEventListener('dragenter', handleDragEnter);\r\n            dropzone.removeEventListener('dragover', handleDragOver);\r\n            dropzone.removeEventListener('dragleave', handleDragLeave);\r\n            dropzone.removeEventListener('drop', handleDrop);\r\n            fileInputRef.current.removeEventListener('change', handleChange);\r\n        };\r\n    }, [isUploadClicked, dropzoneRef, fileInputRef]);\r\n    \r\n    const handleFiles = (files) => {\r\n        if (fileListRef.current) {\r\n            fileListRef.current.innerHTML = '';\r\n            let totalSize = 0;\r\n            let isFolder = false;\r\n        \r\n            for (const file of files) {\r\n                totalSize += file.size;\r\n                if (file.webkitRelativePath) { // this property is usually present for files in a folder\r\n                    isFolder = true;\r\n                }\r\n            }\r\n        \r\n            setIsFolderUploaded(isFolder);\r\n        \r\n            if (isFolder) {\r\n                const folderName = files[0].webkitRelativePath.split('/')[0]; // Gets the folder name\r\n                fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\r\n            } else {\r\n                for (const file of files) {\r\n                    const listItem = document.createElement('div');\r\n                    const maxNameLength = 33;\r\n                    let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\r\n                    listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\r\n                    fileListRef.current.appendChild(listItem);\r\n                }\r\n            }\r\n        \r\n            setIsFileAdded(files.length > 0);\r\n        }\r\n    };\r\n    \r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n    \r\n\r\n  return (\r\n    <div className={`flex lg:flex-row flex-col w-full transition-container $justify-start lg:max-w-[650px]`}>\r\n              \r\n        <div className={`image-input h-full w-full lg:max-h-[600px] rounded-lg shadow-lg`}>\r\n\r\n            {/* DROP ZONE */}\r\n            <div\r\n                ref={dropzoneRef}\r\n                className={`bg-stone-900 px-8 py-16 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg group ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`}\r\n            >\r\n                <label htmlFor=\"fileInput\" className=\"cursor-pointer flex flex-col items-center space-y-2\">\r\n                    <svg className=\"w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                    </svg>\r\n                    <span className=\"\">Drag and drop your files here</span>\r\n                    <span className=\" text-sm\">(or click to select)</span>\r\n                </label>\r\n                <input id=\"fileInput\" ref={fileInputRef} type=\"file\" className=\"hidden file-list\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpscaleInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}