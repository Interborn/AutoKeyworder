{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\ListLookView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Masonry from 'react-masonry-css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListLookView({\n  uploadedFiles,\n  isUpscaled,\n  isTitleSet\n}) {\n  _s();\n  const [editedFiles, setEditedFiles] = useState([]);\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n  useEffect(() => {\n    const initialEditedFiles = uploadedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setEditedFiles(initialEditedFiles);\n  }, [uploadedFiles, isTitleSet]);\n  const handleTitleChange = (index, event) => {\n    const updatedFiles = [...editedFiles];\n    updatedFiles[index].editedTitle = event.target.value;\n    setEditedFiles(updatedFiles);\n  };\n  const handleKeywordsChange = (index, event) => {\n    const updatedFiles = [...editedFiles];\n    updatedFiles[index].editedKeywords = event.target.value;\n    setEditedFiles(updatedFiles);\n  };\n  const handleJsonEditorSubmit = async event => {\n    event.preventDefault();\n    const updatedData = editedFiles.map(file => ({\n      originalFilename: file.originalFilename,\n      generatedFilename: file.editedTitle,\n      keywords: file.editedKeywords\n    }));\n    try {\n      const response = await fetch('http://localhost:3001/update', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedData)\n      });\n      if (response.ok) {\n        console.log('JSON data updated successfully');\n        const text = await response.text();\n        console.log('Server Response:', text);\n      } else {\n        const text = await response.text();\n        console.error('Error updating JSON data:', text);\n      }\n    } catch (error) {\n      console.error('There was a problem with updating the JSON data:', error);\n    }\n  };\n  const breakpointColumnsObj = {\n    default: 4,\n    1100: 3,\n    700: 2,\n    500: 1\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"jsonEditor-formBody\",\n    onSubmit: handleJsonEditorSubmit,\n    encType: \"multipart/form-data\",\n    className: \"w-full\",\n    children: /*#__PURE__*/_jsxDEV(Masonry, {\n      breakpointCols: breakpointColumnsObj,\n      className: \"my-masonry-grid\",\n      columnClassName: \"my-masonry-grid_column\",\n      children: uploadedFiles.map((file, index) => {\n        var _editedFiles$index, _editedFiles$index2;\n        let filename;\n        let folder;\n        isTitleSet = false;\n        if (isTitleSet) {\n          if (isUpscaled) {\n            folder = 'upscaled';\n            filename = `${file.sanitizedTitle}.jpg`;\n          } else {\n            folder = 'uploads';\n            filename = file.originalFilename;\n          }\n        } else {\n          if (isUpscaled) {\n            folder = 'upscaled';\n            filename = file.originalFilename;\n          } else {\n            folder = 'uploads';\n            filename = file.originalFilename;\n          }\n        }\n        const imageUrl = `${serverOrigin}/${folder}/${filename}`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: filename,\n            className: \"object-cover w-full rounded-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute bottom-0 left-0 right-0 bg-white bg-opacity-75 p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: \"Title:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: ((_editedFiles$index = editedFiles[index]) === null || _editedFiles$index === void 0 ? void 0 : _editedFiles$index.editedTitle) || '',\n                onChange: event => handleTitleChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold\",\n                children: \"Keywords:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: ((_editedFiles$index2 = editedFiles[index]) === null || _editedFiles$index2 === void 0 ? void 0 : _editedFiles$index2.editedKeywords) || '',\n                onChange: event => handleKeywordsChange(index, event)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(ListLookView, \"AVnY/QtAIQEsXsrQ9R0aQv6PWWM=\");\n_c = ListLookView;\nexport default ListLookView;\nvar _c;\n$RefreshReg$(_c, \"ListLookView\");","map":{"version":3,"names":["React","useEffect","useState","Masonry","jsxDEV","_jsxDEV","ListLookView","uploadedFiles","isUpscaled","isTitleSet","_s","editedFiles","setEditedFiles","serverOrigin","window","location","protocol","hostname","initialEditedFiles","map","file","editedTitle","generatedFilename","editedKeywords","keywords","handleTitleChange","index","event","updatedFiles","target","value","handleKeywordsChange","handleJsonEditorSubmit","preventDefault","updatedData","originalFilename","response","fetch","method","headers","body","JSON","stringify","ok","console","log","text","error","breakpointColumnsObj","default","id","onSubmit","encType","className","children","breakpointCols","columnClassName","_editedFiles$index","_editedFiles$index2","filename","folder","sanitizedTitle","imageUrl","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/ListLookView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Masonry from 'react-masonry-css';\r\n\r\nfunction ListLookView({ uploadedFiles, isUpscaled, isTitleSet }) {\r\n  const [editedFiles, setEditedFiles] = useState([]);\r\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n\r\n  useEffect(() => {\r\n    const initialEditedFiles = uploadedFiles.map(file => ({\r\n        ...file,\r\n        editedTitle: file.generatedFilename,\r\n        editedKeywords: file.keywords\r\n    }));\r\n    setEditedFiles(initialEditedFiles);\r\n  }, [uploadedFiles, isTitleSet]);\r\n\r\n  const handleTitleChange = (index, event) => {\r\n      const updatedFiles = [...editedFiles];\r\n      updatedFiles[index].editedTitle = event.target.value;\r\n      setEditedFiles(updatedFiles);\r\n  };   \r\n  \r\n  const handleKeywordsChange = (index, event) => {\r\n      const updatedFiles = [...editedFiles];\r\n      updatedFiles[index].editedKeywords = event.target.value;\r\n      setEditedFiles(updatedFiles);\r\n  };\r\n  \r\n  const handleJsonEditorSubmit = async (event) => {\r\n      event.preventDefault();\r\n      const updatedData = editedFiles.map(file => ({\r\n      originalFilename: file.originalFilename,\r\n      generatedFilename: file.editedTitle,\r\n      keywords: file.editedKeywords\r\n      }));\r\n      try {\r\n      const response = await fetch('http://localhost:3001/update', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updatedData)\r\n      });\r\n      if (response.ok) {\r\n      console.log('JSON data updated successfully');\r\n      const text = await response.text();\r\n      console.log('Server Response:', text);\r\n      } else {\r\n      const text = await response.text();\r\n      console.error('Error updating JSON data:', text);\r\n      }\r\n      } catch (error) {\r\n      console.error('There was a problem with updating the JSON data:', error);\r\n      }\r\n  };\r\n  \r\n  const breakpointColumnsObj = {\r\n    default: 4,\r\n    1100: 3,\r\n    700: 2,\r\n    500: 1\r\n  };\r\n  \r\n  return (\r\n    <form id=\"jsonEditor-formBody\" onSubmit={handleJsonEditorSubmit} encType=\"multipart/form-data\" className=\"w-full\">\r\n      <Masonry\r\n          breakpointCols={breakpointColumnsObj}\r\n          className=\"my-masonry-grid\"\r\n          columnClassName=\"my-masonry-grid_column\"\r\n      >\r\n        {uploadedFiles.map((file, index) => {\r\n          let filename;\r\n          let folder;\r\n          isTitleSet = false;\r\n\r\n          if (isTitleSet) {\r\n            if (isUpscaled) { \r\n              folder = 'upscaled';\r\n              filename = `${file.sanitizedTitle}.jpg`;\r\n            }\r\n            else {\r\n              folder = 'uploads';\r\n              filename = file.originalFilename;\r\n            }\r\n          } else {\r\n            if (isUpscaled) {\r\n              folder = 'upscaled';\r\n              filename = file.originalFilename;\r\n            } else {\r\n              folder = 'uploads';\r\n              filename = file.originalFilename;\r\n            }\r\n          }\r\n          const imageUrl = `${serverOrigin}/${folder}/${filename}`;\r\n          return (\r\n            <div key={index} className=\"relative\">\r\n              <img src={imageUrl} alt={filename} className=\"object-cover w-full rounded-md\" />\r\n              <div className=\"absolute bottom-0 left-0 right-0 bg-white bg-opacity-75 p-2\">\r\n                {/* Title and keywords editor */}\r\n                <div>\r\n                  <span className=\"font-bold\">Title:</span>\r\n                  <input value={editedFiles[index]?.editedTitle || ''} onChange={(event) => handleTitleChange(index, event)} />\r\n                </div>\r\n                <div>\r\n                  <span className=\"font-bold\">Keywords:</span>\r\n                  <input value={editedFiles[index]?.editedKeywords || ''} onChange={(event) => handleKeywordsChange(index, event)} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            );\r\n        })}\r\n      </Masonry>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ListLookView;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}