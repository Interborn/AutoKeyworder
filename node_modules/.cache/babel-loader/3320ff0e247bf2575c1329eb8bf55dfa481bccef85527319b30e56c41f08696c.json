{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\uploadPopup.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport ImageInput from './ImageInput';\nimport ListLookView from './ListLookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPopup({\n  title,\n  subheading,\n  description\n}) {\n  _s();\n  const dropzoneRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const fileListRef = useRef(null);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isUpscaled, setIsUpscaled] = useState(false);\n  const [isTitleSet, setIsTitleSet] = useState(false);\n  const [isUploadClicked, setIsUploadClicked] = useState(false);\n  const [isFileAdded, setIsFileAdded] = useState(false);\n  const [editedFiles, setEditedFiles] = useState([]);\n  const [isFolderUploaded, setIsFolderUploaded] = useState(false);\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n  useEffect(() => {\n    const initialEditedFiles = uploadedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setEditedFiles(initialEditedFiles);\n  }, [uploadedFiles]);\n  const onUploadClicked = files => {\n    setUploadedFiles(files);\n    setIsUploadClicked(true); // This will show the liveLookList\n  };\n\n  const handleTitleChange = (index, event) => {\n    const updatedFiles = [...editedFiles];\n    updatedFiles[index].editedTitle = event.target.value;\n    setEditedFiles(updatedFiles);\n  };\n  const handleKeywordsChange = (index, event) => {\n    const updatedFiles = [...editedFiles];\n    updatedFiles[index].editedKeywords = event.target.value;\n    setEditedFiles(updatedFiles);\n  };\n  useEffect(() => {\n    const dropzone = dropzoneRef.current;\n    const fileInput = fileInputRef.current;\n    if (dropzone && fileInput) {\n      const handleDragEnter = e => {\n        e.preventDefault();\n        if (!isUploadClicked) {\n          dropzone.classList.add('border-green-600');\n        }\n      };\n      const handleDragOver = e => {\n        e.preventDefault();\n        if (!isUploadClicked) {\n          dropzone.classList.add('border-green-600');\n        }\n      };\n      const handleDragLeave = () => {\n        if (!isUploadClicked) {\n          dropzone.classList.remove('border-green-600');\n        }\n      };\n      const handleDrop = e => {\n        e.preventDefault();\n        if (!isUploadClicked) {\n          dropzone.classList.remove('border-green-600');\n        }\n        handleFiles(e.dataTransfer.files);\n      };\n      const handleChange = e => {\n        handleFiles(e.target.files);\n      };\n\n      // Add event listeners\n      dropzone.addEventListener('dragenter', handleDragEnter);\n      dropzone.addEventListener('dragover', handleDragOver);\n      dropzone.addEventListener('dragleave', handleDragLeave);\n      dropzone.addEventListener('drop', handleDrop);\n      fileInput.addEventListener('change', handleChange);\n\n      // Remove event listeners on cleanup\n      return () => {\n        dropzone.removeEventListener('dragenter', handleDragEnter);\n        dropzone.removeEventListener('dragover', handleDragOver);\n        dropzone.removeEventListener('dragleave', handleDragLeave);\n        dropzone.removeEventListener('drop', handleDrop);\n        fileInput.removeEventListener('change', handleChange);\n      };\n    }\n  }, [isUploadClicked, dropzoneRef, fileInputRef]);\n  const handleFiles = files => {\n    fileListRef.current.innerHTML = '';\n    let totalSize = 0;\n    let isFolder = false;\n    for (const file of files) {\n      totalSize += file.size;\n      if (file.webkitRelativePath) {\n        // this property is usually present for files in a folder\n        isFolder = true;\n      }\n    }\n    const filesArray = Array.from(files);\n    setIsFolderUploaded(filesArray.some(file => file.webkitRelativePath));\n    setUploadedFiles(filesArray);\n    if (isFolder) {\n      const folderName = files[0].webkitRelativePath.split('/')[0]; // Gets the folder name\n      fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\n    } else {\n      for (const file of files) {\n        const listItem = document.createElement('div');\n        const maxNameLength = 33;\n        let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\n        listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\n        fileListRef.current.appendChild(listItem);\n      }\n    }\n    setIsFileAdded(files.length > 0);\n  };\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  useEffect(() => {\n    const initialEditedFiles = uploadedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setEditedFiles(initialEditedFiles);\n  }, [uploadedFiles]);\n  const handleFilesAdded = fileList => {\n    // Convert the FileList to an Array\n    const filesArray = Array.from(fileList);\n    setIsFolderUploaded(filesArray.some(file => file.webkitRelativePath));\n    setUploadedFiles(filesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"absolute top-5 z-[999] bg-green-100 rounded-xl flex justify-around items-center md:flex-row flex-col min-h-[95vh] w-[95vw] lg:px-20 sm:px-10 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col w-full gap-8 items-start`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `max-w-[600px]`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex text-white drop-shadow-lg w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-[40px] mr-4 font-bold\",\n            children: \"Title -\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-[30px] self-center mt-1 font-semibold underline\",\n            children: \"Subheading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia vel ducimus autem? Qui, cum corporis vero provident eaque impedit eligendi consectetur laborum odio, nam sunt, aliquam ut reiciendis nihil exercitationem!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImageInput, {\n        onFilesAdded: handleFilesAdded,\n        onUploadClicked: onUploadClicked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full min-h-[90vh] flex\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `flex w-full transition-container justify-end visible ${isUploadClicked ? 'visible' : 'hidden'}`,\n          children: /*#__PURE__*/_jsxDEV(ListLookView, {\n            uploadedFiles: uploadedFiles,\n            editedFiles: editedFiles,\n            handleTitleChange: handleTitleChange,\n            handleKeywordsChange: handleKeywordsChange,\n            isUpscaled: isUpscaled,\n            serverOrigin: serverOrigin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadPopup, \"CeGZF0P9SIf29gaT4fB2p/orY70=\");\n_c = UploadPopup;\n;\nexport default UploadPopup;\nvar _c;\n$RefreshReg$(_c, \"UploadPopup\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ImageInput","ListLookView","jsxDEV","_jsxDEV","UploadPopup","title","subheading","description","_s","dropzoneRef","fileInputRef","fileListRef","uploadedFiles","setUploadedFiles","isUpscaled","setIsUpscaled","isTitleSet","setIsTitleSet","isUploadClicked","setIsUploadClicked","isFileAdded","setIsFileAdded","editedFiles","setEditedFiles","isFolderUploaded","setIsFolderUploaded","serverOrigin","window","location","protocol","hostname","initialEditedFiles","map","file","editedTitle","generatedFilename","editedKeywords","keywords","onUploadClicked","files","handleTitleChange","index","event","updatedFiles","target","value","handleKeywordsChange","dropzone","current","fileInput","handleDragEnter","e","preventDefault","classList","add","handleDragOver","handleDragLeave","remove","handleDrop","handleFiles","dataTransfer","handleChange","addEventListener","removeEventListener","innerHTML","totalSize","isFolder","size","webkitRelativePath","filesArray","Array","from","some","folderName","split","textContent","formatBytes","listItem","document","createElement","maxNameLength","truncatedName","name","length","substring","appendChild","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","handleFilesAdded","fileList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilesAdded","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/uploadPopup.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport ImageInput from './ImageInput';\r\nimport ListLookView from './ListLookView';\r\n\r\nfunction UploadPopup({ title, subheading, description }) {\r\n    const dropzoneRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const fileListRef = useRef(null);\r\n    \r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [isUpscaled, setIsUpscaled] = useState(false);\r\n    const [isTitleSet, setIsTitleSet] = useState(false);\r\n    const [isUploadClicked, setIsUploadClicked] = useState(false);\r\n    const [isFileAdded, setIsFileAdded] = useState(false);\r\n    \r\n    const [editedFiles, setEditedFiles] = useState([]);\r\n    const [isFolderUploaded, setIsFolderUploaded] = useState(false);\r\n    \r\n    const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n    \r\n    useEffect(() => {\r\n        const initialEditedFiles = uploadedFiles.map(file => ({\r\n        ...file,\r\n        editedTitle: file.generatedFilename,\r\n        editedKeywords: file.keywords\r\n        }));\r\n        setEditedFiles(initialEditedFiles);\r\n    }, [uploadedFiles]);\r\n\r\n    const onUploadClicked = (files) => {\r\n        setUploadedFiles(files);\r\n        setIsUploadClicked(true); // This will show the liveLookList\r\n    };\r\n    \r\n    const handleTitleChange = (index, event) => {\r\n        const updatedFiles = [...editedFiles];\r\n        updatedFiles[index].editedTitle = event.target.value;\r\n        setEditedFiles(updatedFiles);\r\n    };   \r\n    \r\n    const handleKeywordsChange = (index, event) => {\r\n        const updatedFiles = [...editedFiles];\r\n        updatedFiles[index].editedKeywords = event.target.value;\r\n        setEditedFiles(updatedFiles);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        const dropzone = dropzoneRef.current;\r\n        const fileInput = fileInputRef.current;\r\n\r\n        if (dropzone && fileInput) {\r\n            const handleDragEnter = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzone.classList.add('border-green-600');\r\n            }\r\n            };\r\n\r\n            const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzone.classList.add('border-green-600');\r\n            }\r\n            };\r\n\r\n            const handleDragLeave = () => {\r\n            if (!isUploadClicked) {\r\n                dropzone.classList.remove('border-green-600');\r\n            }\r\n            };\r\n\r\n            const handleDrop = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzone.classList.remove('border-green-600');\r\n            }\r\n            handleFiles(e.dataTransfer.files);\r\n            };\r\n\r\n            const handleChange = (e) => {\r\n            handleFiles(e.target.files);\r\n            };\r\n\r\n            // Add event listeners\r\n            dropzone.addEventListener('dragenter', handleDragEnter);\r\n            dropzone.addEventListener('dragover', handleDragOver);\r\n            dropzone.addEventListener('dragleave', handleDragLeave);\r\n            dropzone.addEventListener('drop', handleDrop);\r\n            fileInput.addEventListener('change', handleChange);\r\n\r\n            // Remove event listeners on cleanup\r\n            return () => {\r\n            dropzone.removeEventListener('dragenter', handleDragEnter);\r\n            dropzone.removeEventListener('dragover', handleDragOver);\r\n            dropzone.removeEventListener('dragleave', handleDragLeave);\r\n            dropzone.removeEventListener('drop', handleDrop);\r\n            fileInput.removeEventListener('change', handleChange);\r\n            };\r\n        }\r\n    }, [isUploadClicked, dropzoneRef, fileInputRef]);\r\n    \r\n    const handleFiles = (files) => {\r\n        fileListRef.current.innerHTML = '';\r\n        let totalSize = 0;\r\n        let isFolder = false;\r\n    \r\n        for (const file of files) {\r\n            totalSize += file.size;\r\n            if (file.webkitRelativePath) { // this property is usually present for files in a folder\r\n                isFolder = true;\r\n            }\r\n        }\r\n    \r\n        const filesArray = Array.from(files);\r\n        setIsFolderUploaded(filesArray.some(file => file.webkitRelativePath));\r\n        setUploadedFiles(filesArray);\r\n    \r\n        if (isFolder) {\r\n            const folderName = files[0].webkitRelativePath.split('/')[0]; // Gets the folder name\r\n            fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\r\n        } else {\r\n            for (const file of files) {\r\n                const listItem = document.createElement('div');\r\n                const maxNameLength = 33;\r\n                let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\r\n                listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\r\n                fileListRef.current.appendChild(listItem);\r\n            }\r\n        }\r\n    \r\n        setIsFileAdded(files.length > 0);\r\n    };\r\n    \r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n  \r\n    useEffect(() => {\r\n      const initialEditedFiles = uploadedFiles.map(file => ({\r\n        ...file,\r\n        editedTitle: file.generatedFilename,\r\n        editedKeywords: file.keywords\r\n      }));\r\n      setEditedFiles(initialEditedFiles);\r\n    }, [uploadedFiles]);\r\n\r\n    const handleFilesAdded = (fileList) => {\r\n        // Convert the FileList to an Array\r\n        const filesArray = Array.from(fileList);\r\n        setIsFolderUploaded(filesArray.some(file => file.webkitRelativePath));\r\n        setUploadedFiles(filesArray);\r\n    };\r\n\r\nreturn (\r\n    <main className=\"absolute top-5 z-[999] bg-green-100 rounded-xl flex justify-around items-center md:flex-row flex-col min-h-[95vh] w-[95vw] lg:px-20 sm:px-10 px-4\">\r\n\r\n        <div className={`flex flex-col w-full gap-8 items-start`}>\r\n\r\n            {/* POPUP HEADER */}\r\n            <div className={`max-w-[600px]`}>\r\n                <div className=\"flex text-white drop-shadow-lg w-full\">\r\n                    <h3 className=\"text-[40px] mr-4 font-bold\">Title -</h3>\r\n                    <h4 className=\"text-[30px] self-center mt-1 font-semibold underline\">Subheading</h4>\r\n                </div>\r\n                <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia vel ducimus autem? Qui, cum corporis vero provident eaque impedit eligendi consectetur laborum odio, nam sunt, aliquam ut reiciendis nihil exercitationem!</p>\r\n            </div>\r\n\r\n            {/* IMAGE INPUT */}\r\n            <ImageInput onFilesAdded={handleFilesAdded} onUploadClicked={onUploadClicked} />\r\n\r\n        </div>\r\n        \r\n        <div className='flex'>\r\n\r\n            <div className='w-full min-h-[90vh] flex'>\r\n                {/* IMAGE FORM */}\r\n                <div className={`flex w-full transition-container justify-end visible ${isUploadClicked ? 'visible' : 'hidden'}`}>\r\n                    <ListLookView \r\n                        uploadedFiles={uploadedFiles} \r\n                        editedFiles={editedFiles}\r\n                        handleTitleChange={handleTitleChange}\r\n                        handleKeywordsChange={handleKeywordsChange}\r\n                        isUpscaled={isUpscaled}\r\n                        serverOrigin={serverOrigin}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n)\r\n};\r\n\r\nexport default UploadPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}