{"ast":null,"code":"import { extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\nconst mergeProps = (target, source) => {\n  if (!source) return target;\n  const result = _extends({}, target);\n  Object.keys(source).forEach(key => {\n    const targetProp = target[key];\n    const sourceProp = source[key];\n    if (typeof sourceProp === 'function' && targetProp) {\n      result[key] = (...e) => {\n        targetProp(...e);\n        sourceProp(...e);\n      };\n    } else {\n      result[key] = sourceProp;\n    }\n  });\n  return result;\n};\nexport { mergeProps };","map":{"version":3,"names":["extends","_extends","mergeProps","target","source","result","Object","keys","forEach","key","targetProp","sourceProp","e"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/node_modules/@szhsin/react-accordion/dist/es/utils/mergeProps.js"],"sourcesContent":["import { extends as _extends } from '../_virtual/_rollupPluginBabelHelpers.js';\n\nconst mergeProps = (target, source) => {\n  if (!source) return target;\n  const result = _extends({}, target);\n  Object.keys(source).forEach(key => {\n    const targetProp = target[key];\n    const sourceProp = source[key];\n    if (typeof sourceProp === 'function' && targetProp) {\n      result[key] = (...e) => {\n        targetProp(...e);\n        sourceProp(...e);\n      };\n    } else {\n      result[key] = sourceProp;\n    }\n  });\n  return result;\n};\n\nexport { mergeProps };\n"],"mappings":"AAAA,SAASA,OAAO,IAAIC,QAAQ,QAAQ,0CAA0C;AAE9E,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;EACrC,IAAI,CAACA,MAAM,EAAE,OAAOD,MAAM;EAC1B,MAAME,MAAM,GAAGJ,QAAQ,CAAC,CAAC,CAAC,EAAEE,MAAM,CAAC;EACnCG,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;IACjC,MAAMC,UAAU,GAAGP,MAAM,CAACM,GAAG,CAAC;IAC9B,MAAME,UAAU,GAAGP,MAAM,CAACK,GAAG,CAAC;IAC9B,IAAI,OAAOE,UAAU,KAAK,UAAU,IAAID,UAAU,EAAE;MAClDL,MAAM,CAACI,GAAG,CAAC,GAAG,CAAC,GAAGG,CAAC,KAAK;QACtBF,UAAU,CAAC,GAAGE,CAAC,CAAC;QAChBD,UAAU,CAAC,GAAGC,CAAC,CAAC;MAClB,CAAC;IACH,CAAC,MAAM;MACLP,MAAM,CAACI,GAAG,CAAC,GAAGE,UAAU;IAC1B;EACF,CAAC,CAAC;EACF,OAAON,MAAM;AACf,CAAC;AAED,SAASH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}