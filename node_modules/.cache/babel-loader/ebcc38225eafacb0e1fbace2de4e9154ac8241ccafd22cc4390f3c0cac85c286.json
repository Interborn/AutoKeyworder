{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\upscale-upload\\\\UpscaleImageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport uploadIcon from '../../assets/upload-icon.png';\n\n/**\r\n * Component for updating image input with drag and drop functionality.\r\n * @param {Function} onUploadClicked - Callback function triggered on upload.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpscaleImageInput({\n  onUploadClicked\n}) {\n  _s();\n  // Refs for DOM elements\n  const dropzoneRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const fileListRef = useRef(null);\n\n  // State variables\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isUpscaled, setIsUpscaled] = useState(false);\n  const [isQualitySet, setIsQualitySet] = useState(false);\n  const [isUploadClicked, setIsUploadClicked] = useState(false);\n  const [isFileAdded, setIsFileAdded] = useState(false);\n  const [isFolderUploaded, setIsFolderUploaded] = useState(false);\n\n  // Function to process a directory recursively\n  const processDirectory = (item, path = '') => {\n    return new Promise((resolve, reject) => {\n      if (item.isFile) {\n        // If the item is a file, get the file and process it\n        item.file(file => {\n          resolve({\n            file: file,\n            webkitRelativePath: path + file.name\n          });\n        }, reject);\n      } else if (item.isDirectory) {\n        // If the item is a directory, create a directory reader\n        const dirReader = item.createReader();\n        dirReader.readEntries(entries => {\n          // Recursively process each entry in the directory\n          const promises = entries.map(entry => processDirectory(entry, path + item.name + '/'));\n          Promise.all(promises).then(files => {\n            resolve(files.flat());\n          }).catch(reject);\n        }, reject);\n      }\n    });\n  };\n\n  // Effect hook to handle drag and drop events\n  useEffect(() => {\n    // Drag and drop event handlers\n    const handleDragEnter = e => {\n      e.preventDefault();\n    };\n    const handleDragOver = e => {\n      e.preventDefault();\n    };\n\n    // Function to handle drop event\n    const handleDrop = async e => {\n      e.preventDefault();\n      const items = e.dataTransfer.items;\n      const filePromises = [];\n      for (let i = 0; i < items.length; i++) {\n        const entry = items[i].webkitGetAsEntry();\n        if (entry) {\n          filePromises.push(processDirectory(entry));\n        }\n      }\n      const files = (await Promise.all(filePromises)).flat();\n      handleSubmit(files);\n    };\n    const handleChange = (e, isFolder = false) => {\n      const uploadedFiles = e.target.files;\n      const fileObjects = Array.from(uploadedFiles).map(file => ({\n        file: file,\n        // Use webkitRelativePath for folders, fallback to file.name for individual files\n        webkitRelativePath: isFolder ? file.webkitRelativePath : file.name\n      }));\n      handleSubmit(fileObjects);\n    };\n\n    // DOM elements\n    const dropzone = dropzoneRef.current;\n\n    // Event listeners for drag and drop\n    dropzone.addEventListener('dragenter', handleDragEnter);\n    dropzone.addEventListener('dragover', handleDragOver);\n    dropzone.addEventListener('drop', handleDrop);\n    fileInputRef.current.addEventListener('change', handleChange);\n\n    // Cleanup: remove event listeners\n    return () => {\n      dropzone.removeEventListener('dragenter', handleDragEnter);\n      dropzone.removeEventListener('dragover', handleDragOver);\n      dropzone.removeEventListener('drop', handleDrop);\n      fileInputRef.current.removeEventListener('change', handleChange);\n    };\n  }, [isUploadClicked, dropzoneRef, fileInputRef]);\n\n  // Function to format bytes into readable size\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async files => {\n    // Create FormData from the form\n    const formData = new FormData(document.getElementById('folderUpload-formBody'));\n\n    // Clear file list display\n    fileListRef.current.innerHTML = '';\n    let totalSize = 0;\n    let isFolder = false;\n\n    // Process each file\n    for (const fileData of files) {\n      const {\n        file,\n        webkitRelativePath\n      } = fileData; // Destructure fileData\n      totalSize += file.size;\n      if (webkitRelativePath) {\n        isFolder = true;\n      }\n\n      // Set file name and size for each file in the file list\n      const fileListItem = document.createElement('div');\n      fileListItem.textContent = `${file.name} - ${formatBytes(file.size)}`;\n      fileListRef.current.appendChild(fileListItem);\n\n      // Append each file to FormData\n      formData.append('folderUpload', file, webkitRelativePath);\n    }\n\n    // Set state based on whether a folder is uploaded\n    setIsFolderUploaded(isFolder);\n    if (isFolder) {\n      // Display folder name and total size\n      const folderName = files[0].webkitRelativePath.split('/')[0];\n      fileListRef.current.textContent = `${files.length} ${files.length <= 1 ? 'file' : 'files'}, ${formatBytes(totalSize)} total size`;\n    } else {\n      // Display number of files and their total size\n      fileListRef.current.textContent = `${files.length} ${files.length <= 1 ? 'file' : 'files'}, ${formatBytes(totalSize)} total size`;\n    }\n\n    // Set isUpscaled and isQualitySet based on checkbox values\n    const upscaleImages = 'true';\n    setIsUpscaled(upscaleImages);\n    const qualitySet = 'true';\n    setIsQualitySet(qualitySet);\n\n    // Append qualitySet and upscaleImages to FormData\n    formData.append('qualitySet', qualitySet);\n    formData.append('upscaleImages', upscaleImages);\n    try {\n      // Send a POST request to upload files\n      const response = await fetch('http://localhost:3001/uploads', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Folder uploaded successfully');\n        // Get the response body\n        const text = await response.text();\n        console.log('Server Response:', text);\n\n        // Fetch updated photoList.json\n        const photoListResponse = await fetch('http://localhost:3001/photoList');\n        const newPhotoList = await photoListResponse.json();\n        setUploadedFiles(newPhotoList);\n\n        // Trigger the callback function with uploaded data and settings\n        onUploadClicked(newPhotoList, upscaleImages, qualitySet);\n      }\n    } catch (error) {\n      console.error('There was a problem with the upload:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex lg:flex-row flex-col w-full transition-container bg-stone-950 items-center justify-center py-28 -mb-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-input h-full w-full pt-5 pb-7 flex flex-col items-center px-4 gap-14\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[50px] lg:max-w-[26ch] font-bold text-indigo-200 text-center\",\n        children: \"Upload an image, video, or folder to upscale the quality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"folderUpload-formBody\",\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        className: \"w-full flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full h-full flex flex-col items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            ref: dropzoneRef,\n            className: `bg-stone-900 px-8 py-20 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg lg:max-w-[600px] lg:max-h-[600px] w-full ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fileInput\",\n              className: \"cursor-pointer flex flex-col items-center space-y-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                className: `w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`,\n                fill: \"none\",\n                viewBox: \"0 0 24 24\",\n                stroke: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  strokeLinecap: \"round\",\n                  strokeLinejoin: \"round\",\n                  strokeWidth: \"2\",\n                  d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`,\n                children: \"Drag and drop your files here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `text-indigo-200 group-hover:text-indigo-400 text-sm transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`,\n                children: \"(or click to select)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"fileInput\",\n              ref: fileInputRef,\n              type: \"file\",\n              className: \"hidden file-list\",\n              name: \"folderUpload\",\n              webkitdirectory: \"true\",\n              directory: \"true\",\n              multiple: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex w-full items-center justify-center gap-3 cursor-not-allowed lg:max-w-[600px] lg:max-h-[600px] transition-opacity ease-in duration-700 ${isFileAdded ? 'opacity-0' : 'opacity-100'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col w-full items-center gap-3 ml-1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center w-full text-indigo-950 ring-indigo-400 bg-indigo-300 bg-opacity-50 ring-2 py-1.5 h-[36px]\",\n                ref: fileListRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n_s(UpscaleImageInput, \"yKJMgMWm2BnuNJq/mdSFMrQxVAI=\");\n_c = UpscaleImageInput;\n;\nexport default UpscaleImageInput;\nvar _c;\n$RefreshReg$(_c, \"UpscaleImageInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","uploadIcon","jsxDEV","_jsxDEV","UpscaleImageInput","onUploadClicked","_s","dropzoneRef","fileInputRef","fileListRef","uploadedFiles","setUploadedFiles","isUpscaled","setIsUpscaled","isQualitySet","setIsQualitySet","isUploadClicked","setIsUploadClicked","isFileAdded","setIsFileAdded","isFolderUploaded","setIsFolderUploaded","processDirectory","item","path","Promise","resolve","reject","isFile","file","webkitRelativePath","name","isDirectory","dirReader","createReader","readEntries","entries","promises","map","entry","all","then","files","flat","catch","handleDragEnter","e","preventDefault","handleDragOver","handleDrop","items","dataTransfer","filePromises","i","length","webkitGetAsEntry","push","handleSubmit","handleChange","isFolder","target","fileObjects","Array","from","dropzone","current","addEventListener","removeEventListener","formatBytes","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","formData","FormData","document","getElementById","innerHTML","totalSize","fileData","size","fileListItem","createElement","textContent","appendChild","append","folderName","split","upscaleImages","qualitySet","response","fetch","method","body","ok","console","text","photoListResponse","newPhotoList","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","encType","ref","htmlFor","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","webkitdirectory","directory","multiple","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/upscale-upload/UpscaleImageInput.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport uploadIcon from '../../assets/upload-icon.png';\r\n\r\n/**\r\n * Component for updating image input with drag and drop functionality.\r\n * @param {Function} onUploadClicked - Callback function triggered on upload.\r\n */\r\nfunction UpscaleImageInput({ onUploadClicked }) {\r\n    // Refs for DOM elements\r\n    const dropzoneRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const fileListRef = useRef(null);\r\n\r\n    // State variables\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [isUpscaled, setIsUpscaled] = useState(false);\r\n    const [isQualitySet, setIsQualitySet] = useState(false);\r\n    const [isUploadClicked, setIsUploadClicked] = useState(false);\r\n    const [isFileAdded, setIsFileAdded] = useState(false);\r\n    const [isFolderUploaded, setIsFolderUploaded] = useState(false);\r\n\r\n    // Function to process a directory recursively\r\n    const processDirectory = (item, path = '') => {\r\n        return new Promise((resolve, reject) => {\r\n            if (item.isFile) {\r\n                // If the item is a file, get the file and process it\r\n                item.file(file => {\r\n                    resolve({\r\n                        file: file,\r\n                        webkitRelativePath: path + file.name\r\n                    });\r\n                }, reject);\r\n            } else if (item.isDirectory) {\r\n                // If the item is a directory, create a directory reader\r\n                const dirReader = item.createReader();\r\n                dirReader.readEntries(entries => {\r\n                    // Recursively process each entry in the directory\r\n                    const promises = entries.map(entry =>\r\n                        processDirectory(entry, path + item.name + '/')\r\n                    );\r\n                    Promise.all(promises).then(files => {\r\n                        resolve(files.flat());\r\n                    }).catch(reject);\r\n                }, reject);\r\n            }\r\n        });\r\n    };\r\n    \r\n    // Effect hook to handle drag and drop events\r\n    useEffect(() => {\r\n        // Drag and drop event handlers\r\n        const handleDragEnter = (e) => {\r\n            e.preventDefault();\r\n        };\r\n\r\n        const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n        };\r\n\r\n        // Function to handle drop event\r\n        const handleDrop = async (e) => {\r\n            e.preventDefault();\r\n\r\n            const items = e.dataTransfer.items;\r\n            const filePromises = [];\r\n\r\n            for (let i = 0; i < items.length; i++) {\r\n                const entry = items[i].webkitGetAsEntry();\r\n                if (entry) {\r\n                    filePromises.push(processDirectory(entry));\r\n                }\r\n            }\r\n\r\n            const files = (await Promise.all(filePromises)).flat();\r\n            handleSubmit(files);\r\n        };\r\n                \r\n        const handleChange = (e, isFolder = false) => {\r\n            const uploadedFiles = e.target.files;\r\n            const fileObjects = Array.from(uploadedFiles).map(file => ({\r\n                file: file,\r\n                // Use webkitRelativePath for folders, fallback to file.name for individual files\r\n                webkitRelativePath: isFolder ? file.webkitRelativePath : file.name\r\n            }));\r\n            handleSubmit(fileObjects);\r\n        };        \r\n\r\n        // DOM elements\r\n        const dropzone = dropzoneRef.current;\r\n\r\n        // Event listeners for drag and drop\r\n        dropzone.addEventListener('dragenter', handleDragEnter);\r\n        dropzone.addEventListener('dragover', handleDragOver);\r\n        dropzone.addEventListener('drop', handleDrop);\r\n        fileInputRef.current.addEventListener('change', handleChange);\r\n\r\n        // Cleanup: remove event listeners\r\n        return () => {\r\n            dropzone.removeEventListener('dragenter', handleDragEnter);\r\n            dropzone.removeEventListener('dragover', handleDragOver);\r\n            dropzone.removeEventListener('drop', handleDrop);\r\n            fileInputRef.current.removeEventListener('change', handleChange);\r\n        };\r\n    }, [isUploadClicked, dropzoneRef, fileInputRef]);\r\n\r\n    // Function to format bytes into readable size\r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    // Function to handle form submission\r\n    const handleSubmit = async (files) => {\r\n        // Create FormData from the form\r\n        const formData = new FormData(document.getElementById('folderUpload-formBody'));\r\n      \r\n        // Clear file list display\r\n        fileListRef.current.innerHTML = '';\r\n        let totalSize = 0;\r\n        let isFolder = false;\r\n\r\n        // Process each file\r\n        for (const fileData of files) {\r\n            const { file, webkitRelativePath } = fileData; // Destructure fileData\r\n            totalSize += file.size;\r\n            if (webkitRelativePath) {\r\n                isFolder = true;\r\n            }\r\n\r\n            // Set file name and size for each file in the file list\r\n            const fileListItem = document.createElement('div');\r\n            fileListItem.textContent = `${file.name} - ${formatBytes(file.size)}`;\r\n            fileListRef.current.appendChild(fileListItem);\r\n\r\n            // Append each file to FormData\r\n            formData.append('folderUpload', file, webkitRelativePath);\r\n        }\r\n      \r\n        // Set state based on whether a folder is uploaded\r\n        setIsFolderUploaded(isFolder);\r\n      \r\n        if (isFolder) {\r\n          // Display folder name and total size\r\n          const folderName = files[0].webkitRelativePath.split('/')[0];\r\n          fileListRef.current.textContent = `${files.length} ${files.length <= 1 ? 'file' : 'files'}, ${formatBytes(totalSize)} total size`;\r\n        } else {\r\n          // Display number of files and their total size\r\n          fileListRef.current.textContent = `${files.length} ${files.length <= 1 ? 'file' : 'files'}, ${formatBytes(totalSize)} total size`;\r\n        }\r\n      \r\n        // Set isUpscaled and isQualitySet based on checkbox values\r\n        const upscaleImages = 'true';\r\n        setIsUpscaled(upscaleImages);\r\n        const qualitySet = 'true';\r\n        setIsQualitySet(qualitySet);\r\n      \r\n        // Append qualitySet and upscaleImages to FormData\r\n        formData.append('qualitySet', qualitySet);\r\n        formData.append('upscaleImages', upscaleImages);\r\n      \r\n        try {\r\n          // Send a POST request to upload files\r\n          const response = await fetch('http://localhost:3001/uploads', {\r\n            method: 'POST',\r\n            body: formData,\r\n          });\r\n      \r\n          if (response.ok) {\r\n            console.log('Folder uploaded successfully');\r\n            // Get the response body\r\n            const text = await response.text();\r\n            console.log('Server Response:', text);\r\n      \r\n            // Fetch updated photoList.json\r\n            const photoListResponse = await fetch('http://localhost:3001/photoList');\r\n            const newPhotoList = await photoListResponse.json();\r\n            setUploadedFiles(newPhotoList);\r\n      \r\n            // Trigger the callback function with uploaded data and settings\r\n            onUploadClicked(newPhotoList, upscaleImages, qualitySet);\r\n          }\r\n        } catch (error) {\r\n          console.error('There was a problem with the upload:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex lg:flex-row flex-col w-full transition-container bg-stone-950 items-center justify-center py-28 -mb-12\">\r\n            \r\n            <div className=\"image-input h-full w-full pt-5 pb-7 flex flex-col items-center px-4 gap-14\">\r\n\r\n                <h1 className='text-[50px] lg:max-w-[26ch] font-bold text-indigo-200 text-center'>Upload an image, video, or folder to upscale the quality</h1>\r\n\r\n                <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\" className='w-full flex justify-center'>\r\n\r\n                    {/* DROP ZONE */}\r\n                    <div className='w-full h-full flex flex-col items-center gap-2'>\r\n                        <div\r\n                            ref={dropzoneRef}\r\n                            className={`bg-stone-900 px-8 py-20 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg lg:max-w-[600px] lg:max-h-[600px] w-full ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`}\r\n                        >\r\n                            <label htmlFor=\"fileInput\" className=\"cursor-pointer flex flex-col items-center space-y-2\">\r\n                                <svg className={`w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                                </svg>\r\n                                <span className={`text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`}>Drag and drop your files here</span>\r\n                                <span className={`text-indigo-200 group-hover:text-indigo-400 text-sm transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`}>(or click to select)</span>\r\n                            </label>\r\n                            <input id=\"fileInput\" ref={fileInputRef} type=\"file\" className=\"hidden file-list\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n                        </div>\r\n                    \r\n\r\n                        {/* OPTION BUTTONS */}\r\n                        <div className={`flex w-full items-center justify-center gap-3 cursor-not-allowed lg:max-w-[600px] lg:max-h-[600px] transition-opacity ease-in duration-700 ${isFileAdded ? 'opacity-0' : 'opacity-100'}`}>\r\n                            {/* REFERENCE BOX */}\r\n                            <div className=\"flex flex-col w-full items-center gap-3 ml-1\">\r\n                                <div className=\"text-center w-full text-indigo-950 ring-indigo-400 bg-indigo-300 bg-opacity-50 ring-2 py-1.5 h-[36px]\" ref={fileListRef}></div>                    \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpscaleImageInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}