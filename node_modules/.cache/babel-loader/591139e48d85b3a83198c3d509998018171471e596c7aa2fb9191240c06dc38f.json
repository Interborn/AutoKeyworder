{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\App.jsx\";\nimport \"./index.css\";\nimport React, { useState, useEffect } from 'react';\n\n// function App() {\n//   const [uploadedFiles, setUploadedFiles] = useState([]);\n//   const [isUpscaled, setIsUpscaled] = useState(false);\n//   const [isTitleSet, setIsTitleSet] = useState(false);\n//   const [editedFiles, setEditedFiles] = useState([]);\n\n//   const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n\n//   useEffect(() => {\n//     const initialEditedFiles = uploadedFiles.map(file => ({\n//         ...file,\n//         editedTitle: file.generatedFilename,\n//         editedKeywords: file.keywords\n//     }));\n//     setEditedFiles(initialEditedFiles);\n//   }, [uploadedFiles]);\n\n//   const handleTitleChange = (index, event) => {\n//     const updatedFiles = [...editedFiles];\n//     updatedFiles[index].editedTitle = event.target.value;\n//     setEditedFiles(updatedFiles);\n//   };\n\n//   const generateCsvFile = async () => {\n//     try {\n//       const response = await fetch(`${serverOrigin}/generate-csv`);\n//       if (response.ok) {\n//         console.log('CSV file generated successfully.');\n//       } else {\n//         console.error('Failed to generate CSV file.');\n//       }\n//     } catch (error) {\n//       console.error('Error generating CSV file:', error);\n//     }\n//   };\n\n//   const downloadRecords = async () => {\n//     try {\n//       const response = await fetch(`${serverOrigin}/download-records`);\n//       if (response.ok) {\n//         // Retrieve the binary blob from the response\n//         const blob = await response.blob();\n//         // Create a link element and trigger download\n//         const downloadUrl = URL.createObjectURL(blob);\n//         const a = document.createElement('a');\n//         a.href = downloadUrl;\n//         a.download = 'records.zip';\n//         document.body.appendChild(a);\n//         a.click();\n//         a.remove();\n//         URL.revokeObjectURL(downloadUrl); // Clean up the URL object\n//         console.log('Records downloaded successfully.');\n//       } else {\n//         console.error('Failed to download records.');\n//       }\n//     } catch (error) {\n//       console.error('Error downloading records:', error);\n//     }\n//   };\n\n//   const handleKeywordsChange = (index, event) => {\n//       const updatedFiles = [...editedFiles];\n//       updatedFiles[index].editedKeywords = event.target.value;\n//       setEditedFiles(updatedFiles);\n//   };\n\n//   const handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const formData = new FormData(event.target);\n//     // Set isUpscaled based on the checkbox value\n//     const upscaleImages = formData.get('upscaleImages') === 'true';\n//     setIsUpscaled(upscaleImages);\n//     const titleSet = formData.get('genTitle') === 'true';\n//     setIsTitleSet(titleSet);\n\n//     try {\n//       const response = await fetch('http://localhost:3001/uploads', {\n//         method: 'POST',\n//         body: formData,\n//      });\n\n//       if (response.ok) {\n//         if (response.ok) {\n//           console.log('Folder uploaded successfully');\n//           const text = await response.text(); // get the response body\n//           console.log(\"Server Response:\", text);\n//           // Fetch updated photoList.json\n//           const photoListResponse = await fetch('http://localhost:3001/photoList');\n//           const newPhotoList = await photoListResponse.json();\n//           setUploadedFiles(newPhotoList);\n//         }\n//       }\n//     } catch (error) {\n//       console.error('There was a problem with the upload:', error);\n//     }\n//   };\n\n//   const handleJsonEditorSubmit = async (event) => {\n//     event.preventDefault();\n//     const updatedData = editedFiles.map(file => ({\n//       originalFilename: file.originalFilename,\n//       generatedFilename: file.editedTitle,\n//       keywords: file.editedKeywords\n//     }));\n//     try {\n//       const response = await fetch('http://localhost:3001/update', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify(updatedData)\n//       });\n//       if (response.ok) {\n//         console.log('JSON data updated successfully');\n//         const text = await response.text();\n//         console.log('Server Response:', text);\n//       } else {\n//         const text = await response.text();\n//         console.error('Error updating JSON data:', text);\n//       }\n//     } catch (error) {\n//       console.error('There was a problem with updating the JSON data:', error);\n//     }\n//   };\n\n//   return (\n//     <main className=\"flex justify-center items-center gap-4 flex-col min-h-screen w-full\">\n\n//       <div className=\"w-[70%]\">\n//         <h1 className=\"text-[32px] font-bold\">Adobe Stock Photo Manager</h1>\n//         <h2 className=\"text-[20px] italic\">AI Upscale, AI Keyword & AI Title Generation, and Batch Upload to Adobe Stock</h2>\n//       </div>\n//       <ol className=\"w-[70%] flex justify-between\">\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">1</span>Upload Photos/Folder</li>\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">2</span>Input Adobe Stock Account</li>\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">3</span>Click Upload to Submit!</li>\n//       </ol>\n\n//       <div id=\"folderUpload\">\n\n//         <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\n\n//           <label id=\"folderUpload-inputText\" htmlFor=\"folderUpload\">Select a Folder:</label>\n//           <input id=\"folderUpload-inputButton\" type=\"file\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\n\n//           <div id=\"folderUpload-optionBar\" className=\"flex flex-wrap justify-between\">\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-upscaleImages\" name=\"upscaleImages\" value=\"true\"></input>\n//             <p>AI Upscale Images</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genKeyword\" name=\"genKeyword\" value=\"true\"></input>\n//             <p>AI Generate Keywords</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genQuality\" name=\"genQuality\" value=\"true\"></input>\n//             <p>AI Generate Quality Score</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genTitle\" name=\"genTitle\" value=\"true\"></input>\n//             <p>AI Generate Title</p></span>\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-useFilenames\" name=\"useFilenames\" value=\"true\"></input>\n//             <p>Use Filenames in Title Generation</p></span>\n//           </div>\n\n//           <input id=\"folderUpload-submitButton\" type=\"submit\" value=\"Upload\" />\n\n//         </form>\n\n//       </div>\n\n//       <form id=\"jsonEditor-formBody\" onSubmit={handleJsonEditorSubmit} encType=\"multipart/form-data\" className=\"flex flex-col items-center gap-4\">\n//         <div className=\"w-[100%] flex justify-center\">\n//           <ul id=\"liveLookList\" className=\"flex flex-wrap w-full h-full gap-5\">\n//             {uploadedFiles.map((file, index) => {\n//               // Debug: Print out the image URL\n//               const imageUrl =\n//               `${serverOrigin}${isUpscaled ? '/upscaled' : '/uploads'}/${isUpscaled && isTitleSet ? `${file.sanitizedTitle}.jpg` : `${file.originalFilename}`}`;\n//               console.log(`Image URL: ${imageUrl}`);\n\n//               return (\n//                 <li key={index} className=\"flex gap-5 mx-5\">\n//                   <div className=\"w-full max-w-[360px]\">\n//                     <img src={imageUrl} alt={file.generatedFilename} className=\"object-cover w-full h-full max-w-[300px] max-h-[200px] -mb-[1.38em] rounded-md\" />\n\n//                     <div className=\"flex justify-between w-full\">\n//                       <span className=\"bg-white pl-1 pr-2 rounded-tr-md\">\n//                         <span className=\"font-bold\">Size:</span> {isUpscaled ? file.upscaledFilesize : file.filesize}\n//                       </span>\n//                       <span className=\"bg-white pl-2 pr-1 rounded-tl-md flex gap-2\">\n//                         <span className=\"font-bold\">Quality Score:</span>\n//                         <span className=\"\">{parseFloat(file.qualityScore).toFixed(4)}</span>\n//                       </span>\n//                     </div>\n//                   </div>\n\n//                   <div className=\"flex flex-col justify-evenly\">\n//                       <span className=\"flex gap-16\">\n//                         <span className=\"font-bold\">Title:</span>\n//                         <input id=\"titleEditor\" value={editedFiles[index]?.editedTitle || ''} onChange={(event) => handleTitleChange(index, event)} />\n//                       </span>\n//                       <span className=\"pb-10 flex gap-6\">\n//                         <span className=\"font-bold\">Keywords:</span>\n//                         <input className=\"keywordEditor\" value={editedFiles[index]?.editedKeywords || ''} onChange={(event) => handleKeywordsChange(index, event)} />\n//                       </span>\n//                   </div>\n\n//                 </li>\n//               );\n//             })}\n//           </ul>\n//         </div>\n//         <div className=\"flex gap-5\">\n//           <input id=\"jsonEditor-submitButton\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"submit\" value=\"Update\" />\n//           <input id=\"generateAdobeDataSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Generate CSV\" onClick={generateCsvFile} />\n//           <input id=\"recordDownloadSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Download\" onClick={downloadRecords} />\n//         </div>\n//       </form>\n\n//     </main>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"flex justify-center items-center gap-4 flex-col min-h-screen w-full\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"jsonEditor-formBody\",\n      onSubmit: handleJsonEditorSubmit,\n      encType: \"multipart/form-data\",\n      className: \"flex flex-col items-center gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[100%] flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          id: \"liveLookList\",\n          className: \"flex flex-wrap w-full h-full gap-5\",\n          children: uploadedFiles.map((file, index) => {\n            var _editedFiles$index, _editedFiles$index2;\n            // Debug: Print out the image URL\n            const imageUrl = `${serverOrigin}${isUpscaled ? '/upscaled' : '/uploads'}/${isUpscaled && isTitleSet ? `${file.sanitizedTitle}.jpg` : `${file.originalFilename}`}`;\n            console.log(`Image URL: ${imageUrl}`);\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex gap-5 mx-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full max-w-[360px]\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageUrl,\n                  alt: file.generatedFilename,\n                  className: \"object-cover w-full h-full max-w-[300px] max-h-[200px] -mb-[1.38em] rounded-md\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-white pl-1 pr-2 rounded-tr-md\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-bold\",\n                      children: \"Size:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), \" \", isUpscaled ? file.upscaledFilesize : file.filesize]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-white pl-2 pr-1 rounded-tl-md flex gap-2\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-bold\",\n                      children: \"Quality Score:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 246,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"\",\n                      children: parseFloat(file.qualityScore).toFixed(4)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col justify-evenly\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"flex gap-16\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    children: \"Title:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    id: \"titleEditor\",\n                    value: ((_editedFiles$index = editedFiles[index]) === null || _editedFiles$index === void 0 ? void 0 : _editedFiles$index.editedTitle) || '',\n                    onChange: event => handleTitleChange(index, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"pb-10 flex gap-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    children: \"Keywords:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"keywordEditor\",\n                    value: ((_editedFiles$index2 = editedFiles[index]) === null || _editedFiles$index2 === void 0 ? void 0 : _editedFiles$index2.editedKeywords) || '',\n                    onChange: event => handleKeywordsChange(index, event)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"jsonEditor-submitButton\",\n          className: \"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\",\n          type: \"submit\",\n          value: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"generateAdobeDataSubmit\",\n          className: \"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\",\n          type: \"button\",\n          value: \"Generate CSV\",\n          onClick: generateCsvFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"recordDownloadSubmit\",\n          className: \"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\",\n          type: \"button\",\n          value: \"Download\",\n          onClick: downloadRecords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","className","children","id","onSubmit","handleJsonEditorSubmit","encType","uploadedFiles","map","file","index","_editedFiles$index","_editedFiles$index2","imageUrl","serverOrigin","isUpscaled","isTitleSet","sanitizedTitle","originalFilename","console","log","src","alt","generatedFilename","fileName","_jsxFileName","lineNumber","columnNumber","upscaledFilesize","filesize","parseFloat","qualityScore","toFixed","value","editedFiles","editedTitle","onChange","event","handleTitleChange","editedKeywords","handleKeywordsChange","type","onClick","generateCsvFile","downloadRecords","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/App.jsx"],"sourcesContent":["import \"./index.css\";\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n\r\n// function App() {\r\n//   const [uploadedFiles, setUploadedFiles] = useState([]);\r\n//   const [isUpscaled, setIsUpscaled] = useState(false);\r\n//   const [isTitleSet, setIsTitleSet] = useState(false);\r\n//   const [editedFiles, setEditedFiles] = useState([]);\r\n\r\n//   const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n\r\n//   useEffect(() => {\r\n//     const initialEditedFiles = uploadedFiles.map(file => ({\r\n//         ...file,\r\n//         editedTitle: file.generatedFilename,\r\n//         editedKeywords: file.keywords\r\n//     }));\r\n//     setEditedFiles(initialEditedFiles);\r\n//   }, [uploadedFiles]);\r\n\r\n//   const handleTitleChange = (index, event) => {\r\n//     const updatedFiles = [...editedFiles];\r\n//     updatedFiles[index].editedTitle = event.target.value;\r\n//     setEditedFiles(updatedFiles);\r\n//   };\r\n\r\n//   const generateCsvFile = async () => {\r\n//     try {\r\n//       const response = await fetch(`${serverOrigin}/generate-csv`);\r\n//       if (response.ok) {\r\n//         console.log('CSV file generated successfully.');\r\n//       } else {\r\n//         console.error('Failed to generate CSV file.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error generating CSV file:', error);\r\n//     }\r\n//   };\r\n\r\n//   const downloadRecords = async () => {\r\n//     try {\r\n//       const response = await fetch(`${serverOrigin}/download-records`);\r\n//       if (response.ok) {\r\n//         // Retrieve the binary blob from the response\r\n//         const blob = await response.blob();\r\n//         // Create a link element and trigger download\r\n//         const downloadUrl = URL.createObjectURL(blob);\r\n//         const a = document.createElement('a');\r\n//         a.href = downloadUrl;\r\n//         a.download = 'records.zip';\r\n//         document.body.appendChild(a);\r\n//         a.click();\r\n//         a.remove();\r\n//         URL.revokeObjectURL(downloadUrl); // Clean up the URL object\r\n//         console.log('Records downloaded successfully.');\r\n//       } else {\r\n//         console.error('Failed to download records.');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error downloading records:', error);\r\n//     }\r\n//   };\r\n  \r\n//   const handleKeywordsChange = (index, event) => {\r\n//       const updatedFiles = [...editedFiles];\r\n//       updatedFiles[index].editedKeywords = event.target.value;\r\n//       setEditedFiles(updatedFiles);\r\n//   };\r\n  \r\n//   const handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n    \r\n//     const formData = new FormData(event.target);\r\n//     // Set isUpscaled based on the checkbox value\r\n//     const upscaleImages = formData.get('upscaleImages') === 'true';\r\n//     setIsUpscaled(upscaleImages);\r\n//     const titleSet = formData.get('genTitle') === 'true';\r\n//     setIsTitleSet(titleSet);\r\n    \r\n//     try {\r\n//       const response = await fetch('http://localhost:3001/uploads', {\r\n//         method: 'POST',\r\n//         body: formData,\r\n//      });\r\n  \r\n//       if (response.ok) {\r\n//         if (response.ok) {\r\n//           console.log('Folder uploaded successfully');\r\n//           const text = await response.text(); // get the response body\r\n//           console.log(\"Server Response:\", text);\r\n//           // Fetch updated photoList.json\r\n//           const photoListResponse = await fetch('http://localhost:3001/photoList');\r\n//           const newPhotoList = await photoListResponse.json();\r\n//           setUploadedFiles(newPhotoList);\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was a problem with the upload:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleJsonEditorSubmit = async (event) => {\r\n//     event.preventDefault();\r\n//     const updatedData = editedFiles.map(file => ({\r\n//       originalFilename: file.originalFilename,\r\n//       generatedFilename: file.editedTitle,\r\n//       keywords: file.editedKeywords\r\n//     }));\r\n//     try {\r\n//       const response = await fetch('http://localhost:3001/update', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         },\r\n//         body: JSON.stringify(updatedData)\r\n//       });\r\n//       if (response.ok) {\r\n//         console.log('JSON data updated successfully');\r\n//         const text = await response.text();\r\n//         console.log('Server Response:', text);\r\n//       } else {\r\n//         const text = await response.text();\r\n//         console.error('Error updating JSON data:', text);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('There was a problem with updating the JSON data:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <main className=\"flex justify-center items-center gap-4 flex-col min-h-screen w-full\">\r\n\r\n//       <div className=\"w-[70%]\">\r\n//         <h1 className=\"text-[32px] font-bold\">Adobe Stock Photo Manager</h1>\r\n//         <h2 className=\"text-[20px] italic\">AI Upscale, AI Keyword & AI Title Generation, and Batch Upload to Adobe Stock</h2>\r\n//       </div>\r\n//       <ol className=\"w-[70%] flex justify-between\">\r\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">1</span>Upload Photos/Folder</li>\r\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">2</span>Input Adobe Stock Account</li>\r\n//         <li className=\"flex gap-2 items-center\"><span className=\"bg-[#843eb7] px-2.5 py-0.5 rounded-full text-white font-bold text-[16px]\">3</span>Click Upload to Submit!</li>\r\n//       </ol>\r\n      \r\n//       <div id=\"folderUpload\">\r\n        \r\n\r\n//         <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n          \r\n//           <label id=\"folderUpload-inputText\" htmlFor=\"folderUpload\">Select a Folder:</label>\r\n//           <input id=\"folderUpload-inputButton\" type=\"file\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n                    \r\n//           <div id=\"folderUpload-optionBar\" className=\"flex flex-wrap justify-between\">\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-upscaleImages\" name=\"upscaleImages\" value=\"true\"></input>\r\n//             <p>AI Upscale Images</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genKeyword\" name=\"genKeyword\" value=\"true\"></input>\r\n//             <p>AI Generate Keywords</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genQuality\" name=\"genQuality\" value=\"true\"></input>\r\n//             <p>AI Generate Quality Score</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genTitle\" name=\"genTitle\" value=\"true\"></input>\r\n//             <p>AI Generate Title</p></span>\r\n//             <span className=\"flex justify-center items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-useFilenames\" name=\"useFilenames\" value=\"true\"></input>\r\n//             <p>Use Filenames in Title Generation</p></span>\r\n//           </div>\r\n                    \r\n//           <input id=\"folderUpload-submitButton\" type=\"submit\" value=\"Upload\" />\r\n          \r\n//         </form>\r\n\r\n//       </div>\r\n\r\n//       <form id=\"jsonEditor-formBody\" onSubmit={handleJsonEditorSubmit} encType=\"multipart/form-data\" className=\"flex flex-col items-center gap-4\">\r\n//         <div className=\"w-[100%] flex justify-center\">\r\n//           <ul id=\"liveLookList\" className=\"flex flex-wrap w-full h-full gap-5\">\r\n//             {uploadedFiles.map((file, index) => {\r\n//               // Debug: Print out the image URL\r\n//               const imageUrl =\r\n//               `${serverOrigin}${isUpscaled ? '/upscaled' : '/uploads'}/${isUpscaled && isTitleSet ? `${file.sanitizedTitle}.jpg` : `${file.originalFilename}`}`;\r\n//               console.log(`Image URL: ${imageUrl}`);\r\n\r\n//               return (\r\n//                 <li key={index} className=\"flex gap-5 mx-5\">\r\n//                   <div className=\"w-full max-w-[360px]\">\r\n//                     <img src={imageUrl} alt={file.generatedFilename} className=\"object-cover w-full h-full max-w-[300px] max-h-[200px] -mb-[1.38em] rounded-md\" />\r\n\r\n//                     <div className=\"flex justify-between w-full\">\r\n//                       <span className=\"bg-white pl-1 pr-2 rounded-tr-md\">\r\n//                         <span className=\"font-bold\">Size:</span> {isUpscaled ? file.upscaledFilesize : file.filesize}\r\n//                       </span>\r\n//                       <span className=\"bg-white pl-2 pr-1 rounded-tl-md flex gap-2\">\r\n//                         <span className=\"font-bold\">Quality Score:</span>\r\n//                         <span className=\"\">{parseFloat(file.qualityScore).toFixed(4)}</span>\r\n//                       </span>\r\n//                     </div>\r\n//                   </div>\r\n\r\n                \r\n//                   <div className=\"flex flex-col justify-evenly\">\r\n//                       <span className=\"flex gap-16\">\r\n//                         <span className=\"font-bold\">Title:</span>\r\n//                         <input id=\"titleEditor\" value={editedFiles[index]?.editedTitle || ''} onChange={(event) => handleTitleChange(index, event)} />\r\n//                       </span>\r\n//                       <span className=\"pb-10 flex gap-6\">\r\n//                         <span className=\"font-bold\">Keywords:</span>\r\n//                         <input className=\"keywordEditor\" value={editedFiles[index]?.editedKeywords || ''} onChange={(event) => handleKeywordsChange(index, event)} />\r\n//                       </span>\r\n//                   </div>\r\n\r\n//                 </li>\r\n//               );\r\n//             })}\r\n//           </ul>\r\n//         </div>\r\n//         <div className=\"flex gap-5\">\r\n//           <input id=\"jsonEditor-submitButton\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"submit\" value=\"Update\" />\r\n//           <input id=\"generateAdobeDataSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Generate CSV\" onClick={generateCsvFile} />\r\n//           <input id=\"recordDownloadSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Download\" onClick={downloadRecords} />\r\n//         </div>\r\n//       </form>\r\n\r\n//     </main>\r\n//   );\r\n// }\r\n\r\nfunction App() {\r\n  return (\r\n    <main className=\"flex justify-center items-center gap-4 flex-col min-h-screen w-full\">\r\n      <form id=\"jsonEditor-formBody\" onSubmit={handleJsonEditorSubmit} encType=\"multipart/form-data\" className=\"flex flex-col items-center gap-4\">\r\n         <div className=\"w-[100%] flex justify-center\">\r\n           <ul id=\"liveLookList\" className=\"flex flex-wrap w-full h-full gap-5\">\r\n             {uploadedFiles.map((file, index) => {\r\n               // Debug: Print out the image URL\r\n              const imageUrl =\r\n              `${serverOrigin}${isUpscaled ? '/upscaled' : '/uploads'}/${isUpscaled && isTitleSet ? `${file.sanitizedTitle}.jpg` : `${file.originalFilename}`}`;\r\n              console.log(`Image URL: ${imageUrl}`);\r\n\r\n              return (\r\n                <li key={index} className=\"flex gap-5 mx-5\">\r\n                  <div className=\"w-full max-w-[360px]\">\r\n                    <img src={imageUrl} alt={file.generatedFilename} className=\"object-cover w-full h-full max-w-[300px] max-h-[200px] -mb-[1.38em] rounded-md\" />\r\n\r\n                    <div className=\"flex justify-between w-full\">\r\n                      <span className=\"bg-white pl-1 pr-2 rounded-tr-md\">\r\n                        <span className=\"font-bold\">Size:</span> {isUpscaled ? file.upscaledFilesize : file.filesize}\r\n                      </span>\r\n                      <span className=\"bg-white pl-2 pr-1 rounded-tl-md flex gap-2\">\r\n                        <span className=\"font-bold\">Quality Score:</span>\r\n                        <span className=\"\">{parseFloat(file.qualityScore).toFixed(4)}</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n\r\n                \r\n                  <div className=\"flex flex-col justify-evenly\">\r\n                      <span className=\"flex gap-16\">\r\n                        <span className=\"font-bold\">Title:</span>\r\n                        <input id=\"titleEditor\" value={editedFiles[index]?.editedTitle || ''} onChange={(event) => handleTitleChange(index, event)} />\r\n                      </span>\r\n                      <span className=\"pb-10 flex gap-6\">\r\n                        <span className=\"font-bold\">Keywords:</span>\r\n                        <input className=\"keywordEditor\" value={editedFiles[index]?.editedKeywords || ''} onChange={(event) => handleKeywordsChange(index, event)} />\r\n                      </span>\r\n                  </div>\r\n\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div className=\"flex gap-5\">\r\n          <input id=\"jsonEditor-submitButton\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"submit\" value=\"Update\" />\r\n          <input id=\"generateAdobeDataSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Generate CSV\" onClick={generateCsvFile} />\r\n          <input id=\"recordDownloadSubmit\" className=\"w-[200px] bg-purple-700 text-white rounded-sm my-4 py-1\" type=\"button\" value=\"Download\" onClick={downloadRecords} />\r\n        </div>\r\n      </form>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}