{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\upload\\\\UpscaleImageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport uploadIcon from '../../assets/upload-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpscaleImageInput({\n  onUploadClicked\n}) {\n  _s();\n  const dropzoneRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const fileListRef = useRef(null);\n  const [isFileAdded, setIsFileAdded] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [editedFiles, setEditedFiles] = useState([]);\n  const [isFolderUploaded, setIsFolderUploaded] = useState(false);\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n  useEffect(() => {\n    const initialEditedFiles = uploadedFiles.map(file => ({\n      ...file,\n      editedTitle: file.generatedFilename,\n      editedKeywords: file.keywords\n    }));\n    setEditedFiles(initialEditedFiles);\n  }, [uploadedFiles]);\n  useEffect(() => {\n    if (uploadedFiles.length > 0) {\n      onUploadClicked(uploadedFiles);\n    }\n  }, [uploadedFiles, onUploadClicked]);\n  useEffect(() => {\n    const handleDragEnter = e => {\n      e.preventDefault();\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.add('border-green-600');\n      }\n    };\n    const handleDragOver = e => {\n      e.preventDefault();\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.add('border-green-600');\n      }\n    };\n    const handleDragLeave = () => {\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.remove('border-green-600');\n      }\n    };\n    const handleDrop = e => {\n      e.preventDefault();\n      if (!isUploadClicked) {\n        dropzoneRef.current.classList.remove('border-green-600');\n      }\n      handleFiles(e.dataTransfer.files);\n    };\n    const handleChange = e => {\n      handleFiles(e.target.files);\n    };\n    const dropzone = dropzoneRef.current;\n    dropzone.addEventListener('dragenter', handleDragEnter);\n    dropzone.addEventListener('dragover', handleDragOver);\n    dropzone.addEventListener('dragleave', handleDragLeave);\n    dropzone.addEventListener('drop', handleDrop);\n    fileInputRef.current.addEventListener('change', handleChange);\n    return () => {\n      dropzone.removeEventListener('dragenter', handleDragEnter);\n      dropzone.removeEventListener('dragover', handleDragOver);\n      dropzone.removeEventListener('dragleave', handleDragLeave);\n      dropzone.removeEventListener('drop', handleDrop);\n      fileInputRef.current.removeEventListener('change', handleChange);\n    };\n  }, [isUploadClicked, dropzoneRef, fileInputRef]);\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const handleFiles = files => {\n    fileListRef.current.innerHTML = '';\n    let totalSize = 0;\n    let isFolder = false;\n    for (const file of files) {\n      totalSize += file.size;\n      if (file.webkitRelativePath) {\n        // this property is usually present for files in a folder\n        isFolder = true;\n      }\n    }\n    setIsFolderUploaded(isFolder);\n    if (isFolder) {\n      const folderName = files[0].webkitRelativePath.split('/')[0]; // Gets the folder name\n      fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\n    } else {\n      for (const file of files) {\n        const listItem = document.createElement('div');\n        const maxNameLength = 33;\n        let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\n        listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\n        fileListRef.current.appendChild(listItem);\n      }\n    }\n    setIsFileAdded(files.length > 0);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    // Set isUpscaled based on the checkbox value\n    const upscaleImages = formData.get('upscaleImages') === 'true';\n    setIsUpscaled(upscaleImages);\n    const qualitySet = formData.get('genQuality') === 'true';\n    setIsQualitySet(qualitySet);\n    try {\n      const response = await fetch('http://localhost:3001/uploads', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Folder uploaded successfully');\n        const text = await response.text(); // get the response body\n        console.log(\"Server Response:\", text);\n        // Fetch updated photoList.json\n        const photoListResponse = await fetch('http://localhost:3001/photoList');\n        const newPhotoList = await photoListResponse.json();\n        setUploadedFiles(newPhotoList);\n        onUploadClicked(newPhotoList, upscaleImages, qualitySet);\n      }\n    } catch (error) {\n      console.error('There was a problem with the upload:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex lg:flex-row flex-col w-full transition-container $justify-start`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-input h-full w-full lg:max-w-[600px] lg:max-h-[600px] pt-5 pb-7 px-10 bg-white rounded-lg shadow-lg`,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"folderUpload-formBody\",\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data z-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"folderUpload-optionBar\",\n          className: \"grid md:grid-cols-2 justify-between z-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex justify-stretch items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"folderUpload-upscaleImages\",\n              name: \"upscaleImages\",\n              value: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"AI Upscale Images\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex justify-stretch items-center gap-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"folderUpload-genQuality\",\n              name: \"genQuality\",\n              value: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 79\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"AI Generate Quality Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: dropzoneRef,\n          className: `bg-gray-100 px-8 py-4 text-center rounded-lg border-dashed border-2 hover:border-green-600 transition duration-300 ease-in-out transform hover:shadow-lg group mb-1 ${isFileAdded ? 'border-green-600' : 'border-gray-400'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            className: \"cursor-pointer flex flex-col items-center space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"w-16 h-16 text-gray-400 group-hover:text-green-600 transition duration-300 ease-in-out transform\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-600\",\n              children: \"Drag and drop your files here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-500 text-sm\",\n              children: \"(or click to select)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            ref: fileInputRef,\n            type: \"file\",\n            className: \"hidden\",\n            name: \"folderUpload\",\n            webkitdirectory: \"true\",\n            directory: \"true\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col w-full items-center gap-3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center w-full text-slate-400 ring-slate-200 ring-2 py-1.5 h-[36px]\",\n            ref: fileListRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(UpscaleImageInput, \"O7oUwafyP4nNKsIDH98p2NETp18=\");\n_c = UpscaleImageInput;\nexport default UpscaleImageInput;\nvar _c;\n$RefreshReg$(_c, \"UpscaleImageInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","uploadIcon","jsxDEV","_jsxDEV","UpscaleImageInput","onUploadClicked","_s","dropzoneRef","fileInputRef","fileListRef","isFileAdded","setIsFileAdded","uploadedFiles","setUploadedFiles","editedFiles","setEditedFiles","isFolderUploaded","setIsFolderUploaded","serverOrigin","window","location","protocol","hostname","initialEditedFiles","map","file","editedTitle","generatedFilename","editedKeywords","keywords","length","handleDragEnter","e","preventDefault","isUploadClicked","current","classList","add","handleDragOver","handleDragLeave","remove","handleDrop","handleFiles","dataTransfer","files","handleChange","target","dropzone","addEventListener","removeEventListener","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","innerHTML","totalSize","isFolder","size","webkitRelativePath","folderName","split","textContent","listItem","document","createElement","maxNameLength","truncatedName","name","substring","appendChild","handleSubmit","event","formData","FormData","upscaleImages","get","setIsUpscaled","qualitySet","setIsQualitySet","response","fetch","method","body","ok","console","text","photoListResponse","newPhotoList","json","error","className","children","id","onSubmit","encType","type","value","fileName","_jsxFileName","lineNumber","columnNumber","ref","htmlFor","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","webkitdirectory","directory","multiple","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/upload/UpscaleImageInput.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport uploadIcon from '../../assets/upload-icon.png';\r\n\r\nfunction UpscaleImageInput({ onUploadClicked }) {\r\n    const dropzoneRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const fileListRef = useRef(null);\r\n    const [isFileAdded, setIsFileAdded] = useState(false);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [editedFiles, setEditedFiles] = useState([]);\r\n    const [isFolderUploaded, setIsFolderUploaded] = useState(false);\r\n    const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n    \r\n    useEffect(() => {\r\n        const initialEditedFiles = uploadedFiles.map(file => ({\r\n            ...file,\r\n            editedTitle: file.generatedFilename,\r\n            editedKeywords: file.keywords\r\n        }));\r\n        setEditedFiles(initialEditedFiles);\r\n    }, [uploadedFiles]);\r\n    \r\n    useEffect(() => {\r\n        if (uploadedFiles.length > 0) {\r\n            onUploadClicked(uploadedFiles);\r\n        }\r\n    }, [uploadedFiles, onUploadClicked]);\r\n    \r\n    useEffect(() => {\r\n        const handleDragEnter = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.add('border-green-600');\r\n            }\r\n        };\r\n    \r\n        const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.add('border-green-600');\r\n            }\r\n        };\r\n    \r\n        const handleDragLeave = () => {\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.remove('border-green-600');\r\n            }\r\n        };\r\n    \r\n        const handleDrop = (e) => {\r\n            e.preventDefault();\r\n            if (!isUploadClicked) {\r\n                dropzoneRef.current.classList.remove('border-green-600');\r\n            }\r\n            handleFiles(e.dataTransfer.files);\r\n        };\r\n    \r\n        const handleChange = (e) => {\r\n            handleFiles(e.target.files);\r\n        };\r\n    \r\n    \r\n        const dropzone = dropzoneRef.current;\r\n    \r\n    \r\n        dropzone.addEventListener('dragenter', handleDragEnter);\r\n        dropzone.addEventListener('dragover', handleDragOver);\r\n        dropzone.addEventListener('dragleave', handleDragLeave);\r\n        dropzone.addEventListener('drop', handleDrop);\r\n        fileInputRef.current.addEventListener('change', handleChange);\r\n    \r\n        return () => {\r\n            dropzone.removeEventListener('dragenter', handleDragEnter);\r\n            dropzone.removeEventListener('dragover', handleDragOver);\r\n            dropzone.removeEventListener('dragleave', handleDragLeave);\r\n            dropzone.removeEventListener('drop', handleDrop);\r\n            fileInputRef.current.removeEventListener('change', handleChange);\r\n        };\r\n    }, [isUploadClicked, dropzoneRef, fileInputRef]);\r\n    \r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n    \r\n    const handleFiles = (files) => {\r\n        fileListRef.current.innerHTML = '';\r\n        let totalSize = 0;\r\n        let isFolder = false;\r\n    \r\n        for (const file of files) {\r\n            totalSize += file.size;\r\n            if (file.webkitRelativePath) { // this property is usually present for files in a folder\r\n                isFolder = true;\r\n            }\r\n        }\r\n    \r\n        setIsFolderUploaded(isFolder);\r\n    \r\n        if (isFolder) {\r\n            const folderName = files[0].webkitRelativePath.split('/')[0]; // Gets the folder name\r\n            fileListRef.current.textContent = `${folderName} (${formatBytes(totalSize)})`;\r\n        } else {\r\n            for (const file of files) {\r\n                const listItem = document.createElement('div');\r\n                const maxNameLength = 33;\r\n                let truncatedName = file.name.length > maxNameLength ? file.name.substring(0, maxNameLength) + '...' : file.name;\r\n                listItem.textContent = `${truncatedName} (${formatBytes(file.size)})`;\r\n                fileListRef.current.appendChild(listItem);\r\n            }\r\n        }\r\n    \r\n        setIsFileAdded(files.length > 0);\r\n    };\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n    \r\n        const formData = new FormData(event.target);\r\n        // Set isUpscaled based on the checkbox value\r\n        const upscaleImages = formData.get('upscaleImages') === 'true';\r\n        setIsUpscaled(upscaleImages);\r\n        const qualitySet = formData.get('genQuality') === 'true';\r\n        setIsQualitySet(qualitySet);\r\n    \r\n        try {\r\n            const response = await fetch('http://localhost:3001/uploads', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n    \r\n            if (response.ok) {\r\n                console.log('Folder uploaded successfully');\r\n                const text = await response.text(); // get the response body\r\n                console.log(\"Server Response:\", text);\r\n                // Fetch updated photoList.json\r\n                const photoListResponse = await fetch('http://localhost:3001/photoList');\r\n                const newPhotoList = await photoListResponse.json();\r\n                setUploadedFiles(newPhotoList);\r\n                onUploadClicked(newPhotoList, upscaleImages, qualitySet);\r\n            }\r\n        } catch (error) {\r\n            console.error('There was a problem with the upload:', error);\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className={`flex lg:flex-row flex-col w-full transition-container $justify-start`}>\r\n              \r\n        <div className={`image-input h-full w-full lg:max-w-[600px] lg:max-h-[600px] pt-5 pb-7 px-10 bg-white rounded-lg shadow-lg`}>\r\n\r\n\r\n            <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data z-10\">                        \r\n\r\n                {/* AI OPTIONS */}\r\n                <div id=\"folderUpload-optionBar\" className=\"grid md:grid-cols-2 justify-between z-10\">\r\n                    <span className=\"flex justify-stretch items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-upscaleImages\" name=\"upscaleImages\" value=\"true\"></input>\r\n                    <p>AI Upscale Images</p></span>\r\n                    <span className=\"flex justify-stretch items-center gap-3\"><input type=\"checkbox\" id=\"folderUpload-genQuality\" name=\"genQuality\" value=\"true\"></input>\r\n                    <p>AI Generate Quality Score</p></span>\r\n                </div>\r\n\r\n                {/* DROP ZONE */}\r\n                <div\r\n                    ref={dropzoneRef}\r\n                    className={`bg-gray-100 px-8 py-4 text-center rounded-lg border-dashed border-2 hover:border-green-600 transition duration-300 ease-in-out transform hover:shadow-lg group mb-1 ${isFileAdded ? 'border-green-600' : 'border-gray-400'}`}\r\n                >\r\n                    <label htmlFor=\"fileInput\" className=\"cursor-pointer flex flex-col items-center space-y-2\">\r\n                        <svg className=\"w-16 h-16 text-gray-400 group-hover:text-green-600 transition duration-300 ease-in-out transform\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                        </svg>\r\n                        <span className=\"text-gray-600\">Drag and drop your files here</span>\r\n                        <span className=\"text-gray-500 text-sm\">(or click to select)</span>\r\n                    </label>\r\n                    <input id=\"fileInput\" ref={fileInputRef} type=\"file\" className=\"hidden\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n                </div>\r\n                \r\n                {/* REFERENCE BOX */}\r\n                <div className=\"flex flex-col w-full items-center gap-3\">\r\n                    <div className=\"text-center w-full text-slate-400 ring-slate-200 ring-2 py-1.5 h-[36px]\" ref={fileListRef}></div>                    \r\n                </div>\r\n\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpscaleImageInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}