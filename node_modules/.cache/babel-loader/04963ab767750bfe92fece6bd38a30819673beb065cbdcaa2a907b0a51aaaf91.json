{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\components\\\\upload\\\\UpscaleImageInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport uploadIcon from '../../assets/upload-icon.png';\n\n/**\r\n * Component for updating image input with drag and drop functionality.\r\n * @param {Function} onUploadClicked - Callback function triggered on upload.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateImageInput({\n  onUploadClicked\n}) {\n  _s();\n  // Refs for DOM elements\n  const dropzoneRef = useRef(null);\n  const fileInputRef = useRef(null);\n  const fileListRef = useRef(null);\n\n  // State variables\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isUpscaled, setIsUpscaled] = useState(false);\n  const [isQualitySet, setIsQualitySet] = useState(false);\n  const [isUploadClicked, setIsUploadClicked] = useState(false);\n  const [isFileAdded, setIsFileAdded] = useState(false);\n  const [isFolderUploaded, setIsFolderUploaded] = useState(false);\n\n  // Server origin based on the current window location\n  const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\n\n  // Effect hook to handle drag and drop events\n  useEffect(() => {\n    // Drag and drop event handlers\n    const handleDragEnter = e => {\n      e.preventDefault();\n    };\n    const handleDragOver = e => {\n      e.preventDefault();\n    };\n    const handleDrop = e => {\n      e.preventDefault();\n      let uploadedFiles = e.dataTransfer.files;\n      handleSubmit(uploadedFiles);\n    };\n    const handleChange = e => {\n      let uploadedFiles = e.target.files;\n      handleSubmit(uploadedFiles);\n    };\n\n    // DOM elements\n    const dropzone = dropzoneRef.current;\n\n    // Event listeners for drag and drop\n    dropzone.addEventListener('dragenter', handleDragEnter);\n    dropzone.addEventListener('dragover', handleDragOver);\n    dropzone.addEventListener('drop', handleDrop);\n    fileInputRef.current.addEventListener('change', handleChange);\n\n    // Cleanup: remove event listeners\n    return () => {\n      dropzone.removeEventListener('dragenter', handleDragEnter);\n      dropzone.removeEventListener('dragover', handleDragOver);\n      dropzone.removeEventListener('drop', handleDrop);\n      fileInputRef.current.removeEventListener('change', handleChange);\n    };\n  }, [isUploadClicked, dropzoneRef, fileInputRef]);\n\n  // Function to format bytes into readable size\n  const formatBytes = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  // Function to handle form submission\n  const handleSubmit = async files => {\n    // Update file display and check if files are a folder\n    updateFileDisplay(files);\n\n    // Create FormData\n    const formData = new FormData();\n    for (const file of files) {\n      formData.append('files', file);\n    }\n\n    // Append additional data\n    formData.append('upscaleImages', 'true');\n    formData.append('qualitySet', 'true');\n\n    // Submit the form data\n    try {\n      const response = await fetch(`${serverOrigin}/uploads`, {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        console.log('Files uploaded successfully');\n        // Additional processing...\n      } else {\n        console.error('Failed to upload files');\n      }\n    } catch (error) {\n      console.error('Error uploading files:', error);\n    }\n  };\n\n  // Function to update file display\n  const updateFileDisplay = files => {\n    fileListRef.current.innerHTML = ''; // Clear previous content\n    let totalSize = 0;\n    let isFolder = false;\n    for (const file of files) {\n      totalSize += file.size;\n      if (file.webkitRelativePath) {\n        isFolder = true;\n      }\n    }\n    const displayText = isFolder ? `${files.length} ${files.length <= 1 ? 'file' : 'files'}, ${formatBytes(totalSize)} total size` : `${files.length} files, ${formatBytes(totalSize)} total size`;\n    fileListRef.current.textContent = displayText;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex lg:flex-row flex-col w-full transition-container bg-stone-950 items-center justify-center py-28 -mb-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-input h-full w-full pt-5 pb-7 flex flex-col items-center px-4 gap-14\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-[50px] lg:max-w-[26ch] font-bold text-indigo-200 text-center\",\n        children: \"Upload an image, video, or folder to upscale the quality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"folderUpload-formBody\",\n        onSubmit: handleSubmit,\n        encType: \"multipart/form-data\",\n        className: \"min-w-full lg:min-w-[600px] lg:max-h-[600px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: dropzoneRef,\n          className: `bg-stone-900 px-8 py-20 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            className: \"cursor-pointer flex flex-col items-center space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: `w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`,\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              stroke: \"currentColor\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                strokeWidth: \"2\",\n                d: \"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`,\n              children: \"Drag and drop your files here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `text-indigo-200 group-hover:text-indigo-400 text-sm transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`,\n              children: \"(or click to select)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            ref: fileInputRef,\n            type: \"file\",\n            className: \"hidden file-list\",\n            name: \"folderUpload\",\n            webkitdirectory: \"true\",\n            directory: \"true\",\n            multiple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex w-full items-center justify-center gap-3 cursor-not-allowed\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col w-full items-center gap-3 ml-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center w-full text-indigo-950 ring-indigo-400 bg-indigo-300 bg-opacity-50 ring-2 py-1.5 h-[36px]\",\n              ref: fileListRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateImageInput, \"yKJMgMWm2BnuNJq/mdSFMrQxVAI=\");\n_c = UpdateImageInput;\n;\nexport default UpdateImageInput;\nvar _c;\n$RefreshReg$(_c, \"UpdateImageInput\");","map":{"version":3,"names":["React","useRef","useState","useEffect","uploadIcon","jsxDEV","_jsxDEV","UpdateImageInput","onUploadClicked","_s","dropzoneRef","fileInputRef","fileListRef","uploadedFiles","setUploadedFiles","isUpscaled","setIsUpscaled","isQualitySet","setIsQualitySet","isUploadClicked","setIsUploadClicked","isFileAdded","setIsFileAdded","isFolderUploaded","setIsFolderUploaded","serverOrigin","window","location","protocol","hostname","handleDragEnter","e","preventDefault","handleDragOver","handleDrop","dataTransfer","files","handleSubmit","handleChange","target","dropzone","current","addEventListener","removeEventListener","formatBytes","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","updateFileDisplay","formData","FormData","file","append","response","fetch","method","body","ok","console","error","innerHTML","totalSize","isFolder","size","webkitRelativePath","displayText","length","textContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","encType","ref","htmlFor","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","type","name","webkitdirectory","directory","multiple","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/components/upload/UpscaleImageInput.jsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport uploadIcon from '../../assets/upload-icon.png';\r\n\r\n/**\r\n * Component for updating image input with drag and drop functionality.\r\n * @param {Function} onUploadClicked - Callback function triggered on upload.\r\n */\r\nfunction UpdateImageInput({ onUploadClicked }) {\r\n    // Refs for DOM elements\r\n    const dropzoneRef = useRef(null);\r\n    const fileInputRef = useRef(null);\r\n    const fileListRef = useRef(null);\r\n\r\n    // State variables\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    const [isUpscaled, setIsUpscaled] = useState(false);\r\n    const [isQualitySet, setIsQualitySet] = useState(false);\r\n    const [isUploadClicked, setIsUploadClicked] = useState(false);\r\n    const [isFileAdded, setIsFileAdded] = useState(false);\r\n    const [isFolderUploaded, setIsFolderUploaded] = useState(false);\r\n\r\n    // Server origin based on the current window location\r\n    const serverOrigin = `${window.location.protocol}//${window.location.hostname}:3001`;\r\n\r\n    // Effect hook to handle drag and drop events\r\n    useEffect(() => {\r\n        // Drag and drop event handlers\r\n        const handleDragEnter = (e) => {\r\n            e.preventDefault();\r\n        };\r\n\r\n        const handleDragOver = (e) => {\r\n            e.preventDefault();\r\n        };\r\n\r\n        const handleDrop = (e) => {\r\n            e.preventDefault();\r\n            let uploadedFiles = e.dataTransfer.files;\r\n            handleSubmit(uploadedFiles);\r\n        };\r\n        \r\n        const handleChange = (e) => {\r\n            let uploadedFiles = e.target.files;\r\n            handleSubmit(uploadedFiles);\r\n        };\r\n\r\n        // DOM elements\r\n        const dropzone = dropzoneRef.current;\r\n\r\n        // Event listeners for drag and drop\r\n        dropzone.addEventListener('dragenter', handleDragEnter);\r\n        dropzone.addEventListener('dragover', handleDragOver);\r\n        dropzone.addEventListener('drop', handleDrop);\r\n        fileInputRef.current.addEventListener('change', handleChange);\r\n\r\n        // Cleanup: remove event listeners\r\n        return () => {\r\n            dropzone.removeEventListener('dragenter', handleDragEnter);\r\n            dropzone.removeEventListener('dragover', handleDragOver);\r\n            dropzone.removeEventListener('drop', handleDrop);\r\n            fileInputRef.current.removeEventListener('change', handleChange);\r\n        };\r\n    }, [isUploadClicked, dropzoneRef, fileInputRef]);\r\n\r\n    // Function to format bytes into readable size\r\n    const formatBytes = (bytes) => {\r\n        if (bytes === 0) return '0 Bytes';\r\n        const k = 1024;\r\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n    };\r\n\r\n    // Function to handle form submission\r\nconst handleSubmit = async (files) => {\r\n    // Update file display and check if files are a folder\r\n    updateFileDisplay(files);\r\n\r\n    // Create FormData\r\n    const formData = new FormData();\r\n    for (const file of files) {\r\n        formData.append('files', file);\r\n    }\r\n\r\n    // Append additional data\r\n    formData.append('upscaleImages', 'true');\r\n    formData.append('qualitySet', 'true');\r\n\r\n    // Submit the form data\r\n    try {\r\n        const response = await fetch(`${serverOrigin}/uploads`, {\r\n            method: 'POST',\r\n            body: formData,\r\n        });\r\n\r\n        if (response.ok) {\r\n            console.log('Files uploaded successfully');\r\n            // Additional processing...\r\n        } else {\r\n            console.error('Failed to upload files');\r\n        }\r\n    } catch (error) {\r\n        console.error('Error uploading files:', error);\r\n    }\r\n};\r\n\r\n// Function to update file display\r\nconst updateFileDisplay = (files) => {\r\n    fileListRef.current.innerHTML = ''; // Clear previous content\r\n    let totalSize = 0;\r\n    let isFolder = false;\r\n    for (const file of files) {\r\n        totalSize += file.size;\r\n        if (file.webkitRelativePath) {\r\n            isFolder = true;\r\n        }\r\n    }\r\n    const displayText = isFolder ?\r\n        `${files.length} ${files.length <= 1 ? 'file' : 'files'}, ${formatBytes(totalSize)} total size` :\r\n        `${files.length} files, ${formatBytes(totalSize)} total size`;\r\n    fileListRef.current.textContent = displayText;\r\n};\r\n\r\n\r\n    return (\r\n        <div className=\"flex lg:flex-row flex-col w-full transition-container bg-stone-950 items-center justify-center py-28 -mb-12\">\r\n            \r\n            <div className=\"image-input h-full w-full pt-5 pb-7 flex flex-col items-center px-4 gap-14\">\r\n\r\n                <h1 className='text-[50px] lg:max-w-[26ch] font-bold text-indigo-200 text-center'>Upload an image, video, or folder to upscale the quality</h1>\r\n\r\n                <form id=\"folderUpload-formBody\" onSubmit={handleSubmit} encType=\"multipart/form-data\" className='min-w-full lg:min-w-[600px] lg:max-h-[600px]'>\r\n\r\n                    {/* DROP ZONE */}\r\n                    <div\r\n                        ref={dropzoneRef}\r\n                        className={`bg-stone-900 px-8 py-20 text-center rounded-lg border-dashed border-2 hover:border-indigo-400 transition duration-300 ease-in-out transform hover:shadow-lg ${isFileAdded ? 'border-indigo-400' : 'border-indigo-200'}`}\r\n                    >\r\n                        <label htmlFor=\"fileInput\" className=\"cursor-pointer flex flex-col items-center space-y-2\">\r\n                            <svg className={`w-16 h-16 text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\r\n                            </svg>\r\n                            <span className={`text-indigo-200 group-hover:text-indigo-400 transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`}>Drag and drop your files here</span>\r\n                            <span className={`text-indigo-200 group-hover:text-indigo-400 text-sm transition duration-300 ease-in-out transform ${isFileAdded ? 'text-indigo-400' : 'text-indigo-200'}`}>(or click to select)</span>\r\n                        </label>\r\n                        <input id=\"fileInput\" ref={fileInputRef} type=\"file\" className=\"hidden file-list\" name=\"folderUpload\" webkitdirectory=\"true\" directory=\"true\" multiple />\r\n                    </div>\r\n                    \r\n\r\n                    {/* OPTION BUTTONS */}\r\n                    <div className=\"flex w-full items-center justify-center gap-3 cursor-not-allowed\">\r\n                        {/* REFERENCE BOX */}\r\n                        <div className=\"flex flex-col w-full items-center gap-3 ml-1\">\r\n                            <div className=\"text-center w-full text-indigo-950 ring-indigo-400 bg-indigo-300 bg-opacity-50 ring-2 py-1.5 h-[36px]\" ref={fileListRef}></div>                    \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateImageInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}