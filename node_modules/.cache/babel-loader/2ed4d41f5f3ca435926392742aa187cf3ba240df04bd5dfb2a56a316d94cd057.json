{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\pages\\\\UpscaleUploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../components/global/NavBar';\nimport Footer from '../components/global/Footer';\nimport OtherProducts from '../components/global/OtherProducts';\nimport UpscaleImageInput from '../components/upscale-upload/UpscaleImageInput';\nimport ListLookView from '../components/upscale-upload/UpscaleListLookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpscaleUploadPage = () => {\n  _s();\n  const [isUpscaled, setIsUpscaled] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isQualitySet, setIsQualitySet] = useState(false);\n  const onUploadClicked = (files, upscaled, quality) => {\n    setUploadedFiles(files);\n    setIsUpscaled(upscaled);\n    setIsQualitySet(quality);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpscaleImageInput, {\n      onUploadClicked: onUploadClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListLookView, {\n      uploadedFiles: uploadedFiles,\n      isUpscaled: isUpscaled,\n      isQualitySet: isQualitySet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OtherProducts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(UpscaleUploadPage, \"vVjAJg0htneA/+N16pWqBVb6F58=\");\n_c = UpscaleUploadPage;\nexport default UpscaleUploadPage;\nvar _c;\n$RefreshReg$(_c, \"UpscaleUploadPage\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Footer","OtherProducts","UpscaleImageInput","ListLookView","jsxDEV","_jsxDEV","UpscaleUploadPage","_s","isUpscaled","setIsUpscaled","uploadedFiles","setUploadedFiles","isQualitySet","setIsQualitySet","onUploadClicked","files","upscaled","quality","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/pages/UpscaleUploadPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport NavBar from '../components/global/NavBar'\r\nimport Footer from '../components/global/Footer'\r\nimport OtherProducts from '../components/global/OtherProducts'\r\nimport UpscaleImageInput from '../components/upscale-upload/UpscaleImageInput'\r\nimport ListLookView from '../components/upscale-upload/UpscaleListLookView'\r\n\r\nconst UpscaleUploadPage = () => {\r\n\r\n  const [isUpscaled, setIsUpscaled] = useState(false);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [isQualitySet, setIsQualitySet] = useState(false);\r\n  \r\n  const onUploadClicked = (files, upscaled, quality) => {\r\n    setUploadedFiles(files);\r\n    setIsUpscaled(upscaled);\r\n    setIsQualitySet(quality);\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <UpscaleImageInput onUploadClicked={onUploadClicked} />\r\n      <ListLookView \r\n        uploadedFiles={uploadedFiles} \r\n        isUpscaled={isUpscaled} \r\n        isQualitySet={isQualitySet} \r\n      />\r\n      <OtherProducts />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpscaleUploadPage\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,iBAAiB,MAAM,gDAAgD;AAC9E,OAAOC,YAAY,MAAM,kDAAkD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMiB,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,KAAK;IACpDN,gBAAgB,CAACI,KAAK,CAAC;IACvBN,aAAa,CAACO,QAAQ,CAAC;IACvBH,eAAe,CAACI,OAAO,CAAC;EAC5B,CAAC;EAEC,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACN,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVjB,OAAA,CAACH,iBAAiB;MAACY,eAAe,EAAEA;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDjB,OAAA,CAACF,YAAY;MACXO,aAAa,EAAEA,aAAc;MAC7BF,UAAU,EAAEA,UAAW;MACvBI,YAAY,EAAEA;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFjB,OAAA,CAACJ,aAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBjB,OAAA,CAACL,MAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAAAf,EAAA,CAzBKD,iBAAiB;AAAAiB,EAAA,GAAjBjB,iBAAiB;AA2BvB,eAAeA,iBAAiB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}