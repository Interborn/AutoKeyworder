{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dsafr\\\\Documents\\\\Dev\\\\AutoKeyworder\\\\src\\\\pages\\\\UpscaleUploadPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport NavBar from '../components/global/NavBar';\nimport Footer from '../components/global/Footer';\nimport OtherProducts from '../components/global/OtherProducts';\nimport UpscaleImageInput from '../components/upscale-upload/UpscaleImageInput';\nimport ListLookView from '../components/upscale-upload/UpscaleListLookView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpscaleUploadPage = () => {\n  _s();\n  const [isUpscaled, setIsUpscaled] = useState(false);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [isQualitySet, setIsQualitySet] = useState(false);\n  const updateFileLoadingState = (index, isLoading) => {\n    setUploadedFiles(prevFiles => {\n      const newFiles = [...prevFiles];\n      newFiles[index] = {\n        ...newFiles[index],\n        isLoading\n      };\n      return newFiles;\n    });\n  };\n  const onUploadClicked = (files, upscaled, quality) => {\n    const filesWithLoading = files.map(file => ({\n      ...file,\n      // Include all existing file properties\n      isLoading: true // Add a loading state\n    }));\n\n    setUploadedFiles(filesWithLoading);\n    setIsUpscaled(upscaled);\n    setIsQualitySet(quality);\n\n    // Simulate processing completion\n    files.forEach((_, index) => {\n      setTimeout(() => {\n        setUploadedFiles(prevFiles => {\n          const newFiles = [...prevFiles];\n          newFiles[index] = {\n            ...newFiles[index],\n            isLoading: false\n          };\n          return newFiles;\n        });\n      }, 2000); // Example timeout for processing\n    });\n  };\n\n  useEffect(() => {\n    if (uploadedFiles.length > 0) {\n      onUploadClicked(uploadedFiles, isUpscaled, isQualitySet);\n    }\n  }, [uploadedFiles, isUpscaled, isQualitySet]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpscaleImageInput, {\n      onUploadClicked: onUploadClicked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListLookView, {\n      uploadedFiles: uploadedFiles,\n      updateFileLoadingState: updateFileLoadingState,\n      isUpscaled: isUpscaled,\n      isQualitySet: isQualitySet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OtherProducts, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UpscaleUploadPage, \"+YcKpPpqyPoxveMXgEPY+++UX94=\");\n_c = UpscaleUploadPage;\nexport default UpscaleUploadPage;\nvar _c;\n$RefreshReg$(_c, \"UpscaleUploadPage\");","map":{"version":3,"names":["React","useState","useEffect","NavBar","Footer","OtherProducts","UpscaleImageInput","ListLookView","jsxDEV","_jsxDEV","UpscaleUploadPage","_s","isUpscaled","setIsUpscaled","uploadedFiles","setUploadedFiles","isQualitySet","setIsQualitySet","updateFileLoadingState","index","isLoading","prevFiles","newFiles","onUploadClicked","files","upscaled","quality","filesWithLoading","map","file","forEach","_","setTimeout","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dsafr/Documents/Dev/AutoKeyworder/src/pages/UpscaleUploadPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport NavBar from '../components/global/NavBar'\r\nimport Footer from '../components/global/Footer'\r\nimport OtherProducts from '../components/global/OtherProducts'\r\nimport UpscaleImageInput from '../components/upscale-upload/UpscaleImageInput'\r\nimport ListLookView from '../components/upscale-upload/UpscaleListLookView'\r\n\r\nconst UpscaleUploadPage = () => {\r\n\r\n  const [isUpscaled, setIsUpscaled] = useState(false);\r\n  const [uploadedFiles, setUploadedFiles] = useState([]);\r\n  const [isQualitySet, setIsQualitySet] = useState(false);\r\n\r\n  const updateFileLoadingState = (index, isLoading) => {\r\n    setUploadedFiles(prevFiles => {\r\n      const newFiles = [...prevFiles];\r\n      newFiles[index] = { ...newFiles[index], isLoading };\r\n      return newFiles;\r\n    });\r\n  };\r\n  \r\n  const onUploadClicked = (files, upscaled, quality) => {\r\n    const filesWithLoading = files.map(file => ({\r\n        ...file,  // Include all existing file properties\r\n        isLoading: true  // Add a loading state\r\n    }));\r\n    setUploadedFiles(filesWithLoading);\r\n    setIsUpscaled(upscaled);\r\n    setIsQualitySet(quality);\r\n\r\n    // Simulate processing completion\r\n    files.forEach((_, index) => {\r\n      setTimeout(() => {\r\n        setUploadedFiles(prevFiles => {\r\n          const newFiles = [...prevFiles];\r\n          newFiles[index] = { ...newFiles[index], isLoading: false };\r\n          return newFiles;\r\n        });\r\n      }, 2000); // Example timeout for processing\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n      if (uploadedFiles.length > 0) {\r\n          onUploadClicked(uploadedFiles, isUpscaled, isQualitySet);\r\n      }\r\n  }, [uploadedFiles, isUpscaled, isQualitySet]);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <UpscaleImageInput onUploadClicked={onUploadClicked} />\r\n      <ListLookView \r\n        uploadedFiles={uploadedFiles} \r\n        updateFileLoadingState={updateFileLoadingState}\r\n        isUpscaled={isUpscaled} \r\n        isQualitySet={isQualitySet} \r\n      />\r\n      <OtherProducts />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UpscaleUploadPage\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}